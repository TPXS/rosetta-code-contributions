{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1","program":"/Users/trevorschirra/.rustup/toolchains/stable-x86_64-apple-darwin/bin/rls","arguments":["--crate-name","ndarray","--edition=2018","/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","debuginfo=2","--cfg","feature=\"default\"","--cfg","feature=\"std\"","-C","metadata=6afa7fa7195952d4","-C","extra-filename=-6afa7fa7195952d4","--out-dir","/Users/trevorschirra/Documents/GitHub/rosetta-code-contributions/rust_donut_dot_c/target/rls/debug/deps","-L","dependency=/Users/trevorschirra/Documents/GitHub/rosetta-code-contributions/rust_donut_dot_c/target/rls/debug/deps","--extern","matrixmultiply=/Users/trevorschirra/Documents/GitHub/rosetta-code-contributions/rust_donut_dot_c/target/rls/debug/deps/libmatrixmultiply-ce79ef5ab67bd846.rmeta","--extern","num_complex=/Users/trevorschirra/Documents/GitHub/rosetta-code-contributions/rust_donut_dot_c/target/rls/debug/deps/libnum_complex-09e4d868164941a7.rmeta","--extern","num_integer=/Users/trevorschirra/Documents/GitHub/rosetta-code-contributions/rust_donut_dot_c/target/rls/debug/deps/libnum_integer-4bc3f2fd5028dd16.rmeta","--extern","num_traits=/Users/trevorschirra/Documents/GitHub/rosetta-code-contributions/rust_donut_dot_c/target/rls/debug/deps/libnum_traits-7c9bfe91673234cd.rmeta","--extern","rawpointer=/Users/trevorschirra/Documents/GitHub/rosetta-code-contributions/rust_donut_dot_c/target/rls/debug/deps/librawpointer-e17eeafae2ee9291.rmeta","--cap-lints","allow","--error-format=json","--sysroot","/Users/trevorschirra/.rustup/toolchains/stable-x86_64-apple-darwin"],"output":"/Users/trevorschirra/Documents/GitHub/rosetta-code-contributions/rust_donut_dot_c/target/rls/debug/deps/libndarray-6afa7fa7195952d4.rmeta"},"prelude":{"crate_id":{"name":"ndarray","disambiguator":[5513201656613538958,13543634987191276700]},"crate_root":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src","external_crates":[{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[16125995874279485955,8748768413821387129]}},{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","num":2,"id":{"name":"core","disambiguator":[16348493018826829365,4805211970644213659]}},{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[8279628881989909837,14733107812838978533]}},{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[17646096667663791084,12272231044852301253]}},{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[4565760717972533866,4473905522437311200]}},{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[7551666766599439458,2782226154556471377]}},{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[11632633256475535999,13776501019579249840]}},{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[4897607742433192731,640426136460610934]}},{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","num":9,"id":{"name":"hashbrown","disambiguator":[15534826887064733014,5612939005974764181]}},{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[1175232612468424282,18163295741730709113]}},{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","num":11,"id":{"name":"rustc_demangle","disambiguator":[15721596154046543409,2249662874474360977]}},{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","num":12,"id":{"name":"addr2line","disambiguator":[7768511099061914688,4128344505014859734]}},{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","num":13,"id":{"name":"gimli","disambiguator":[15048206832849992118,3387758009953732431]}},{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","num":14,"id":{"name":"object","disambiguator":[13751153714556823430,9887373550715096268]}},{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","num":15,"id":{"name":"panic_unwind","disambiguator":[13432701172845674020,17161827416142858739]}},{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/data_traits.rs","num":16,"id":{"name":"rawpointer","disambiguator":[10605015520220696876,9749778612911920063]}},{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/geomspace.rs","num":17,"id":{"name":"num_traits","disambiguator":[8675320984957262792,12005565997524594420]}},{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/dimension/mod.rs","num":18,"id":{"name":"num_integer","disambiguator":[2942281961605801876,4652208439469525037]}},{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_ops.rs","num":19,"id":{"name":"num_complex","disambiguator":[14948880777908822010,6825728741454339664]}},{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/linalg/impl_linalg.rs","num":20,"id":{"name":"matrixmultiply","disambiguator":[9385346201975902019,8816679039316739312]}}],"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":356,"byte_end":56934,"line_start":8,"line_end":1631,"column_start":1,"column_end":2}},"imports":[{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":6015,"byte_end":6016,"line_start":137,"line_end":137,"column_start":32,"column_end":33},"alias_span":null,"name":"*","value":"Dim","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":5385},"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":6045,"byte_end":6049,"line_start":138,"line_end":138,"column_start":28,"column_end":32},"alias_span":null,"name":"Axis","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":5386},"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":6045,"byte_end":6049,"line_start":138,"line_end":138,"column_start":28,"column_end":32},"alias_span":null,"name":"Axis","value":"","parent":{"krate":0,"index":9}},{"kind":"Use","ref_id":{"krate":0,"index":5369},"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":6051,"byte_end":6066,"line_start":138,"line_end":138,"column_start":34,"column_end":49},"alias_span":null,"name":"AxisDescription","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2388},"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":6068,"byte_end":6077,"line_start":138,"line_end":138,"column_start":51,"column_end":60},"alias_span":null,"name":"Dimension","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2288},"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":6079,"byte_end":6092,"line_start":138,"line_end":138,"column_start":62,"column_end":75},"alias_span":null,"name":"IntoDimension","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2712},"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":6094,"byte_end":6104,"line_start":138,"line_end":138,"column_start":77,"column_end":87},"alias_span":null,"name":"RemoveAxis","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2693},"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":6134,"byte_end":6140,"line_start":139,"line_end":139,"column_start":28,"column_end":34},"alias_span":null,"name":"DimAdd","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2266},"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":6142,"byte_end":6148,"line_start":139,"line_end":139,"column_start":36,"column_end":42},"alias_span":null,"name":"DimMax","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":5853},"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":6178,"byte_end":6187,"line_start":141,"line_end":141,"column_start":27,"column_end":36},"alias_span":null,"name":"IxDynImpl","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2646},"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":6215,"byte_end":6222,"line_start":142,"line_end":142,"column_start":27,"column_end":34},"alias_span":null,"name":"NdIndex","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3931},"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":6247,"byte_end":6256,"line_start":143,"line_end":143,"column_start":24,"column_end":33},"alias_span":null,"name":"ErrorKind","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3927},"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":6258,"byte_end":6268,"line_start":143,"line_end":143,"column_start":35,"column_end":45},"alias_span":null,"name":"ShapeError","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":781},"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":6296,"byte_end":6303,"line_start":144,"line_end":144,"column_start":26,"column_end":33},"alias_span":null,"name":"indices","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":783},"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":6305,"byte_end":6315,"line_start":144,"line_end":144,"column_start":35,"column_end":45},"alias_span":null,"name":"indices_of","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1854},"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":6346,"byte_end":6359,"line_start":146,"line_end":146,"column_start":5,"column_end":18},"alias_span":null,"name":"MultiSliceArg","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":4430},"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":6361,"byte_end":6368,"line_start":146,"line_end":146,"column_start":20,"column_end":27},"alias_span":null,"name":"NewAxis","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":4431},"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":6361,"byte_end":6368,"line_start":146,"line_end":146,"column_start":20,"column_end":27},"alias_span":null,"name":"NewAxis","value":"","parent":{"krate":0,"index":27}},{"kind":"Use","ref_id":{"krate":0,"index":4411},"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":6370,"byte_end":6375,"line_start":146,"line_end":146,"column_start":29,"column_end":34},"alias_span":null,"name":"Slice","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1771},"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":6377,"byte_end":6385,"line_start":146,"line_end":146,"column_start":36,"column_end":44},"alias_span":null,"name":"SliceArg","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":4581},"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":6387,"byte_end":6396,"line_start":146,"line_end":146,"column_start":46,"column_end":55},"alias_span":null,"name":"SliceInfo","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":4437},"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":6398,"byte_end":6411,"line_start":146,"line_end":146,"column_start":57,"column_end":70},"alias_span":null,"name":"SliceInfoElem","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1845},"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":6413,"byte_end":6425,"line_start":146,"line_end":146,"column_start":72,"column_end":84},"alias_span":null,"name":"SliceNextDim","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":398},"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":6569,"byte_end":6576,"line_start":152,"line_end":152,"column_start":29,"column_end":36},"alias_span":null,"name":"AsArray","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1566},"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":6632,"byte_end":6639,"line_start":154,"line_end":154,"column_start":31,"column_end":38},"alias_span":null,"name":"NdFloat","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1563},"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":6671,"byte_end":6683,"line_start":155,"line_end":155,"column_start":31,"column_end":43},"alias_span":null,"name":"LinalgScalar","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1910},"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":6751,"byte_end":6762,"line_start":158,"line_end":158,"column_start":27,"column_end":38},"alias_span":null,"name":"concatenate","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1907},"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":6764,"byte_end":6769,"line_start":158,"line_end":158,"column_start":40,"column_end":45},"alias_span":null,"name":"stack","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1915},"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":6771,"byte_end":6785,"line_start":158,"line_end":158,"column_start":47,"column_end":61},"alias_span":null,"name":"stack_new_axis","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":4357},"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":6815,"byte_end":6823,"line_start":160,"line_end":160,"column_start":27,"column_end":35},"alias_span":null,"name":"MathCell","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3696},"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":6852,"byte_end":6863,"line_start":161,"line_end":161,"column_start":28,"column_end":39},"alias_span":null,"name":"IndexLonger","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":4364},"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":6896,"byte_end":6901,"line_start":162,"line_end":162,"column_start":32,"column_end":37},"alias_span":null,"name":"Shape","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1690},"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":6903,"byte_end":6915,"line_start":162,"line_end":162,"column_start":39,"column_end":51},"alias_span":null,"name":"ShapeBuilder","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":4382},"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":6917,"byte_end":6928,"line_start":162,"line_end":162,"column_start":53,"column_end":64},"alias_span":null,"name":"StrideShape","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":176},"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":7159,"byte_end":7169,"line_start":176,"line_end":176,"column_start":33,"column_end":43},"alias_span":null,"name":"AssignElem","value":"","parent":{"krate":0,"index":0}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":7228,"byte_end":7229,"line_start":180,"line_end":180,"column_start":25,"column_end":26},"alias_span":null,"name":"*","value":"Ix4, Ix3, Ix2, Ix1, ArrayView0, Array5, ArrayView3, Array2, ArrayView6, ArrayViewMut1, ArcArray2, ArrayViewMut6, ArrayViewMut3, ArrayViewMut0, ArrayView5, ArrayView2, Ix0, ArrayD, Array4, Array1, ArcArray1, ArrayViewMut5, ArrayViewMut2, ArrayViewD, ArrayView4, ArrayView1, Array6, Array3, Array0, ArrayViewMutD, ArrayViewMut4, IxDyn, Ix6, Ix5","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":470},"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":7266,"byte_end":7270,"line_start":183,"line_end":183,"column_start":5,"column_end":9},"alias_span":null,"name":"Data","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":475},"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":7272,"byte_end":7279,"line_start":183,"line_end":183,"column_start":11,"column_end":18},"alias_span":null,"name":"DataMut","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":570},"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":7281,"byte_end":7290,"line_start":183,"line_end":183,"column_start":20,"column_end":29},"alias_span":null,"name":"DataOwned","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":574},"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":7292,"byte_end":7302,"line_start":183,"line_end":183,"column_start":31,"column_end":41},"alias_span":null,"name":"DataShared","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":460},"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":7304,"byte_end":7311,"line_start":183,"line_end":183,"column_start":43,"column_end":50},"alias_span":null,"name":"RawData","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":467},"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":7313,"byte_end":7325,"line_start":183,"line_end":183,"column_start":52,"column_end":64},"alias_span":null,"name":"RawDataClone","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":463},"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":7327,"byte_end":7337,"line_start":183,"line_end":183,"column_start":66,"column_end":76},"alias_span":null,"name":"RawDataMut","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":614},"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":7343,"byte_end":7355,"line_start":184,"line_end":184,"column_start":5,"column_end":17},"alias_span":null,"name":"RawDataSubst","value":"","parent":{"krate":0,"index":0}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":7412,"byte_end":7413,"line_start":188,"line_end":188,"column_start":32,"column_end":33},"alias_span":null,"name":"*","value":"aview1, arr1, aview_mut1, arr0, arr2, aview0, aview2","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":907},"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":7441,"byte_end":7445,"line_start":189,"line_end":189,"column_start":27,"column_end":31},"alias_span":null,"name":"iter","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":5358},"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/iterators/iter.rs","byte_start":203896,"byte_end":203900,"line_start":9,"line_end":9,"column_start":27,"column_end":31},"alias_span":null,"name":"Axes","value":"","parent":{"krate":0,"index":907}},{"kind":"Use","ref_id":{"krate":0,"index":3957},"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/iterators/iter.rs","byte_start":203927,"byte_end":203934,"line_start":10,"line_end":10,"column_start":26,"column_end":33},"alias_span":null,"name":"Indices","value":"","parent":{"krate":0,"index":907}},{"kind":"Use","ref_id":{"krate":0,"index":3950},"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/iterators/iter.rs","byte_start":203936,"byte_end":203947,"line_start":10,"line_end":10,"column_start":35,"column_end":46},"alias_span":null,"name":"IndicesIter","value":"","parent":{"krate":0,"index":907}},{"kind":"Use","ref_id":{"krate":0,"index":1446},"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/iterators/iter.rs","byte_start":203982,"byte_end":203996,"line_start":12,"line_end":12,"column_start":5,"column_end":19},"alias_span":null,"name":"AxisChunksIter","value":"","parent":{"krate":0,"index":907}},{"kind":"Use","ref_id":{"krate":0,"index":1463},"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/iterators/iter.rs","byte_start":203998,"byte_end":204015,"line_start":12,"line_end":12,"column_start":21,"column_end":38},"alias_span":null,"name":"AxisChunksIterMut","value":"","parent":{"krate":0,"index":907}},{"kind":"Use","ref_id":{"krate":0,"index":4184},"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/iterators/iter.rs","byte_start":204017,"byte_end":204025,"line_start":12,"line_end":12,"column_start":40,"column_end":48},"alias_span":null,"name":"AxisIter","value":"","parent":{"krate":0,"index":907}},{"kind":"Use","ref_id":{"krate":0,"index":1382},"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/iterators/iter.rs","byte_start":204027,"byte_end":204038,"line_start":12,"line_end":12,"column_start":50,"column_end":61},"alias_span":null,"name":"AxisIterMut","value":"","parent":{"krate":0,"index":907}},{"kind":"Use","ref_id":{"krate":0,"index":853},"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/iterators/iter.rs","byte_start":204040,"byte_end":204051,"line_start":12,"line_end":12,"column_start":63,"column_end":74},"alias_span":null,"name":"ExactChunks","value":"","parent":{"krate":0,"index":907}},{"kind":"Use","ref_id":{"krate":0,"index":873},"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/iterators/iter.rs","byte_start":204053,"byte_end":204068,"line_start":12,"line_end":12,"column_start":76,"column_end":91},"alias_span":null,"name":"ExactChunksIter","value":"","parent":{"krate":0,"index":907}},{"kind":"Use","ref_id":{"krate":0,"index":900},"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/iterators/iter.rs","byte_start":204074,"byte_end":204092,"line_start":13,"line_end":13,"column_start":5,"column_end":23},"alias_span":null,"name":"ExactChunksIterMut","value":"","parent":{"krate":0,"index":907}},{"kind":"Use","ref_id":{"krate":0,"index":880},"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/iterators/iter.rs","byte_start":204094,"byte_end":204108,"line_start":13,"line_end":13,"column_start":25,"column_end":39},"alias_span":null,"name":"ExactChunksMut","value":"","parent":{"krate":0,"index":907}},{"kind":"Use","ref_id":{"krate":0,"index":4151},"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/iterators/iter.rs","byte_start":204110,"byte_end":204121,"line_start":13,"line_end":13,"column_start":41,"column_end":52},"alias_span":null,"name":"IndexedIter","value":"","parent":{"krate":0,"index":907}},{"kind":"Use","ref_id":{"krate":0,"index":4152},"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/iterators/iter.rs","byte_start":204110,"byte_end":204121,"line_start":13,"line_end":13,"column_start":41,"column_end":52},"alias_span":null,"name":"IndexedIter","value":"","parent":{"krate":0,"index":921}},{"kind":"Use","ref_id":{"krate":0,"index":1144},"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/iterators/iter.rs","byte_start":204123,"byte_end":204137,"line_start":13,"line_end":13,"column_start":54,"column_end":68},"alias_span":null,"name":"IndexedIterMut","value":"","parent":{"krate":0,"index":907}},{"kind":"Use","ref_id":{"krate":0,"index":1145},"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/iterators/iter.rs","byte_start":204123,"byte_end":204137,"line_start":13,"line_end":13,"column_start":54,"column_end":68},"alias_span":null,"name":"IndexedIterMut","value":"","parent":{"krate":0,"index":922}},{"kind":"Use","ref_id":{"krate":0,"index":1117},"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/iterators/iter.rs","byte_start":204139,"byte_end":204143,"line_start":13,"line_end":13,"column_start":70,"column_end":74},"alias_span":null,"name":"Iter","value":"","parent":{"krate":0,"index":907}},{"kind":"Use","ref_id":{"krate":0,"index":1128},"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/iterators/iter.rs","byte_start":204145,"byte_end":204152,"line_start":13,"line_end":13,"column_start":76,"column_end":83},"alias_span":null,"name":"IterMut","value":"","parent":{"krate":0,"index":907}},{"kind":"Use","ref_id":{"krate":0,"index":938},"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/iterators/iter.rs","byte_start":204154,"byte_end":204159,"line_start":13,"line_end":13,"column_start":85,"column_end":90},"alias_span":null,"name":"Lanes","value":"","parent":{"krate":0,"index":907}},{"kind":"Use","ref_id":{"krate":0,"index":1288},"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/iterators/iter.rs","byte_start":204165,"byte_end":204174,"line_start":14,"line_end":14,"column_start":5,"column_end":14},"alias_span":null,"name":"LanesIter","value":"","parent":{"krate":0,"index":907}},{"kind":"Use","ref_id":{"krate":0,"index":1309},"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/iterators/iter.rs","byte_start":204176,"byte_end":204188,"line_start":14,"line_end":14,"column_start":16,"column_end":28},"alias_span":null,"name":"LanesIterMut","value":"","parent":{"krate":0,"index":907}},{"kind":"Use","ref_id":{"krate":0,"index":958},"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/iterators/iter.rs","byte_start":204190,"byte_end":204198,"line_start":14,"line_end":14,"column_start":30,"column_end":38},"alias_span":null,"name":"LanesMut","value":"","parent":{"krate":0,"index":907}},{"kind":"Use","ref_id":{"krate":0,"index":984},"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/iterators/iter.rs","byte_start":204200,"byte_end":204207,"line_start":14,"line_end":14,"column_start":40,"column_end":47},"alias_span":null,"name":"Windows","value":"","parent":{"krate":0,"index":907}},{"kind":"Use","ref_id":{"krate":0,"index":5358},"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/dimension/mod.rs","byte_start":325767,"byte_end":325771,"line_start":14,"line_end":14,"column_start":22,"column_end":26},"alias_span":null,"name":"Axes","value":"","parent":{"krate":0,"index":2181}},{"kind":"Use","ref_id":{"krate":0,"index":5853},"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/dimension/mod.rs","byte_start":326019,"byte_end":326028,"line_start":21,"line_end":21,"column_start":29,"column_end":38},"alias_span":null,"name":"IxDynImpl","value":"","parent":{"krate":0,"index":2181}},{"kind":"Use","ref_id":{"krate":0,"index":2646},"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/dimension/mod.rs","byte_start":326053,"byte_end":326060,"line_start":22,"line_end":22,"column_start":24,"column_end":31},"alias_span":null,"name":"NdIndex","value":"","parent":{"krate":0,"index":2181}},{"kind":"Use","ref_id":{"krate":0,"index":5342},"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":7753,"byte_end":7762,"line_start":213,"line_end":213,"column_start":22,"column_end":31},"alias_span":null,"name":"FoldWhile","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1931},"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":7764,"byte_end":7778,"line_start":213,"line_end":213,"column_start":33,"column_end":47},"alias_span":null,"name":"IntoNdProducer","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1942},"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":7780,"byte_end":7790,"line_start":213,"line_end":213,"column_start":49,"column_end":59},"alias_span":null,"name":"NdProducer","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":4781},"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":7792,"byte_end":7795,"line_start":213,"line_end":213,"column_start":61,"column_end":64},"alias_span":null,"name":"Zip","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":4351},"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":7822,"byte_end":7828,"line_start":215,"line_end":215,"column_start":24,"column_end":30},"alias_span":null,"name":"Layout","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2882},"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/prelude.rs","byte_start":426977,"byte_end":426985,"line_start":21,"line_end":21,"column_start":5,"column_end":13},"alias_span":null,"name":"ArcArray","value":"","parent":{"krate":0,"index":2807}},{"kind":"Use","ref_id":{"krate":0,"index":2885},"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/prelude.rs","byte_start":426987,"byte_end":426992,"line_start":21,"line_end":21,"column_start":15,"column_end":20},"alias_span":null,"name":"Array","value":"","parent":{"krate":0,"index":2807}},{"kind":"Use","ref_id":{"krate":0,"index":2875},"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/prelude.rs","byte_start":426994,"byte_end":427003,"line_start":21,"line_end":21,"column_start":22,"column_end":31},"alias_span":null,"name":"ArrayBase","value":"","parent":{"krate":0,"index":2807}},{"kind":"Use","ref_id":{"krate":0,"index":2892},"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/prelude.rs","byte_start":427005,"byte_end":427014,"line_start":21,"line_end":21,"column_start":33,"column_end":42},"alias_span":null,"name":"ArrayView","value":"","parent":{"krate":0,"index":2807}},{"kind":"Use","ref_id":{"krate":0,"index":2896},"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/prelude.rs","byte_start":427016,"byte_end":427028,"line_start":21,"line_end":21,"column_start":44,"column_end":56},"alias_span":null,"name":"ArrayViewMut","value":"","parent":{"krate":0,"index":2807}},{"kind":"Use","ref_id":{"krate":0,"index":2888},"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/prelude.rs","byte_start":427030,"byte_end":427038,"line_start":21,"line_end":21,"column_start":58,"column_end":66},"alias_span":null,"name":"CowArray","value":"","parent":{"krate":0,"index":2807}},{"kind":"Use","ref_id":{"krate":0,"index":2900},"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/prelude.rs","byte_start":427040,"byte_end":427052,"line_start":21,"line_end":21,"column_start":68,"column_end":80},"alias_span":null,"name":"RawArrayView","value":"","parent":{"krate":0,"index":2807}},{"kind":"Use","ref_id":{"krate":0,"index":2903},"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/prelude.rs","byte_start":427054,"byte_end":427069,"line_start":21,"line_end":21,"column_start":82,"column_end":97},"alias_span":null,"name":"RawArrayViewMut","value":"","parent":{"krate":0,"index":2807}},{"kind":"Use","ref_id":{"krate":0,"index":5385},"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/prelude.rs","byte_start":427109,"byte_end":427113,"line_start":25,"line_end":25,"column_start":17,"column_end":21},"alias_span":null,"name":"Axis","value":"","parent":{"krate":0,"index":2807}},{"kind":"Use","ref_id":{"krate":0,"index":5386},"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/prelude.rs","byte_start":427109,"byte_end":427113,"line_start":25,"line_end":25,"column_start":17,"column_end":21},"alias_span":null,"name":"Axis","value":"","parent":{"krate":0,"index":2818}},{"kind":"Use","ref_id":{"krate":0,"index":5698},"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/prelude.rs","byte_start":427115,"byte_end":427118,"line_start":25,"line_end":25,"column_start":23,"column_end":26},"alias_span":null,"name":"Dim","value":"","parent":{"krate":0,"index":2807}},{"kind":"Use","ref_id":{"krate":0,"index":2324},"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/prelude.rs","byte_start":427115,"byte_end":427118,"line_start":25,"line_end":25,"column_start":23,"column_end":26},"alias_span":null,"name":"Dim","value":"","parent":{"krate":0,"index":2819}},{"kind":"Use","ref_id":{"krate":0,"index":2388},"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/prelude.rs","byte_start":427120,"byte_end":427129,"line_start":25,"line_end":25,"column_start":28,"column_end":37},"alias_span":null,"name":"Dimension","value":"","parent":{"krate":0,"index":2807}},{"kind":"Use","ref_id":{"krate":0,"index":96},"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/prelude.rs","byte_start":427167,"byte_end":427173,"line_start":28,"line_end":28,"column_start":17,"column_end":23},"alias_span":null,"name":"Array0","value":"","parent":{"krate":0,"index":2807}},{"kind":"Use","ref_id":{"krate":0,"index":98},"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/prelude.rs","byte_start":427175,"byte_end":427181,"line_start":28,"line_end":28,"column_start":25,"column_end":31},"alias_span":null,"name":"Array1","value":"","parent":{"krate":0,"index":2807}},{"kind":"Use","ref_id":{"krate":0,"index":100},"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/prelude.rs","byte_start":427183,"byte_end":427189,"line_start":28,"line_end":28,"column_start":33,"column_end":39},"alias_span":null,"name":"Array2","value":"","parent":{"krate":0,"index":2807}},{"kind":"Use","ref_id":{"krate":0,"index":102},"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/prelude.rs","byte_start":427191,"byte_end":427197,"line_start":28,"line_end":28,"column_start":41,"column_end":47},"alias_span":null,"name":"Array3","value":"","parent":{"krate":0,"index":2807}},{"kind":"Use","ref_id":{"krate":0,"index":104},"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/prelude.rs","byte_start":427199,"byte_end":427205,"line_start":28,"line_end":28,"column_start":49,"column_end":55},"alias_span":null,"name":"Array4","value":"","parent":{"krate":0,"index":2807}},{"kind":"Use","ref_id":{"krate":0,"index":106},"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/prelude.rs","byte_start":427207,"byte_end":427213,"line_start":28,"line_end":28,"column_start":57,"column_end":63},"alias_span":null,"name":"Array5","value":"","parent":{"krate":0,"index":2807}},{"kind":"Use","ref_id":{"krate":0,"index":108},"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/prelude.rs","byte_start":427215,"byte_end":427221,"line_start":28,"line_end":28,"column_start":65,"column_end":71},"alias_span":null,"name":"Array6","value":"","parent":{"krate":0,"index":2807}},{"kind":"Use","ref_id":{"krate":0,"index":110},"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/prelude.rs","byte_start":427223,"byte_end":427229,"line_start":28,"line_end":28,"column_start":73,"column_end":79},"alias_span":null,"name":"ArrayD","value":"","parent":{"krate":0,"index":2807}},{"kind":"Use","ref_id":{"krate":0,"index":112},"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/prelude.rs","byte_start":427272,"byte_end":427282,"line_start":32,"line_end":32,"column_start":5,"column_end":15},"alias_span":null,"name":"ArrayView0","value":"","parent":{"krate":0,"index":2807}},{"kind":"Use","ref_id":{"krate":0,"index":115},"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/prelude.rs","byte_start":427284,"byte_end":427294,"line_start":32,"line_end":32,"column_start":17,"column_end":27},"alias_span":null,"name":"ArrayView1","value":"","parent":{"krate":0,"index":2807}},{"kind":"Use","ref_id":{"krate":0,"index":118},"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/prelude.rs","byte_start":427296,"byte_end":427306,"line_start":32,"line_end":32,"column_start":29,"column_end":39},"alias_span":null,"name":"ArrayView2","value":"","parent":{"krate":0,"index":2807}},{"kind":"Use","ref_id":{"krate":0,"index":121},"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/prelude.rs","byte_start":427308,"byte_end":427318,"line_start":32,"line_end":32,"column_start":41,"column_end":51},"alias_span":null,"name":"ArrayView3","value":"","parent":{"krate":0,"index":2807}},{"kind":"Use","ref_id":{"krate":0,"index":124},"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/prelude.rs","byte_start":427320,"byte_end":427330,"line_start":32,"line_end":32,"column_start":53,"column_end":63},"alias_span":null,"name":"ArrayView4","value":"","parent":{"krate":0,"index":2807}},{"kind":"Use","ref_id":{"krate":0,"index":127},"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/prelude.rs","byte_start":427332,"byte_end":427342,"line_start":32,"line_end":32,"column_start":65,"column_end":75},"alias_span":null,"name":"ArrayView5","value":"","parent":{"krate":0,"index":2807}},{"kind":"Use","ref_id":{"krate":0,"index":130},"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/prelude.rs","byte_start":427344,"byte_end":427354,"line_start":32,"line_end":32,"column_start":77,"column_end":87},"alias_span":null,"name":"ArrayView6","value":"","parent":{"krate":0,"index":2807}},{"kind":"Use","ref_id":{"krate":0,"index":133},"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/prelude.rs","byte_start":427356,"byte_end":427366,"line_start":32,"line_end":32,"column_start":89,"column_end":99},"alias_span":null,"name":"ArrayViewD","value":"","parent":{"krate":0,"index":2807}},{"kind":"Use","ref_id":{"krate":0,"index":136},"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/prelude.rs","byte_start":427411,"byte_end":427424,"line_start":37,"line_end":37,"column_start":5,"column_end":18},"alias_span":null,"name":"ArrayViewMut0","value":"","parent":{"krate":0,"index":2807}},{"kind":"Use","ref_id":{"krate":0,"index":139},"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/prelude.rs","byte_start":427426,"byte_end":427439,"line_start":37,"line_end":37,"column_start":20,"column_end":33},"alias_span":null,"name":"ArrayViewMut1","value":"","parent":{"krate":0,"index":2807}},{"kind":"Use","ref_id":{"krate":0,"index":142},"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/prelude.rs","byte_start":427441,"byte_end":427454,"line_start":37,"line_end":37,"column_start":35,"column_end":48},"alias_span":null,"name":"ArrayViewMut2","value":"","parent":{"krate":0,"index":2807}},{"kind":"Use","ref_id":{"krate":0,"index":145},"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/prelude.rs","byte_start":427456,"byte_end":427469,"line_start":37,"line_end":37,"column_start":50,"column_end":63},"alias_span":null,"name":"ArrayViewMut3","value":"","parent":{"krate":0,"index":2807}},{"kind":"Use","ref_id":{"krate":0,"index":148},"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/prelude.rs","byte_start":427471,"byte_end":427484,"line_start":37,"line_end":37,"column_start":65,"column_end":78},"alias_span":null,"name":"ArrayViewMut4","value":"","parent":{"krate":0,"index":2807}},{"kind":"Use","ref_id":{"krate":0,"index":151},"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/prelude.rs","byte_start":427486,"byte_end":427499,"line_start":37,"line_end":37,"column_start":80,"column_end":93},"alias_span":null,"name":"ArrayViewMut5","value":"","parent":{"krate":0,"index":2807}},{"kind":"Use","ref_id":{"krate":0,"index":154},"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/prelude.rs","byte_start":427505,"byte_end":427518,"line_start":38,"line_end":38,"column_start":5,"column_end":18},"alias_span":null,"name":"ArrayViewMut6","value":"","parent":{"krate":0,"index":2807}},{"kind":"Use","ref_id":{"krate":0,"index":157},"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/prelude.rs","byte_start":427520,"byte_end":427533,"line_start":38,"line_end":38,"column_start":20,"column_end":33},"alias_span":null,"name":"ArrayViewMutD","value":"","parent":{"krate":0,"index":2807}},{"kind":"Use","ref_id":{"krate":0,"index":81},"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/prelude.rs","byte_start":427573,"byte_end":427576,"line_start":42,"line_end":42,"column_start":17,"column_end":20},"alias_span":null,"name":"Ix0","value":"","parent":{"krate":0,"index":2807}},{"kind":"Use","ref_id":{"krate":0,"index":73},"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/prelude.rs","byte_start":427573,"byte_end":427576,"line_start":42,"line_end":42,"column_start":17,"column_end":20},"alias_span":null,"name":"Ix0","value":"","parent":{"krate":0,"index":2849}},{"kind":"Use","ref_id":{"krate":0,"index":83},"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/prelude.rs","byte_start":427578,"byte_end":427581,"line_start":42,"line_end":42,"column_start":22,"column_end":25},"alias_span":null,"name":"Ix1","value":"","parent":{"krate":0,"index":2807}},{"kind":"Use","ref_id":{"krate":0,"index":74},"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/prelude.rs","byte_start":427578,"byte_end":427581,"line_start":42,"line_end":42,"column_start":22,"column_end":25},"alias_span":null,"name":"Ix1","value":"","parent":{"krate":0,"index":2850}},{"kind":"Use","ref_id":{"krate":0,"index":85},"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/prelude.rs","byte_start":427583,"byte_end":427586,"line_start":42,"line_end":42,"column_start":27,"column_end":30},"alias_span":null,"name":"Ix2","value":"","parent":{"krate":0,"index":2807}},{"kind":"Use","ref_id":{"krate":0,"index":75},"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/prelude.rs","byte_start":427583,"byte_end":427586,"line_start":42,"line_end":42,"column_start":27,"column_end":30},"alias_span":null,"name":"Ix2","value":"","parent":{"krate":0,"index":2851}},{"kind":"Use","ref_id":{"krate":0,"index":87},"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/prelude.rs","byte_start":427588,"byte_end":427591,"line_start":42,"line_end":42,"column_start":32,"column_end":35},"alias_span":null,"name":"Ix3","value":"","parent":{"krate":0,"index":2807}},{"kind":"Use","ref_id":{"krate":0,"index":76},"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/prelude.rs","byte_start":427588,"byte_end":427591,"line_start":42,"line_end":42,"column_start":32,"column_end":35},"alias_span":null,"name":"Ix3","value":"","parent":{"krate":0,"index":2852}},{"kind":"Use","ref_id":{"krate":0,"index":89},"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/prelude.rs","byte_start":427593,"byte_end":427596,"line_start":42,"line_end":42,"column_start":37,"column_end":40},"alias_span":null,"name":"Ix4","value":"","parent":{"krate":0,"index":2807}},{"kind":"Use","ref_id":{"krate":0,"index":77},"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/prelude.rs","byte_start":427593,"byte_end":427596,"line_start":42,"line_end":42,"column_start":37,"column_end":40},"alias_span":null,"name":"Ix4","value":"","parent":{"krate":0,"index":2853}},{"kind":"Use","ref_id":{"krate":0,"index":91},"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/prelude.rs","byte_start":427598,"byte_end":427601,"line_start":42,"line_end":42,"column_start":42,"column_end":45},"alias_span":null,"name":"Ix5","value":"","parent":{"krate":0,"index":2807}},{"kind":"Use","ref_id":{"krate":0,"index":78},"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/prelude.rs","byte_start":427598,"byte_end":427601,"line_start":42,"line_end":42,"column_start":42,"column_end":45},"alias_span":null,"name":"Ix5","value":"","parent":{"krate":0,"index":2854}},{"kind":"Use","ref_id":{"krate":0,"index":93},"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/prelude.rs","byte_start":427603,"byte_end":427606,"line_start":42,"line_end":42,"column_start":47,"column_end":50},"alias_span":null,"name":"Ix6","value":"","parent":{"krate":0,"index":2807}},{"kind":"Use","ref_id":{"krate":0,"index":79},"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/prelude.rs","byte_start":427603,"byte_end":427606,"line_start":42,"line_end":42,"column_start":47,"column_end":50},"alias_span":null,"name":"Ix6","value":"","parent":{"krate":0,"index":2855}},{"kind":"Use","ref_id":{"krate":0,"index":95},"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/prelude.rs","byte_start":427608,"byte_end":427613,"line_start":42,"line_end":42,"column_start":52,"column_end":57},"alias_span":null,"name":"IxDyn","value":"","parent":{"krate":0,"index":2807}},{"kind":"Use","ref_id":{"krate":0,"index":80},"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/prelude.rs","byte_start":427608,"byte_end":427613,"line_start":42,"line_end":42,"column_start":52,"column_end":57},"alias_span":null,"name":"IxDyn","value":"","parent":{"krate":0,"index":2856}},{"kind":"Use","ref_id":{"krate":0,"index":673},"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/prelude.rs","byte_start":427651,"byte_end":427655,"line_start":45,"line_end":45,"column_start":17,"column_end":21},"alias_span":null,"name":"arr0","value":"","parent":{"krate":0,"index":2807}},{"kind":"Use","ref_id":{"krate":0,"index":675},"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/prelude.rs","byte_start":427657,"byte_end":427661,"line_start":45,"line_end":45,"column_start":23,"column_end":27},"alias_span":null,"name":"arr1","value":"","parent":{"krate":0,"index":2807}},{"kind":"Use","ref_id":{"krate":0,"index":696},"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/prelude.rs","byte_start":427663,"byte_end":427667,"line_start":45,"line_end":45,"column_start":29,"column_end":33},"alias_span":null,"name":"arr2","value":"","parent":{"krate":0,"index":2807}},{"kind":"Use","ref_id":{"krate":0,"index":679},"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/prelude.rs","byte_start":427669,"byte_end":427675,"line_start":45,"line_end":45,"column_start":35,"column_end":41},"alias_span":null,"name":"aview0","value":"","parent":{"krate":0,"index":2807}},{"kind":"Use","ref_id":{"krate":0,"index":681},"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/prelude.rs","byte_start":427677,"byte_end":427683,"line_start":45,"line_end":45,"column_start":43,"column_end":49},"alias_span":null,"name":"aview1","value":"","parent":{"krate":0,"index":2807}},{"kind":"Use","ref_id":{"krate":0,"index":683},"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/prelude.rs","byte_start":427685,"byte_end":427691,"line_start":45,"line_end":45,"column_start":51,"column_end":57},"alias_span":null,"name":"aview2","value":"","parent":{"krate":0,"index":2807}},{"kind":"Use","ref_id":{"krate":0,"index":686},"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/prelude.rs","byte_start":427693,"byte_end":427703,"line_start":45,"line_end":45,"column_start":59,"column_end":69},"alias_span":null,"name":"aview_mut1","value":"","parent":{"krate":0,"index":2807}},{"kind":"Use","ref_id":{"krate":0,"index":672},"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/prelude.rs","byte_start":427723,"byte_end":427728,"line_start":47,"line_end":47,"column_start":17,"column_end":22},"alias_span":null,"name":"array","value":"","parent":{"krate":0,"index":2807}},{"kind":"Use","ref_id":{"krate":0,"index":1925},"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/prelude.rs","byte_start":427730,"byte_end":427734,"line_start":47,"line_end":47,"column_start":24,"column_end":28},"alias_span":null,"name":"azip","value":"","parent":{"krate":0,"index":2807}},{"kind":"Use","ref_id":{"krate":0,"index":1853},"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/prelude.rs","byte_start":427736,"byte_end":427737,"line_start":47,"line_end":47,"column_start":30,"column_end":31},"alias_span":null,"name":"s","value":"","parent":{"krate":0,"index":2807}},{"kind":"Use","ref_id":{"krate":0,"index":1690},"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/prelude.rs","byte_start":427774,"byte_end":427786,"line_start":50,"line_end":50,"column_start":16,"column_end":28},"alias_span":null,"name":"ShapeBuilder","value":"","parent":{"krate":0,"index":2807}},{"kind":"Use","ref_id":{"krate":0,"index":4430},"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/prelude.rs","byte_start":427822,"byte_end":427829,"line_start":53,"line_end":53,"column_start":16,"column_end":23},"alias_span":null,"name":"NewAxis","value":"","parent":{"krate":0,"index":2807}},{"kind":"Use","ref_id":{"krate":0,"index":4431},"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/prelude.rs","byte_start":427822,"byte_end":427829,"line_start":53,"line_end":53,"column_start":16,"column_end":23},"alias_span":null,"name":"NewAxis","value":"","parent":{"krate":0,"index":2870}},{"kind":"Use","ref_id":{"krate":0,"index":398},"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/prelude.rs","byte_start":427865,"byte_end":427872,"line_start":56,"line_end":56,"column_start":16,"column_end":23},"alias_span":null,"name":"AsArray","value":"","parent":{"krate":0,"index":2807}},{"kind":"Use","ref_id":{"krate":0,"index":1566},"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/prelude.rs","byte_start":427932,"byte_end":427939,"line_start":60,"line_end":60,"column_start":16,"column_end":23},"alias_span":null,"name":"NdFloat","value":"","parent":{"krate":0,"index":2807}},{"kind":"Use","ref_id":{"krate":0,"index":3809},"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":52061,"byte_end":52070,"line_start":1440,"line_end":1440,"column_start":20,"column_end":29},"alias_span":null,"name":"OwnedRepr","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3488},"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/linalg/mod.rs","byte_start":563958,"byte_end":563973,"line_start":11,"line_end":11,"column_start":28,"column_end":43},"alias_span":null,"name":"general_mat_mul","value":"","parent":{"krate":0,"index":3420}},{"kind":"Use","ref_id":{"krate":0,"index":3493},"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/linalg/mod.rs","byte_start":564002,"byte_end":564021,"line_start":12,"line_end":12,"column_start":28,"column_end":47},"alias_span":null,"name":"general_mat_vec_mul","value":"","parent":{"krate":0,"index":3420}},{"kind":"Use","ref_id":{"krate":0,"index":3441},"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/linalg/mod.rs","byte_start":564050,"byte_end":564053,"line_start":13,"line_end":13,"column_start":28,"column_end":31},"alias_span":null,"name":"Dot","value":"","parent":{"krate":0,"index":3420}},{"kind":"Use","ref_id":{"krate":0,"index":3514},"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":56586,"byte_end":56599,"line_start":1614,"line_end":1614,"column_start":26,"column_end":39},"alias_span":null,"name":"ScalarOperand","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":356,"byte_end":56934,"line_start":8,"line_end":1631,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":5},{"krate":0,"index":8379},{"krate":0,"index":6},{"krate":0,"index":7},{"krate":0,"index":8},{"krate":0,"index":9},{"krate":0,"index":8383},{"krate":0,"index":10},{"krate":0,"index":11},{"krate":0,"index":12},{"krate":0,"index":13},{"krate":0,"index":14},{"krate":0,"index":15},{"krate":0,"index":16},{"krate":0,"index":17},{"krate":0,"index":18},{"krate":0,"index":19},{"krate":0,"index":20},{"krate":0,"index":21},{"krate":0,"index":22},{"krate":0,"index":23},{"krate":0,"index":24},{"krate":0,"index":25},{"krate":0,"index":26},{"krate":0,"index":27},{"krate":0,"index":8411},{"krate":0,"index":28},{"krate":0,"index":29},{"krate":0,"index":30},{"krate":0,"index":31},{"krate":0,"index":32},{"krate":0,"index":33},{"krate":0,"index":34},{"krate":0,"index":35},{"krate":0,"index":36},{"krate":0,"index":37},{"krate":0,"index":38},{"krate":0,"index":39},{"krate":0,"index":40},{"krate":0,"index":41},{"krate":0,"index":42},{"krate":0,"index":43},{"krate":0,"index":44},{"krate":0,"index":45},{"krate":0,"index":46},{"krate":0,"index":47},{"krate":0,"index":48},{"krate":0,"index":49},{"krate":0,"index":50},{"krate":0,"index":51},{"krate":0,"index":52},{"krate":0,"index":53},{"krate":0,"index":59},{"krate":0,"index":64},{"krate":0,"index":164},{"krate":0,"index":172},{"krate":0,"index":195},{"krate":0,"index":264},{"krate":0,"index":412},{"krate":0,"index":413},{"krate":0,"index":443},{"krate":0,"index":650},{"krate":0,"index":651},{"krate":0,"index":652},{"krate":0,"index":653},{"krate":0,"index":654},{"krate":0,"index":655},{"krate":0,"index":656},{"krate":0,"index":657},{"krate":0,"index":658},{"krate":0,"index":659},{"krate":0,"index":660},{"krate":0,"index":719},{"krate":0,"index":720},{"krate":0,"index":721},{"krate":0,"index":741},{"krate":0,"index":749},{"krate":0,"index":770},{"krate":0,"index":831},{"krate":0,"index":1521},{"krate":0,"index":1545},{"krate":0,"index":1569},{"krate":0,"index":1591},{"krate":0,"index":1613},{"krate":0,"index":1653},{"krate":0,"index":1665},{"krate":0,"index":1680},{"krate":0,"index":1723},{"krate":0,"index":1881},{"krate":0,"index":1901},{"krate":0,"index":1923},{"krate":0,"index":2181},{"krate":0,"index":2784},{"krate":0,"index":2785},{"krate":0,"index":2786},{"krate":0,"index":2787},{"krate":0,"index":2788},{"krate":0,"index":2789},{"krate":0,"index":2790},{"krate":0,"index":2807},{"krate":0,"index":2873},{"krate":0,"index":2874},{"krate":0,"index":2875},{"krate":0,"index":2882},{"krate":0,"index":2885},{"krate":0,"index":2888},{"krate":0,"index":2892},{"krate":0,"index":2896},{"krate":0,"index":2900},{"krate":0,"index":2903},{"krate":0,"index":2906},{"krate":0,"index":6183},{"krate":0,"index":6187},{"krate":0,"index":2907},{"krate":0,"index":6190},{"krate":0,"index":6196},{"krate":0,"index":6193},{"krate":0,"index":2910},{"krate":0,"index":6198},{"krate":0,"index":6204},{"krate":0,"index":6201},{"krate":0,"index":2913},{"krate":0,"index":2916},{"krate":0,"index":2925},{"krate":0,"index":2930},{"krate":0,"index":2941},{"krate":0,"index":2954},{"krate":0,"index":3035},{"krate":0,"index":3328},{"krate":0,"index":3338},{"krate":0,"index":3347},{"krate":0,"index":3361},{"krate":0,"index":3368},{"krate":0,"index":3380},{"krate":0,"index":3387},{"krate":0,"index":3420},{"krate":0,"index":3510},{"krate":0,"index":3592},{"krate":0,"index":3593},{"krate":0,"index":3742},{"krate":0,"index":3781},{"krate":0,"index":3799}],"decl_id":null,"docs":" The `ndarray` crate provides an *n*-dimensional container for general elements\n and for numerics.","sig":null,"attributes":[{"value":"crate_name = \"ndarray\"","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":356,"byte_end":382,"line_start":8,"line_end":8,"column_start":1,"column_end":27}},{"value":"allow(clippy :: many_single_char_names, clippy :: deref_addrof, clippy ::\n        unreadable_literal, clippy :: manual_map,)","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":440,"byte_end":589,"line_start":10,"line_end":15,"column_start":1,"column_end":3}},{"value":"/ The `ndarray` crate provides an *n*-dimensional container for general elements","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":634,"byte_end":716,"line_start":18,"line_end":18,"column_start":1,"column_end":83}},{"value":"/ and for numerics.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":717,"byte_end":738,"line_start":19,"line_end":19,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":739,"byte_end":742,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ In *n*-dimensional we include for example 1-dimensional rows or columns,","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":743,"byte_end":819,"line_start":21,"line_end":21,"column_start":1,"column_end":77}},{"value":"/ 2-dimensional matrices, and higher dimensional arrays. If the array has *n*","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":820,"byte_end":899,"line_start":22,"line_end":22,"column_start":1,"column_end":80}},{"value":"/ dimensions, then an element in the array is accessed by using that many indices.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":900,"byte_end":984,"line_start":23,"line_end":23,"column_start":1,"column_end":85}},{"value":"/ Each dimension is also called an *axis*.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":985,"byte_end":1029,"line_start":24,"line_end":24,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":1030,"byte_end":1033,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ - **[`ArrayBase`](struct.ArrayBase.html)**:","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":1034,"byte_end":1081,"line_start":26,"line_end":26,"column_start":1,"column_end":48}},{"value":"/   The *n*-dimensional array type itself.<br>","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":1082,"byte_end":1130,"line_start":27,"line_end":27,"column_start":1,"column_end":49}},{"value":"/   It is used to implement both the owned arrays and the views; see its docs","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":1131,"byte_end":1210,"line_start":28,"line_end":28,"column_start":1,"column_end":80}},{"value":"/   for an overview of all array features.<br>","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":1211,"byte_end":1259,"line_start":29,"line_end":29,"column_start":1,"column_end":49}},{"value":"/ - The main specific array type is **[`Array`](type.Array.html)**, which owns","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":1260,"byte_end":1340,"line_start":30,"line_end":30,"column_start":1,"column_end":81}},{"value":"/ its elements.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":1341,"byte_end":1358,"line_start":31,"line_end":31,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":1359,"byte_end":1362,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ ## Highlights","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":1363,"byte_end":1380,"line_start":33,"line_end":33,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":1381,"byte_end":1384,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ - Generic *n*-dimensional array","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":1385,"byte_end":1420,"line_start":35,"line_end":35,"column_start":1,"column_end":36}},{"value":"/ - Slicing, also with arbitrary step size, and negative indices to mean","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":1421,"byte_end":1495,"line_start":36,"line_end":36,"column_start":1,"column_end":75}},{"value":"/   elements from the end of the axis.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":1496,"byte_end":1536,"line_start":37,"line_end":37,"column_start":1,"column_end":41}},{"value":"/ - Views and subviews of arrays; iterators that yield subviews.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":1537,"byte_end":1603,"line_start":38,"line_end":38,"column_start":1,"column_end":67}},{"value":"/ - Higher order operations and arithmetic are performant","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":1604,"byte_end":1663,"line_start":39,"line_end":39,"column_start":1,"column_end":60}},{"value":"/ - Array views can be used to slice and mutate any `[T]` data using","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":1664,"byte_end":1734,"line_start":40,"line_end":40,"column_start":1,"column_end":71}},{"value":"/   `ArrayView::from` and `ArrayViewMut::from`.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":1735,"byte_end":1784,"line_start":41,"line_end":41,"column_start":1,"column_end":50}},{"value":"/ - [`Zip`](struct.Zip.html) for lock step function application across two or more arrays or other","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":1785,"byte_end":1885,"line_start":42,"line_end":42,"column_start":1,"column_end":101}},{"value":"/   item producers ([`NdProducer`](trait.NdProducer.html) trait).","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":1886,"byte_end":1953,"line_start":43,"line_end":43,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":1954,"byte_end":1957,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"/ ## Crate Status","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":1958,"byte_end":1977,"line_start":45,"line_end":45,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":1978,"byte_end":1981,"line_start":46,"line_end":46,"column_start":1,"column_end":4}},{"value":"/ - Still iterating on and evolving the crate","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":1982,"byte_end":2029,"line_start":47,"line_end":47,"column_start":1,"column_end":48}},{"value":"/   + The crate is continuously developing, and breaking changes are expected","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":2030,"byte_end":2109,"line_start":48,"line_end":48,"column_start":1,"column_end":80}},{"value":"/     during evolution from version to version. We adopt the newest stable","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":2110,"byte_end":2186,"line_start":49,"line_end":49,"column_start":1,"column_end":77}},{"value":"/     rust features if we need them.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":2187,"byte_end":2225,"line_start":50,"line_end":50,"column_start":1,"column_end":39}},{"value":"/   + Note that functions/methods/traits/etc. hidden from the docs are not","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":2226,"byte_end":2302,"line_start":51,"line_end":51,"column_start":1,"column_end":77}},{"value":"/     considered part of the public API, so changes to them are not","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":2303,"byte_end":2372,"line_start":52,"line_end":52,"column_start":1,"column_end":70}},{"value":"/     considered breaking changes.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":2373,"byte_end":2409,"line_start":53,"line_end":53,"column_start":1,"column_end":37}},{"value":"/ - Performance:","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":2410,"byte_end":2428,"line_start":54,"line_end":54,"column_start":1,"column_end":19}},{"value":"/   + Prefer higher order methods and arithmetic operations on arrays first,","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":2429,"byte_end":2507,"line_start":55,"line_end":55,"column_start":1,"column_end":79}},{"value":"/     then iteration, and as a last priority using indexed algorithms.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":2508,"byte_end":2580,"line_start":56,"line_end":56,"column_start":1,"column_end":73}},{"value":"/   + The higher order functions like [`.map()`](ArrayBase::map),","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":2581,"byte_end":2648,"line_start":57,"line_end":57,"column_start":1,"column_end":68}},{"value":"/     [`.map_inplace()`](ArrayBase::map_inplace), [`.zip_mut_with()`](ArrayBase::zip_mut_with),","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":2649,"byte_end":2746,"line_start":58,"line_end":58,"column_start":1,"column_end":98}},{"value":"/     [`Zip`] and [`azip!()`](azip) are the most efficient ways","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":2747,"byte_end":2812,"line_start":59,"line_end":59,"column_start":1,"column_end":66}},{"value":"/     to perform single traversal and lock step traversal respectively.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":2813,"byte_end":2886,"line_start":60,"line_end":60,"column_start":1,"column_end":74}},{"value":"/   + Performance of an operation depends on the memory layout of the array","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":2887,"byte_end":2964,"line_start":61,"line_end":61,"column_start":1,"column_end":78}},{"value":"/     or array view. Especially if it's a binary operation, which","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":2965,"byte_end":3032,"line_start":62,"line_end":62,"column_start":1,"column_end":68}},{"value":"/     needs matching memory layout to be efficient (with some exceptions).","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":3033,"byte_end":3109,"line_start":63,"line_end":63,"column_start":1,"column_end":77}},{"value":"/   + Efficient floating point matrix multiplication even for very large","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":3110,"byte_end":3184,"line_start":64,"line_end":64,"column_start":1,"column_end":75}},{"value":"/     matrices; can optionally use BLAS to improve it further.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":3185,"byte_end":3249,"line_start":65,"line_end":65,"column_start":1,"column_end":65}},{"value":"/ - **Requires Rust 1.49 or later**","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":3250,"byte_end":3287,"line_start":66,"line_end":66,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":3288,"byte_end":3291,"line_start":67,"line_end":67,"column_start":1,"column_end":4}},{"value":"/ ## Crate Feature Flags","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":3292,"byte_end":3318,"line_start":68,"line_end":68,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":3319,"byte_end":3322,"line_start":69,"line_end":69,"column_start":1,"column_end":4}},{"value":"/ The following crate feature flags are available. They are configured in your","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":3323,"byte_end":3403,"line_start":70,"line_end":70,"column_start":1,"column_end":81}},{"value":"/ `Cargo.toml`.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":3404,"byte_end":3421,"line_start":71,"line_end":71,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":3422,"byte_end":3425,"line_start":72,"line_end":72,"column_start":1,"column_end":4}},{"value":"/ - `std`","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":3426,"byte_end":3437,"line_start":73,"line_end":73,"column_start":1,"column_end":12}},{"value":"/  - Rust standard library (enabled by default)","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":3438,"byte_end":3487,"line_start":74,"line_end":74,"column_start":1,"column_end":50}},{"value":"/  - This crate can be used without the standard library by disabling the","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":3488,"byte_end":3563,"line_start":75,"line_end":75,"column_start":1,"column_end":76}},{"value":"/    default `std` feature. To do so, use `default-features = false` in","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":3564,"byte_end":3637,"line_start":76,"line_end":76,"column_start":1,"column_end":74}},{"value":"/    your `Cargo.toml`.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":3638,"byte_end":3663,"line_start":77,"line_end":77,"column_start":1,"column_end":26}},{"value":"/  - The `geomspace` `linspace` `logspace` `range` `std` `var` `var_axis`","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":3664,"byte_end":3739,"line_start":78,"line_end":78,"column_start":1,"column_end":76}},{"value":"/    and `std_axis` methods are only available when `std` is enabled.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":3740,"byte_end":3811,"line_start":79,"line_end":79,"column_start":1,"column_end":72}},{"value":"/ - `serde`","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":3812,"byte_end":3825,"line_start":80,"line_end":80,"column_start":1,"column_end":14}},{"value":"/   - Enables serialization support for serde 1.x","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":3826,"byte_end":3877,"line_start":81,"line_end":81,"column_start":1,"column_end":52}},{"value":"/ - `rayon`","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":3878,"byte_end":3891,"line_start":82,"line_end":82,"column_start":1,"column_end":14}},{"value":"/   - Enables parallel iterators, parallelized methods and [`par_azip!`].","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":3892,"byte_end":3967,"line_start":83,"line_end":83,"column_start":1,"column_end":76}},{"value":"/   - Implies std","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":3968,"byte_end":3987,"line_start":84,"line_end":84,"column_start":1,"column_end":20}},{"value":"/ - `approx`","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":3988,"byte_end":4002,"line_start":85,"line_end":85,"column_start":1,"column_end":15}},{"value":"/   - Enables implementations of traits from the [`approx`] crate.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":4003,"byte_end":4071,"line_start":86,"line_end":86,"column_start":1,"column_end":69}},{"value":"/ - `blas`","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":4072,"byte_end":4084,"line_start":87,"line_end":87,"column_start":1,"column_end":13}},{"value":"/   - Enable transparent BLAS support for matrix multiplication.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":4085,"byte_end":4151,"line_start":88,"line_end":88,"column_start":1,"column_end":67}},{"value":"/     Uses ``blas-src`` for pluggable backend, which needs to be configured","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":4152,"byte_end":4229,"line_start":89,"line_end":89,"column_start":1,"column_end":78}},{"value":"/     separately (see the README).","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":4230,"byte_end":4266,"line_start":90,"line_end":90,"column_start":1,"column_end":37}},{"value":"/ - `matrixmultiply-threading`","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":4267,"byte_end":4299,"line_start":91,"line_end":91,"column_start":1,"column_end":33}},{"value":"/   - Enable the ``threading`` feature in the matrixmultiply package","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":4300,"byte_end":4370,"line_start":92,"line_end":92,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":4371,"byte_end":4374,"line_start":93,"line_end":93,"column_start":1,"column_end":4}},{"value":"/ ## Documentation","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":4375,"byte_end":4395,"line_start":94,"line_end":94,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":4396,"byte_end":4399,"line_start":95,"line_end":95,"column_start":1,"column_end":4}},{"value":"/ * The docs for [`ArrayBase`](struct.ArrayBase.html) provide an overview of","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":4400,"byte_end":4478,"line_start":96,"line_end":96,"column_start":1,"column_end":79}},{"value":"/   the *n*-dimensional array type. Other good pages to look at are the","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":4479,"byte_end":4552,"line_start":97,"line_end":97,"column_start":1,"column_end":74}},{"value":"/   documentation for the [`s![]`](macro.s.html) and","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":4553,"byte_end":4607,"line_start":98,"line_end":98,"column_start":1,"column_end":55}},{"value":"/   [`azip!()`](macro.azip.html) macros.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":4608,"byte_end":4650,"line_start":99,"line_end":99,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":4651,"byte_end":4654,"line_start":100,"line_end":100,"column_start":1,"column_end":4}},{"value":"/ * If you have experience with NumPy, you may also be interested in","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":4655,"byte_end":4725,"line_start":101,"line_end":101,"column_start":1,"column_end":71}},{"value":"/   [`ndarray_for_numpy_users`](doc/ndarray_for_numpy_users/index.html).","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":4726,"byte_end":4800,"line_start":102,"line_end":102,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":4801,"byte_end":4804,"line_start":103,"line_end":103,"column_start":1,"column_end":4}},{"value":"/ ## The ndarray ecosystem","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":4805,"byte_end":4833,"line_start":104,"line_end":104,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":4834,"byte_end":4837,"line_start":105,"line_end":105,"column_start":1,"column_end":4}},{"value":"/ `ndarray` provides a lot of functionality, but it's not a one-stop solution.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":4838,"byte_end":4918,"line_start":106,"line_end":106,"column_start":1,"column_end":81}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":4919,"byte_end":4922,"line_start":107,"line_end":107,"column_start":1,"column_end":4}},{"value":"/ `ndarray` includes matrix multiplication and other binary/unary operations out of the box.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":4923,"byte_end":5017,"line_start":108,"line_end":108,"column_start":1,"column_end":95}},{"value":"/ More advanced linear algebra routines (e.g. SVD decomposition or eigenvalue computation)","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":5018,"byte_end":5110,"line_start":109,"line_end":109,"column_start":1,"column_end":93}},{"value":"/ can be found in [`ndarray-linalg`](https://crates.io/crates/ndarray-linalg).","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":5111,"byte_end":5191,"line_start":110,"line_end":110,"column_start":1,"column_end":81}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":5192,"byte_end":5195,"line_start":111,"line_end":111,"column_start":1,"column_end":4}},{"value":"/ The same holds for statistics: `ndarray` provides some basic functionalities (e.g. `mean`)","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":5196,"byte_end":5290,"line_start":112,"line_end":112,"column_start":1,"column_end":95}},{"value":"/ but more advanced routines can be found in [`ndarray-stats`](https://crates.io/crates/ndarray-stats).","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":5291,"byte_end":5396,"line_start":113,"line_end":113,"column_start":1,"column_end":106}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":5397,"byte_end":5400,"line_start":114,"line_end":114,"column_start":1,"column_end":4}},{"value":"/ If you are looking to generate random arrays instead, check out [`ndarray-rand`](https://crates.io/crates/ndarray-rand).","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":5401,"byte_end":5525,"line_start":115,"line_end":115,"column_start":1,"column_end":125}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":5526,"byte_end":5529,"line_start":116,"line_end":116,"column_start":1,"column_end":4}},{"value":"/ For conversion between `ndarray`, [`nalgebra`](https://crates.io/crates/nalgebra) and","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":5530,"byte_end":5619,"line_start":117,"line_end":117,"column_start":1,"column_end":90}},{"value":"/ [`image`](https://crates.io/crates/image) check out [`nshare`](https://crates.io/crates/nshare).","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":5620,"byte_end":5720,"line_start":118,"line_end":118,"column_start":1,"column_end":101}}]},{"kind":"Struct","id":{"krate":0,"index":60},"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/private.rs","byte_start":59372,"byte_end":59385,"line_start":8,"line_end":8,"column_start":12,"column_end":25},"name":"PrivateMarker","qualname":"::private::PrivateMarker","value":"","parent":null,"children":[],"decl_id":null,"docs":" If this type is pub but not publicly reachable, third parties\n can't name it and can't implement traits using it.\n","sig":null,"attributes":[{"value":"/ If this type is pub but not publicly reachable, third parties","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/private.rs","byte_start":59240,"byte_end":59305,"line_start":6,"line_end":6,"column_start":1,"column_end":66}},{"value":"/ can't name it and can't implement traits using it.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/private.rs","byte_start":59306,"byte_end":59360,"line_start":7,"line_end":7,"column_start":1,"column_end":55}}]},{"kind":"Function","id":{"krate":0,"index":73},"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/aliases.rs","byte_start":60053,"byte_end":60056,"line_start":10,"line_end":10,"column_start":8,"column_end":11},"name":"Ix0","qualname":"::aliases::Ix0","value":"pub fn Ix0() -> Ix0","parent":null,"children":[],"decl_id":null,"docs":" Create a zero-dimensional index\n","sig":null,"attributes":[{"value":"/ Create a zero-dimensional index","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/aliases.rs","byte_start":59967,"byte_end":60002,"line_start":7,"line_end":7,"column_start":1,"column_end":36}},{"value":"allow(non_snake_case)","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/aliases.rs","byte_start":60003,"byte_end":60027,"line_start":8,"line_end":8,"column_start":1,"column_end":25}},{"value":"inline(always)","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/aliases.rs","byte_start":60028,"byte_end":60045,"line_start":9,"line_end":9,"column_start":1,"column_end":18}}]},{"kind":"Function","id":{"krate":0,"index":74},"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/aliases.rs","byte_start":60172,"byte_end":60175,"line_start":16,"line_end":16,"column_start":8,"column_end":11},"name":"Ix1","qualname":"::aliases::Ix1","value":"pub fn Ix1(Ix) -> Ix1","parent":null,"children":[],"decl_id":null,"docs":" Create a one-dimensional index\n","sig":null,"attributes":[{"value":"/ Create a one-dimensional index","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/aliases.rs","byte_start":60087,"byte_end":60121,"line_start":13,"line_end":13,"column_start":1,"column_end":35}},{"value":"allow(non_snake_case)","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/aliases.rs","byte_start":60122,"byte_end":60146,"line_start":14,"line_end":14,"column_start":1,"column_end":25}},{"value":"inline(always)","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/aliases.rs","byte_start":60147,"byte_end":60164,"line_start":15,"line_end":15,"column_start":1,"column_end":18}}]},{"kind":"Function","id":{"krate":0,"index":75},"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/aliases.rs","byte_start":60299,"byte_end":60302,"line_start":22,"line_end":22,"column_start":8,"column_end":11},"name":"Ix2","qualname":"::aliases::Ix2","value":"pub fn Ix2(Ix, Ix) -> Ix2","parent":null,"children":[],"decl_id":null,"docs":" Create a two-dimensional index\n","sig":null,"attributes":[{"value":"/ Create a two-dimensional index","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/aliases.rs","byte_start":60214,"byte_end":60248,"line_start":19,"line_end":19,"column_start":1,"column_end":35}},{"value":"allow(non_snake_case)","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/aliases.rs","byte_start":60249,"byte_end":60273,"line_start":20,"line_end":20,"column_start":1,"column_end":25}},{"value":"inline(always)","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/aliases.rs","byte_start":60274,"byte_end":60291,"line_start":21,"line_end":21,"column_start":1,"column_end":18}}]},{"kind":"Function","id":{"krate":0,"index":76},"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/aliases.rs","byte_start":60440,"byte_end":60443,"line_start":28,"line_end":28,"column_start":8,"column_end":11},"name":"Ix3","qualname":"::aliases::Ix3","value":"pub fn Ix3(Ix, Ix, Ix) -> Ix3","parent":null,"children":[],"decl_id":null,"docs":" Create a three-dimensional index\n","sig":null,"attributes":[{"value":"/ Create a three-dimensional index","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/aliases.rs","byte_start":60353,"byte_end":60389,"line_start":25,"line_end":25,"column_start":1,"column_end":37}},{"value":"allow(non_snake_case)","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/aliases.rs","byte_start":60390,"byte_end":60414,"line_start":26,"line_end":26,"column_start":1,"column_end":25}},{"value":"inline(always)","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/aliases.rs","byte_start":60415,"byte_end":60432,"line_start":27,"line_end":27,"column_start":1,"column_end":18}}]},{"kind":"Function","id":{"krate":0,"index":77},"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/aliases.rs","byte_start":60592,"byte_end":60595,"line_start":34,"line_end":34,"column_start":8,"column_end":11},"name":"Ix4","qualname":"::aliases::Ix4","value":"pub fn Ix4(Ix, Ix, Ix, Ix) -> Ix4","parent":null,"children":[],"decl_id":null,"docs":" Create a four-dimensional index\n","sig":null,"attributes":[{"value":"/ Create a four-dimensional index","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/aliases.rs","byte_start":60506,"byte_end":60541,"line_start":31,"line_end":31,"column_start":1,"column_end":36}},{"value":"allow(non_snake_case)","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/aliases.rs","byte_start":60542,"byte_end":60566,"line_start":32,"line_end":32,"column_start":1,"column_end":25}},{"value":"inline(always)","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/aliases.rs","byte_start":60567,"byte_end":60584,"line_start":33,"line_end":33,"column_start":1,"column_end":18}}]},{"kind":"Function","id":{"krate":0,"index":78},"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/aliases.rs","byte_start":60756,"byte_end":60759,"line_start":40,"line_end":40,"column_start":8,"column_end":11},"name":"Ix5","qualname":"::aliases::Ix5","value":"pub fn Ix5(Ix, Ix, Ix, Ix, Ix) -> Ix5","parent":null,"children":[],"decl_id":null,"docs":" Create a five-dimensional index\n","sig":null,"attributes":[{"value":"/ Create a five-dimensional index","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/aliases.rs","byte_start":60670,"byte_end":60705,"line_start":37,"line_end":37,"column_start":1,"column_end":36}},{"value":"allow(non_snake_case)","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/aliases.rs","byte_start":60706,"byte_end":60730,"line_start":38,"line_end":38,"column_start":1,"column_end":25}},{"value":"inline(always)","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/aliases.rs","byte_start":60731,"byte_end":60748,"line_start":39,"line_end":39,"column_start":1,"column_end":18}}]},{"kind":"Function","id":{"krate":0,"index":79},"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/aliases.rs","byte_start":60931,"byte_end":60934,"line_start":46,"line_end":46,"column_start":8,"column_end":11},"name":"Ix6","qualname":"::aliases::Ix6","value":"pub fn Ix6(Ix, Ix, Ix, Ix, Ix, Ix) -> Ix6","parent":null,"children":[],"decl_id":null,"docs":" Create a six-dimensional index\n","sig":null,"attributes":[{"value":"/ Create a six-dimensional index","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/aliases.rs","byte_start":60846,"byte_end":60880,"line_start":43,"line_end":43,"column_start":1,"column_end":35}},{"value":"allow(non_snake_case)","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/aliases.rs","byte_start":60881,"byte_end":60905,"line_start":44,"line_end":44,"column_start":1,"column_end":25}},{"value":"inline(always)","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/aliases.rs","byte_start":60906,"byte_end":60923,"line_start":45,"line_end":45,"column_start":1,"column_end":18}}]},{"kind":"Function","id":{"krate":0,"index":80},"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/aliases.rs","byte_start":61123,"byte_end":61128,"line_start":53,"line_end":53,"column_start":8,"column_end":13},"name":"IxDyn","qualname":"::aliases::IxDyn","value":"pub fn IxDyn(&[Ix]) -> IxDyn","parent":null,"children":[],"decl_id":null,"docs":" Create a dynamic-dimensional index\n","sig":null,"attributes":[{"value":"/ Create a dynamic-dimensional index","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/aliases.rs","byte_start":61034,"byte_end":61072,"line_start":50,"line_end":50,"column_start":1,"column_end":39}},{"value":"allow(non_snake_case)","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/aliases.rs","byte_start":61073,"byte_end":61097,"line_start":51,"line_end":51,"column_start":1,"column_end":25}},{"value":"inline(always)","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/aliases.rs","byte_start":61098,"byte_end":61115,"line_start":52,"line_end":52,"column_start":1,"column_end":18}}]},{"kind":"Type","id":{"krate":0,"index":81},"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/aliases.rs","byte_start":61197,"byte_end":61200,"line_start":58,"line_end":58,"column_start":10,"column_end":13},"name":"Ix0","qualname":"::aliases::Ix0","value":"Dim<[Ix; ]>","parent":null,"children":[],"decl_id":null,"docs":" zero-dimensionial\n","sig":null,"attributes":[{"value":"/ zero-dimensionial","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/aliases.rs","byte_start":61166,"byte_end":61187,"line_start":57,"line_end":57,"column_start":1,"column_end":22}}]},{"kind":"Type","id":{"krate":0,"index":83},"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/aliases.rs","byte_start":61246,"byte_end":61249,"line_start":60,"line_end":60,"column_start":10,"column_end":13},"name":"Ix1","qualname":"::aliases::Ix1","value":"Dim<[Ix; ]>","parent":null,"children":[],"decl_id":null,"docs":" one-dimensional\n","sig":null,"attributes":[{"value":"/ one-dimensional","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/aliases.rs","byte_start":61217,"byte_end":61236,"line_start":59,"line_end":59,"column_start":1,"column_end":20}}]},{"kind":"Type","id":{"krate":0,"index":85},"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/aliases.rs","byte_start":61295,"byte_end":61298,"line_start":62,"line_end":62,"column_start":10,"column_end":13},"name":"Ix2","qualname":"::aliases::Ix2","value":"Dim<[Ix; ]>","parent":null,"children":[],"decl_id":null,"docs":" two-dimensional\n","sig":null,"attributes":[{"value":"/ two-dimensional","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/aliases.rs","byte_start":61266,"byte_end":61285,"line_start":61,"line_end":61,"column_start":1,"column_end":20}}]},{"kind":"Type","id":{"krate":0,"index":87},"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/aliases.rs","byte_start":61346,"byte_end":61349,"line_start":64,"line_end":64,"column_start":10,"column_end":13},"name":"Ix3","qualname":"::aliases::Ix3","value":"Dim<[Ix; ]>","parent":null,"children":[],"decl_id":null,"docs":" three-dimensional\n","sig":null,"attributes":[{"value":"/ three-dimensional","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/aliases.rs","byte_start":61315,"byte_end":61336,"line_start":63,"line_end":63,"column_start":1,"column_end":22}}]},{"kind":"Type","id":{"krate":0,"index":89},"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/aliases.rs","byte_start":61396,"byte_end":61399,"line_start":66,"line_end":66,"column_start":10,"column_end":13},"name":"Ix4","qualname":"::aliases::Ix4","value":"Dim<[Ix; ]>","parent":null,"children":[],"decl_id":null,"docs":" four-dimensional\n","sig":null,"attributes":[{"value":"/ four-dimensional","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/aliases.rs","byte_start":61366,"byte_end":61386,"line_start":65,"line_end":65,"column_start":1,"column_end":21}}]},{"kind":"Type","id":{"krate":0,"index":91},"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/aliases.rs","byte_start":61446,"byte_end":61449,"line_start":68,"line_end":68,"column_start":10,"column_end":13},"name":"Ix5","qualname":"::aliases::Ix5","value":"Dim<[Ix; ]>","parent":null,"children":[],"decl_id":null,"docs":" five-dimensional\n","sig":null,"attributes":[{"value":"/ five-dimensional","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/aliases.rs","byte_start":61416,"byte_end":61436,"line_start":67,"line_end":67,"column_start":1,"column_end":21}}]},{"kind":"Type","id":{"krate":0,"index":93},"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/aliases.rs","byte_start":61495,"byte_end":61498,"line_start":70,"line_end":70,"column_start":10,"column_end":13},"name":"Ix6","qualname":"::aliases::Ix6","value":"Dim<[Ix; ]>","parent":null,"children":[],"decl_id":null,"docs":" six-dimensional\n","sig":null,"attributes":[{"value":"/ six-dimensional","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/aliases.rs","byte_start":61466,"byte_end":61485,"line_start":69,"line_end":69,"column_start":1,"column_end":20}}]},{"kind":"Type","id":{"krate":0,"index":95},"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/aliases.rs","byte_start":62567,"byte_end":62572,"line_start":99,"line_end":99,"column_start":10,"column_end":15},"name":"IxDyn","qualname":"::aliases::IxDyn","value":"Dim<IxDynImpl>","parent":null,"children":[],"decl_id":null,"docs":" dynamic-dimensional","sig":null,"attributes":[{"value":"/ dynamic-dimensional","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/aliases.rs","byte_start":61515,"byte_end":61538,"line_start":71,"line_end":71,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/aliases.rs","byte_start":61539,"byte_end":61542,"line_start":72,"line_end":72,"column_start":1,"column_end":4}},{"value":"/ You can use the `IxDyn` function to create a dimension for an array with","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/aliases.rs","byte_start":61543,"byte_end":61619,"line_start":73,"line_end":73,"column_start":1,"column_end":77}},{"value":"/ dynamic number of dimensions.  (`Vec<usize>` and `&[usize]` also implement","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/aliases.rs","byte_start":61620,"byte_end":61698,"line_start":74,"line_end":74,"column_start":1,"column_end":79}},{"value":"/ `IntoDimension` to produce `IxDyn`).","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/aliases.rs","byte_start":61699,"byte_end":61739,"line_start":75,"line_end":75,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/aliases.rs","byte_start":61740,"byte_end":61743,"line_start":76,"line_end":76,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/aliases.rs","byte_start":61744,"byte_end":61751,"line_start":77,"line_end":77,"column_start":1,"column_end":8}},{"value":"/ use ndarray::ArrayD;","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/aliases.rs","byte_start":61752,"byte_end":61776,"line_start":78,"line_end":78,"column_start":1,"column_end":25}},{"value":"/ use ndarray::IxDyn;","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/aliases.rs","byte_start":61777,"byte_end":61800,"line_start":79,"line_end":79,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/aliases.rs","byte_start":61801,"byte_end":61804,"line_start":80,"line_end":80,"column_start":1,"column_end":4}},{"value":"/ // Create a 5 × 6 × 3 × 4 array using the dynamic dimension type","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/aliases.rs","byte_start":61805,"byte_end":61876,"line_start":81,"line_end":81,"column_start":1,"column_end":69}},{"value":"/ let mut a = ArrayD::<f64>::zeros(IxDyn(&[5, 6, 3, 4]));","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/aliases.rs","byte_start":61877,"byte_end":61936,"line_start":82,"line_end":82,"column_start":1,"column_end":60}},{"value":"/ // Create a 1 × 3 × 4 array using the dynamic dimension type","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/aliases.rs","byte_start":61937,"byte_end":62003,"line_start":83,"line_end":83,"column_start":1,"column_end":65}},{"value":"/ let mut b = ArrayD::<f64>::zeros(IxDyn(&[1, 3, 4]));","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/aliases.rs","byte_start":62004,"byte_end":62060,"line_start":84,"line_end":84,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/aliases.rs","byte_start":62061,"byte_end":62064,"line_start":85,"line_end":85,"column_start":1,"column_end":4}},{"value":"/ // We can use broadcasting to add arrays of compatible shapes together:","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/aliases.rs","byte_start":62065,"byte_end":62140,"line_start":86,"line_end":86,"column_start":1,"column_end":76}},{"value":"/ a += &b;","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/aliases.rs","byte_start":62141,"byte_end":62153,"line_start":87,"line_end":87,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/aliases.rs","byte_start":62154,"byte_end":62157,"line_start":88,"line_end":88,"column_start":1,"column_end":4}},{"value":"/ // We can index into a, b using fixed size arrays:","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/aliases.rs","byte_start":62158,"byte_end":62212,"line_start":89,"line_end":89,"column_start":1,"column_end":55}},{"value":"/ a[[0, 0, 0, 0]] = 0.;","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/aliases.rs","byte_start":62213,"byte_end":62238,"line_start":90,"line_end":90,"column_start":1,"column_end":26}},{"value":"/ b[[0, 2, 3]] = a[[0, 0, 2, 3]];","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/aliases.rs","byte_start":62239,"byte_end":62274,"line_start":91,"line_end":91,"column_start":1,"column_end":36}},{"value":"/ // Note: indexing will panic at runtime if the number of indices given does","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/aliases.rs","byte_start":62275,"byte_end":62354,"line_start":92,"line_end":92,"column_start":1,"column_end":80}},{"value":"/ // not match the array.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/aliases.rs","byte_start":62355,"byte_end":62382,"line_start":93,"line_end":93,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/aliases.rs","byte_start":62383,"byte_end":62386,"line_start":94,"line_end":94,"column_start":1,"column_end":4}},{"value":"/ // We can keep them in the same vector because both the arrays have","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/aliases.rs","byte_start":62387,"byte_end":62458,"line_start":95,"line_end":95,"column_start":1,"column_end":72}},{"value":"/ // the same type `Array<f64, IxDyn>` a.k.a `ArrayD<f64>`:","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/aliases.rs","byte_start":62459,"byte_end":62520,"line_start":96,"line_end":96,"column_start":1,"column_end":62}},{"value":"/ let arrays = vec![a, b];","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/aliases.rs","byte_start":62521,"byte_end":62549,"line_start":97,"line_end":97,"column_start":1,"column_end":29}},{"value":"/ ```","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/aliases.rs","byte_start":62550,"byte_end":62557,"line_start":98,"line_end":98,"column_start":1,"column_end":8}}]},{"kind":"Type","id":{"krate":0,"index":96},"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/aliases.rs","byte_start":62628,"byte_end":62634,"line_start":102,"line_end":102,"column_start":10,"column_end":16},"name":"Array0","qualname":"::aliases::Array0","value":"Array<A, Ix0>","parent":null,"children":[],"decl_id":null,"docs":" zero-dimensional array\n","sig":null,"attributes":[{"value":"/ zero-dimensional array","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/aliases.rs","byte_start":62592,"byte_end":62618,"line_start":101,"line_end":101,"column_start":1,"column_end":27}}]},{"kind":"Type","id":{"krate":0,"index":98},"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/aliases.rs","byte_start":62690,"byte_end":62696,"line_start":104,"line_end":104,"column_start":10,"column_end":16},"name":"Array1","qualname":"::aliases::Array1","value":"Array<A, Ix1>","parent":null,"children":[],"decl_id":null,"docs":" one-dimensional array\n","sig":null,"attributes":[{"value":"/ one-dimensional array","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/aliases.rs","byte_start":62655,"byte_end":62680,"line_start":103,"line_end":103,"column_start":1,"column_end":26}}]},{"kind":"Type","id":{"krate":0,"index":100},"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/aliases.rs","byte_start":62752,"byte_end":62758,"line_start":106,"line_end":106,"column_start":10,"column_end":16},"name":"Array2","qualname":"::aliases::Array2","value":"Array<A, Ix2>","parent":null,"children":[],"decl_id":null,"docs":" two-dimensional array\n","sig":null,"attributes":[{"value":"/ two-dimensional array","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/aliases.rs","byte_start":62717,"byte_end":62742,"line_start":105,"line_end":105,"column_start":1,"column_end":26}}]},{"kind":"Type","id":{"krate":0,"index":102},"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/aliases.rs","byte_start":62816,"byte_end":62822,"line_start":108,"line_end":108,"column_start":10,"column_end":16},"name":"Array3","qualname":"::aliases::Array3","value":"Array<A, Ix3>","parent":null,"children":[],"decl_id":null,"docs":" three-dimensional array\n","sig":null,"attributes":[{"value":"/ three-dimensional array","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/aliases.rs","byte_start":62779,"byte_end":62806,"line_start":107,"line_end":107,"column_start":1,"column_end":28}}]},{"kind":"Type","id":{"krate":0,"index":104},"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/aliases.rs","byte_start":62879,"byte_end":62885,"line_start":110,"line_end":110,"column_start":10,"column_end":16},"name":"Array4","qualname":"::aliases::Array4","value":"Array<A, Ix4>","parent":null,"children":[],"decl_id":null,"docs":" four-dimensional array\n","sig":null,"attributes":[{"value":"/ four-dimensional array","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/aliases.rs","byte_start":62843,"byte_end":62869,"line_start":109,"line_end":109,"column_start":1,"column_end":27}}]},{"kind":"Type","id":{"krate":0,"index":106},"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/aliases.rs","byte_start":62942,"byte_end":62948,"line_start":112,"line_end":112,"column_start":10,"column_end":16},"name":"Array5","qualname":"::aliases::Array5","value":"Array<A, Ix5>","parent":null,"children":[],"decl_id":null,"docs":" five-dimensional array\n","sig":null,"attributes":[{"value":"/ five-dimensional array","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/aliases.rs","byte_start":62906,"byte_end":62932,"line_start":111,"line_end":111,"column_start":1,"column_end":27}}]},{"kind":"Type","id":{"krate":0,"index":108},"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/aliases.rs","byte_start":63004,"byte_end":63010,"line_start":114,"line_end":114,"column_start":10,"column_end":16},"name":"Array6","qualname":"::aliases::Array6","value":"Array<A, Ix6>","parent":null,"children":[],"decl_id":null,"docs":" six-dimensional array\n","sig":null,"attributes":[{"value":"/ six-dimensional array","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/aliases.rs","byte_start":62969,"byte_end":62994,"line_start":113,"line_end":113,"column_start":1,"column_end":26}}]},{"kind":"Type","id":{"krate":0,"index":110},"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/aliases.rs","byte_start":63070,"byte_end":63076,"line_start":116,"line_end":116,"column_start":10,"column_end":16},"name":"ArrayD","qualname":"::aliases::ArrayD","value":"Array<A, IxDyn>","parent":null,"children":[],"decl_id":null,"docs":" dynamic-dimensional array\n","sig":null,"attributes":[{"value":"/ dynamic-dimensional array","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/aliases.rs","byte_start":63031,"byte_end":63060,"line_start":115,"line_end":115,"column_start":1,"column_end":30}}]},{"kind":"Type","id":{"krate":0,"index":112},"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/aliases.rs","byte_start":63141,"byte_end":63151,"line_start":119,"line_end":119,"column_start":10,"column_end":20},"name":"ArrayView0","qualname":"::aliases::ArrayView0","value":"ArrayView","parent":null,"children":[],"decl_id":null,"docs":" zero-dimensional array view\n","sig":null,"attributes":[{"value":"/ zero-dimensional array view","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/aliases.rs","byte_start":63100,"byte_end":63131,"line_start":118,"line_end":118,"column_start":1,"column_end":32}}]},{"kind":"Type","id":{"krate":0,"index":115},"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/aliases.rs","byte_start":63224,"byte_end":63234,"line_start":121,"line_end":121,"column_start":10,"column_end":20},"name":"ArrayView1","qualname":"::aliases::ArrayView1","value":"ArrayView","parent":null,"children":[],"decl_id":null,"docs":" one-dimensional array view\n","sig":null,"attributes":[{"value":"/ one-dimensional array view","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/aliases.rs","byte_start":63184,"byte_end":63214,"line_start":120,"line_end":120,"column_start":1,"column_end":31}}]},{"kind":"Type","id":{"krate":0,"index":118},"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/aliases.rs","byte_start":63307,"byte_end":63317,"line_start":123,"line_end":123,"column_start":10,"column_end":20},"name":"ArrayView2","qualname":"::aliases::ArrayView2","value":"ArrayView","parent":null,"children":[],"decl_id":null,"docs":" two-dimensional array view\n","sig":null,"attributes":[{"value":"/ two-dimensional array view","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/aliases.rs","byte_start":63267,"byte_end":63297,"line_start":122,"line_end":122,"column_start":1,"column_end":31}}]},{"kind":"Type","id":{"krate":0,"index":121},"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/aliases.rs","byte_start":63392,"byte_end":63402,"line_start":125,"line_end":125,"column_start":10,"column_end":20},"name":"ArrayView3","qualname":"::aliases::ArrayView3","value":"ArrayView","parent":null,"children":[],"decl_id":null,"docs":" three-dimensional array view\n","sig":null,"attributes":[{"value":"/ three-dimensional array view","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/aliases.rs","byte_start":63350,"byte_end":63382,"line_start":124,"line_end":124,"column_start":1,"column_end":33}}]},{"kind":"Type","id":{"krate":0,"index":124},"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/aliases.rs","byte_start":63476,"byte_end":63486,"line_start":127,"line_end":127,"column_start":10,"column_end":20},"name":"ArrayView4","qualname":"::aliases::ArrayView4","value":"ArrayView","parent":null,"children":[],"decl_id":null,"docs":" four-dimensional array view\n","sig":null,"attributes":[{"value":"/ four-dimensional array view","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/aliases.rs","byte_start":63435,"byte_end":63466,"line_start":126,"line_end":126,"column_start":1,"column_end":32}}]},{"kind":"Type","id":{"krate":0,"index":127},"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/aliases.rs","byte_start":63560,"byte_end":63570,"line_start":129,"line_end":129,"column_start":10,"column_end":20},"name":"ArrayView5","qualname":"::aliases::ArrayView5","value":"ArrayView","parent":null,"children":[],"decl_id":null,"docs":" five-dimensional array view\n","sig":null,"attributes":[{"value":"/ five-dimensional array view","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/aliases.rs","byte_start":63519,"byte_end":63550,"line_start":128,"line_end":128,"column_start":1,"column_end":32}}]},{"kind":"Type","id":{"krate":0,"index":130},"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/aliases.rs","byte_start":63643,"byte_end":63653,"line_start":131,"line_end":131,"column_start":10,"column_end":20},"name":"ArrayView6","qualname":"::aliases::ArrayView6","value":"ArrayView","parent":null,"children":[],"decl_id":null,"docs":" six-dimensional array view\n","sig":null,"attributes":[{"value":"/ six-dimensional array view","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/aliases.rs","byte_start":63603,"byte_end":63633,"line_start":130,"line_end":130,"column_start":1,"column_end":31}}]},{"kind":"Type","id":{"krate":0,"index":133},"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/aliases.rs","byte_start":63730,"byte_end":63740,"line_start":133,"line_end":133,"column_start":10,"column_end":20},"name":"ArrayViewD","qualname":"::aliases::ArrayViewD","value":"ArrayView","parent":null,"children":[],"decl_id":null,"docs":" dynamic-dimensional array view\n","sig":null,"attributes":[{"value":"/ dynamic-dimensional array view","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/aliases.rs","byte_start":63686,"byte_end":63720,"line_start":132,"line_end":132,"column_start":1,"column_end":35}}]},{"kind":"Type","id":{"krate":0,"index":136},"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/aliases.rs","byte_start":63828,"byte_end":63841,"line_start":136,"line_end":136,"column_start":10,"column_end":23},"name":"ArrayViewMut0","qualname":"::aliases::ArrayViewMut0","value":"ArrayViewMut","parent":null,"children":[],"decl_id":null,"docs":" zero-dimensional read-write array view\n","sig":null,"attributes":[{"value":"/ zero-dimensional read-write array view","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/aliases.rs","byte_start":63776,"byte_end":63818,"line_start":135,"line_end":135,"column_start":1,"column_end":43}}]},{"kind":"Type","id":{"krate":0,"index":139},"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/aliases.rs","byte_start":63928,"byte_end":63941,"line_start":138,"line_end":138,"column_start":10,"column_end":23},"name":"ArrayViewMut1","qualname":"::aliases::ArrayViewMut1","value":"ArrayViewMut","parent":null,"children":[],"decl_id":null,"docs":" one-dimensional read-write array view\n","sig":null,"attributes":[{"value":"/ one-dimensional read-write array view","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/aliases.rs","byte_start":63877,"byte_end":63918,"line_start":137,"line_end":137,"column_start":1,"column_end":42}}]},{"kind":"Type","id":{"krate":0,"index":142},"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/aliases.rs","byte_start":64028,"byte_end":64041,"line_start":140,"line_end":140,"column_start":10,"column_end":23},"name":"ArrayViewMut2","qualname":"::aliases::ArrayViewMut2","value":"ArrayViewMut","parent":null,"children":[],"decl_id":null,"docs":" two-dimensional read-write array view\n","sig":null,"attributes":[{"value":"/ two-dimensional read-write array view","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/aliases.rs","byte_start":63977,"byte_end":64018,"line_start":139,"line_end":139,"column_start":1,"column_end":42}}]},{"kind":"Type","id":{"krate":0,"index":145},"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/aliases.rs","byte_start":64130,"byte_end":64143,"line_start":142,"line_end":142,"column_start":10,"column_end":23},"name":"ArrayViewMut3","qualname":"::aliases::ArrayViewMut3","value":"ArrayViewMut","parent":null,"children":[],"decl_id":null,"docs":" three-dimensional read-write array view\n","sig":null,"attributes":[{"value":"/ three-dimensional read-write array view","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/aliases.rs","byte_start":64077,"byte_end":64120,"line_start":141,"line_end":141,"column_start":1,"column_end":44}}]},{"kind":"Type","id":{"krate":0,"index":148},"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/aliases.rs","byte_start":64231,"byte_end":64244,"line_start":144,"line_end":144,"column_start":10,"column_end":23},"name":"ArrayViewMut4","qualname":"::aliases::ArrayViewMut4","value":"ArrayViewMut","parent":null,"children":[],"decl_id":null,"docs":" four-dimensional read-write array view\n","sig":null,"attributes":[{"value":"/ four-dimensional read-write array view","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/aliases.rs","byte_start":64179,"byte_end":64221,"line_start":143,"line_end":143,"column_start":1,"column_end":43}}]},{"kind":"Type","id":{"krate":0,"index":151},"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/aliases.rs","byte_start":64332,"byte_end":64345,"line_start":146,"line_end":146,"column_start":10,"column_end":23},"name":"ArrayViewMut5","qualname":"::aliases::ArrayViewMut5","value":"ArrayViewMut","parent":null,"children":[],"decl_id":null,"docs":" five-dimensional read-write array view\n","sig":null,"attributes":[{"value":"/ five-dimensional read-write array view","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/aliases.rs","byte_start":64280,"byte_end":64322,"line_start":145,"line_end":145,"column_start":1,"column_end":43}}]},{"kind":"Type","id":{"krate":0,"index":154},"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/aliases.rs","byte_start":64432,"byte_end":64445,"line_start":148,"line_end":148,"column_start":10,"column_end":23},"name":"ArrayViewMut6","qualname":"::aliases::ArrayViewMut6","value":"ArrayViewMut","parent":null,"children":[],"decl_id":null,"docs":" six-dimensional read-write array view\n","sig":null,"attributes":[{"value":"/ six-dimensional read-write array view","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/aliases.rs","byte_start":64381,"byte_end":64422,"line_start":147,"line_end":147,"column_start":1,"column_end":42}}]},{"kind":"Type","id":{"krate":0,"index":157},"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/aliases.rs","byte_start":64536,"byte_end":64549,"line_start":150,"line_end":150,"column_start":10,"column_end":23},"name":"ArrayViewMutD","qualname":"::aliases::ArrayViewMutD","value":"ArrayViewMut","parent":null,"children":[],"decl_id":null,"docs":" dynamic-dimensional read-write array view\n","sig":null,"attributes":[{"value":"/ dynamic-dimensional read-write array view","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/aliases.rs","byte_start":64481,"byte_end":64526,"line_start":149,"line_end":149,"column_start":1,"column_end":46}}]},{"kind":"Type","id":{"krate":0,"index":160},"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/aliases.rs","byte_start":64640,"byte_end":64649,"line_start":153,"line_end":153,"column_start":10,"column_end":19},"name":"ArcArray1","qualname":"::aliases::ArcArray1","value":"ArcArray<A, Ix1>","parent":null,"children":[],"decl_id":null,"docs":" one-dimensional shared ownership array\n","sig":null,"attributes":[{"value":"/ one-dimensional shared ownership array","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/aliases.rs","byte_start":64588,"byte_end":64630,"line_start":152,"line_end":152,"column_start":1,"column_end":43}}]},{"kind":"Type","id":{"krate":0,"index":162},"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/aliases.rs","byte_start":64725,"byte_end":64734,"line_start":155,"line_end":155,"column_start":10,"column_end":19},"name":"ArcArray2","qualname":"::aliases::ArcArray2","value":"ArcArray<A, Ix2>","parent":null,"children":[],"decl_id":null,"docs":" two-dimensional shared ownership array\n","sig":null,"attributes":[{"value":"/ two-dimensional shared ownership array","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/aliases.rs","byte_start":64673,"byte_end":64715,"line_start":154,"line_end":154,"column_start":1,"column_end":43}}]},{"kind":"Trait","id":{"krate":0,"index":176},"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/argument_traits.rs","byte_start":68616,"byte_end":68626,"line_start":7,"line_end":7,"column_start":11,"column_end":21},"name":"AssignElem","qualname":"::argument_traits::AssignElem","value":"AssignElem<T>","parent":null,"children":[{"krate":0,"index":178}],"decl_id":null,"docs":" A producer element that can be assigned to once\n","sig":null,"attributes":[{"value":"/ A producer element that can be assigned to once","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/argument_traits.rs","byte_start":68554,"byte_end":68605,"line_start":6,"line_end":6,"column_start":1,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":178},"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/argument_traits.rs","byte_start":68709,"byte_end":68720,"line_start":9,"line_end":9,"column_start":8,"column_end":19},"name":"assign_elem","qualname":"::argument_traits::AssignElem::assign_elem","value":"pub fn assign_elem(Self, T)","parent":{"krate":0,"index":176},"children":[],"decl_id":null,"docs":" Assign the value `input` to the element that self represents.\n","sig":null,"attributes":[{"value":"/ Assign the value `input` to the element that self represents.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/argument_traits.rs","byte_start":68636,"byte_end":68701,"line_start":8,"line_end":8,"column_start":5,"column_end":70}}]},{"kind":"Trait","id":{"krate":0,"index":398},"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/arraytraits.rs","byte_start":102174,"byte_end":102181,"line_start":379,"line_end":379,"column_start":11,"column_end":18},"name":"AsArray","qualname":"::arraytraits::AsArray","value":"AsArray<'a, A: 'a, D = Ix1>: Into<ArrayView>","parent":null,"children":[],"decl_id":null,"docs":" Argument conversion into an array view","sig":null,"attributes":[{"value":"/ Argument conversion into an array view","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/arraytraits.rs","byte_start":101692,"byte_end":101734,"line_start":358,"line_end":358,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/arraytraits.rs","byte_start":101735,"byte_end":101738,"line_start":359,"line_end":359,"column_start":1,"column_end":4}},{"value":"/ The trait is parameterized over `A`, the element type, and `D`, the","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/arraytraits.rs","byte_start":101739,"byte_end":101810,"line_start":360,"line_end":360,"column_start":1,"column_end":72}},{"value":"/ dimensionality of the array. `D` defaults to one-dimensional.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/arraytraits.rs","byte_start":101811,"byte_end":101876,"line_start":361,"line_end":361,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/arraytraits.rs","byte_start":101877,"byte_end":101880,"line_start":362,"line_end":362,"column_start":1,"column_end":4}},{"value":"/ Use `.into()` to do the conversion.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/arraytraits.rs","byte_start":101881,"byte_end":101920,"line_start":363,"line_end":363,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/arraytraits.rs","byte_start":101921,"byte_end":101924,"line_start":364,"line_end":364,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/arraytraits.rs","byte_start":101925,"byte_end":101932,"line_start":365,"line_end":365,"column_start":1,"column_end":8}},{"value":"/ use ndarray::AsArray;","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/arraytraits.rs","byte_start":101933,"byte_end":101958,"line_start":366,"line_end":366,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/arraytraits.rs","byte_start":101959,"byte_end":101962,"line_start":367,"line_end":367,"column_start":1,"column_end":4}},{"value":"/ fn sum<'a, V: AsArray<'a, f64>>(data: V) -> f64 {","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/arraytraits.rs","byte_start":101963,"byte_end":102016,"line_start":368,"line_end":368,"column_start":1,"column_end":54}},{"value":"/     let array_view = data.into();","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/arraytraits.rs","byte_start":102017,"byte_end":102054,"line_start":369,"line_end":369,"column_start":1,"column_end":38}},{"value":"/     array_view.sum()","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/arraytraits.rs","byte_start":102055,"byte_end":102079,"line_start":370,"line_end":370,"column_start":1,"column_end":25}},{"value":"/ }","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/arraytraits.rs","byte_start":102080,"byte_end":102085,"line_start":371,"line_end":371,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/arraytraits.rs","byte_start":102086,"byte_end":102089,"line_start":372,"line_end":372,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/arraytraits.rs","byte_start":102090,"byte_end":102105,"line_start":373,"line_end":373,"column_start":1,"column_end":16}},{"value":"/     sum(&[1., 2., 3.]),","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/arraytraits.rs","byte_start":102106,"byte_end":102133,"line_start":374,"line_end":374,"column_start":1,"column_end":28}},{"value":"/     6.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/arraytraits.rs","byte_start":102134,"byte_end":102144,"line_start":375,"line_end":375,"column_start":1,"column_end":11}},{"value":"/ );","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/arraytraits.rs","byte_start":102145,"byte_end":102151,"line_start":376,"line_end":376,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/arraytraits.rs","byte_start":102152,"byte_end":102155,"line_start":377,"line_end":377,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/arraytraits.rs","byte_start":102156,"byte_end":102163,"line_start":378,"line_end":378,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":3809},"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/data_repr.rs","byte_start":103720,"byte_end":103729,"line_start":19,"line_end":19,"column_start":12,"column_end":21},"name":"OwnedRepr","qualname":"::data_repr::OwnedRepr","value":"OwnedRepr {  }","parent":null,"children":[{"krate":0,"index":3811},{"krate":0,"index":3812},{"krate":0,"index":3813}],"decl_id":null,"docs":" Array's representation.","sig":null,"attributes":[{"value":"/ Array's representation.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/data_repr.rs","byte_start":103391,"byte_end":103418,"line_start":9,"line_end":9,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/data_repr.rs","byte_start":103419,"byte_end":103422,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ *Don’t use this type directly—use the type alias","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/data_repr.rs","byte_start":103423,"byte_end":103479,"line_start":11,"line_end":11,"column_start":1,"column_end":53}},{"value":"/ [`Array`](type.Array.html) for the array type!*","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/data_repr.rs","byte_start":103480,"byte_end":103531,"line_start":12,"line_end":12,"column_start":1,"column_end":52}},{"value":"repr(C)","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/data_repr.rs","byte_start":103698,"byte_end":103708,"line_start":18,"line_end":18,"column_start":1,"column_end":11}}]},{"kind":"Trait","id":{"krate":0,"index":460},"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/data_traits.rs","byte_start":108012,"byte_end":108019,"line_start":30,"line_end":30,"column_start":18,"column_end":25},"name":"RawData","qualname":"::data_traits::RawData","value":"RawData: Sized","parent":null,"children":[{"krate":0,"index":461},{"krate":0,"index":462},{"krate":0,"index":3817}],"decl_id":null,"docs":" Array representation trait.","sig":null,"attributes":[{"value":"/ Array representation trait.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/data_traits.rs","byte_start":107564,"byte_end":107595,"line_start":21,"line_end":21,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/data_traits.rs","byte_start":107596,"byte_end":107599,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ For an array that meets the invariants of the `ArrayBase` type. This trait","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/data_traits.rs","byte_start":107600,"byte_end":107678,"line_start":23,"line_end":23,"column_start":1,"column_end":79}},{"value":"/ does not imply any ownership or lifetime; pointers to elements in the array","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/data_traits.rs","byte_start":107679,"byte_end":107758,"line_start":24,"line_end":24,"column_start":1,"column_end":80}},{"value":"/ may not be safe to dereference.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/data_traits.rs","byte_start":107759,"byte_end":107794,"line_start":25,"line_end":25,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/data_traits.rs","byte_start":107795,"byte_end":107798,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ ***Note:*** `RawData` is not an extension interface at this point.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/data_traits.rs","byte_start":107799,"byte_end":107869,"line_start":27,"line_end":27,"column_start":1,"column_end":71}},{"value":"/ Traits in Rust can serve many different roles. This trait is public because","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/data_traits.rs","byte_start":107870,"byte_end":107949,"line_start":28,"line_end":28,"column_start":1,"column_end":80}},{"value":"/ it is used as a bound on public methods.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/data_traits.rs","byte_start":107950,"byte_end":107994,"line_start":29,"line_end":29,"column_start":1,"column_end":45}}]},{"kind":"Type","id":{"krate":0,"index":461},"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/data_traits.rs","byte_start":108070,"byte_end":108074,"line_start":32,"line_end":32,"column_start":10,"column_end":14},"name":"Elem","qualname":"::data_traits::RawData::Elem","value":"type Elem;","parent":{"krate":0,"index":460},"children":[],"decl_id":null,"docs":" The array element type.\n","sig":null,"attributes":[{"value":"/ The array element type.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/data_traits.rs","byte_start":108033,"byte_end":108060,"line_start":31,"line_end":31,"column_start":5,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":462},"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/data_traits.rs","byte_start":108149,"byte_end":108160,"line_start":36,"line_end":36,"column_start":8,"column_end":19},"name":"_data_slice","qualname":"::data_traits::RawData::_data_slice","value":"pub fn _data_slice(&Self) -> Option<&[Self::Elem]>","parent":{"krate":0,"index":460},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":463},"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/data_traits.rs","byte_start":108358,"byte_end":108368,"line_start":46,"line_end":46,"column_start":18,"column_end":28},"name":"RawDataMut","qualname":"::data_traits::RawDataMut","value":"RawDataMut: RawData","parent":null,"children":[{"krate":0,"index":464},{"krate":0,"index":466}],"decl_id":null,"docs":" Array representation trait.","sig":null,"attributes":[{"value":"/ Array representation trait.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/data_traits.rs","byte_start":108219,"byte_end":108250,"line_start":41,"line_end":41,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/data_traits.rs","byte_start":108251,"byte_end":108254,"line_start":42,"line_end":42,"column_start":1,"column_end":4}},{"value":"/ For an array with writable elements.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/data_traits.rs","byte_start":108255,"byte_end":108295,"line_start":43,"line_end":43,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/data_traits.rs","byte_start":108296,"byte_end":108299,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"/ ***Internal trait, see `RawData`.***","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/data_traits.rs","byte_start":108300,"byte_end":108340,"line_start":45,"line_end":45,"column_start":1,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":464},"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/data_traits.rs","byte_start":108621,"byte_end":108638,"line_start":52,"line_end":52,"column_start":8,"column_end":25},"name":"try_ensure_unique","qualname":"::data_traits::RawDataMut::try_ensure_unique","value":"pub fn try_ensure_unique<D>(&mut ArrayBase<Self, D>) where Self: Sized,\nD: Dimension","parent":{"krate":0,"index":463},"children":[],"decl_id":null,"docs":" If possible, ensures that the array has unique access to its data.","sig":null,"attributes":[{"value":"/ If possible, ensures that the array has unique access to its data.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/data_traits.rs","byte_start":108384,"byte_end":108454,"line_start":47,"line_end":47,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/data_traits.rs","byte_start":108459,"byte_end":108462,"line_start":48,"line_end":48,"column_start":5,"column_end":8}},{"value":"/ If `Self` provides safe mutable access to array elements, then it","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/data_traits.rs","byte_start":108467,"byte_end":108536,"line_start":49,"line_end":49,"column_start":5,"column_end":74}},{"value":"/ **must** panic or ensure that the data is unique.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/data_traits.rs","byte_start":108541,"byte_end":108594,"line_start":50,"line_end":50,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":466},"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/data_traits.rs","byte_start":108945,"byte_end":108958,"line_start":62,"line_end":62,"column_start":8,"column_end":21},"name":"try_is_unique","qualname":"::data_traits::RawDataMut::try_is_unique","value":"pub fn try_is_unique(&mut Self) -> Option<bool>","parent":{"krate":0,"index":463},"children":[],"decl_id":null,"docs":" If possible, returns whether the array has unique access to its data.","sig":null,"attributes":[{"value":"/ If possible, returns whether the array has unique access to its data.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/data_traits.rs","byte_start":108728,"byte_end":108801,"line_start":57,"line_end":57,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/data_traits.rs","byte_start":108806,"byte_end":108809,"line_start":58,"line_end":58,"column_start":5,"column_end":8}},{"value":"/ If `Self` provides safe mutable access to array elements, then it","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/data_traits.rs","byte_start":108814,"byte_end":108883,"line_start":59,"line_end":59,"column_start":5,"column_end":74}},{"value":"/ **must** return `Some(_)`.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/data_traits.rs","byte_start":108888,"byte_end":108918,"line_start":60,"line_end":60,"column_start":5,"column_end":35}}]},{"kind":"Trait","id":{"krate":0,"index":467},"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/data_traits.rs","byte_start":109136,"byte_end":109148,"line_start":70,"line_end":70,"column_start":18,"column_end":30},"name":"RawDataClone","qualname":"::data_traits::RawDataClone","value":"RawDataClone: RawData","parent":null,"children":[{"krate":0,"index":468},{"krate":0,"index":469}],"decl_id":null,"docs":" Array representation trait.","sig":null,"attributes":[{"value":"/ Array representation trait.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/data_traits.rs","byte_start":108990,"byte_end":109021,"line_start":65,"line_end":65,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/data_traits.rs","byte_start":109022,"byte_end":109025,"line_start":66,"line_end":66,"column_start":1,"column_end":4}},{"value":"/ An array representation that can be cloned.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/data_traits.rs","byte_start":109026,"byte_end":109073,"line_start":67,"line_end":67,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/data_traits.rs","byte_start":109074,"byte_end":109077,"line_start":68,"line_end":68,"column_start":1,"column_end":4}},{"value":"/ ***Internal trait, see `RawData`.***","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/data_traits.rs","byte_start":109078,"byte_end":109118,"line_start":69,"line_end":69,"column_start":1,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":468},"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/data_traits.rs","byte_start":109262,"byte_end":109276,"line_start":73,"line_end":73,"column_start":15,"column_end":29},"name":"clone_with_ptr","qualname":"::data_traits::RawDataClone::clone_with_ptr","value":"pub unsafe fn clone_with_ptr(&Self, NonNull<Self::Elem>)\n-> (Self, NonNull<Self::Elem>)","parent":{"krate":0,"index":467},"children":[],"decl_id":null,"docs":" Unsafe because, `ptr` must point inside the current storage.\n","sig":null,"attributes":[{"value":"/ Unsafe because, `ptr` must point inside the current storage.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/data_traits.rs","byte_start":109183,"byte_end":109247,"line_start":72,"line_end":72,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":469},"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/data_traits.rs","byte_start":109376,"byte_end":109395,"line_start":76,"line_end":76,"column_start":15,"column_end":34},"name":"clone_from_with_ptr","qualname":"::data_traits::RawDataClone::clone_from_with_ptr","value":"pub unsafe fn clone_from_with_ptr(&mut Self, &Self, NonNull<Self::Elem>)\n-> NonNull<Self::Elem>","parent":{"krate":0,"index":467},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":470},"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/data_traits.rs","byte_start":109765,"byte_end":109769,"line_start":92,"line_end":92,"column_start":18,"column_end":22},"name":"Data","qualname":"::data_traits::Data","value":"Data: RawData","parent":null,"children":[{"krate":0,"index":471},{"krate":0,"index":473}],"decl_id":null,"docs":" Array representation trait.","sig":null,"attributes":[{"value":"/ Array representation trait.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/data_traits.rs","byte_start":109599,"byte_end":109630,"line_start":87,"line_end":87,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/data_traits.rs","byte_start":109631,"byte_end":109634,"line_start":88,"line_end":88,"column_start":1,"column_end":4}},{"value":"/ For an array with elements that can be accessed with safe code.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/data_traits.rs","byte_start":109635,"byte_end":109702,"line_start":89,"line_end":89,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/data_traits.rs","byte_start":109703,"byte_end":109706,"line_start":90,"line_end":90,"column_start":1,"column_end":4}},{"value":"/ ***Internal trait, see `RawData`.***","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/data_traits.rs","byte_start":109707,"byte_end":109747,"line_start":91,"line_end":91,"column_start":1,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":471},"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/data_traits.rs","byte_start":109936,"byte_end":109946,"line_start":96,"line_end":96,"column_start":8,"column_end":18},"name":"into_owned","qualname":"::data_traits::Data::into_owned","value":"pub fn into_owned<D>(ArrayBase<Self, D>)\n-> ArrayBase<OwnedRepr<Self::Elem>, D> where Self::Elem: Clone, D: Dimension","parent":{"krate":0,"index":470},"children":[],"decl_id":null,"docs":" Converts the array to a uniquely owned array, cloning elements if necessary.\n","sig":null,"attributes":[{"value":"/ Converts the array to a uniquely owned array, cloning elements if necessary.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/data_traits.rs","byte_start":109785,"byte_end":109865,"line_start":93,"line_end":93,"column_start":5,"column_end":85}},{"value":"allow(clippy :: wrong_self_convention)","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/data_traits.rs","byte_start":109889,"byte_end":109928,"line_start":95,"line_end":95,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":473},"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/data_traits.rs","byte_start":110268,"byte_end":110277,"line_start":105,"line_end":105,"column_start":8,"column_end":17},"name":"to_shared","qualname":"::data_traits::Data::to_shared","value":"pub fn to_shared<D>(&ArrayBase<Self, D>)\n-> ArrayBase<OwnedArcRepr<Self::Elem>, D> where Self::Elem: Clone,\nD: Dimension","parent":{"krate":0,"index":470},"children":[],"decl_id":null,"docs":" Return a shared ownership (copy on write) array based on the existing one,\n cloning elements if necessary.\n","sig":null,"attributes":[{"value":"/ Return a shared ownership (copy on write) array based on the existing one,","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/data_traits.rs","byte_start":110080,"byte_end":110158,"line_start":101,"line_end":101,"column_start":5,"column_end":83}},{"value":"/ cloning elements if necessary.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/data_traits.rs","byte_start":110163,"byte_end":110197,"line_start":102,"line_end":102,"column_start":5,"column_end":39}},{"value":"allow(clippy :: wrong_self_convention)","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/data_traits.rs","byte_start":110221,"byte_end":110260,"line_start":104,"line_end":104,"column_start":5,"column_end":44}}]},{"kind":"Trait","id":{"krate":0,"index":475},"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/data_traits.rs","byte_start":110941,"byte_end":110948,"line_start":127,"line_end":127,"column_start":18,"column_end":25},"name":"DataMut","qualname":"::data_traits::DataMut","value":"DataMut: Data + RawDataMut","parent":null,"children":[{"krate":0,"index":476},{"krate":0,"index":478}],"decl_id":null,"docs":" Array representation trait.","sig":null,"attributes":[{"value":"/ Array representation trait.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/data_traits.rs","byte_start":110491,"byte_end":110522,"line_start":115,"line_end":115,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/data_traits.rs","byte_start":110523,"byte_end":110526,"line_start":116,"line_end":116,"column_start":1,"column_end":4}},{"value":"/ For an array with writable elements that can be accessed with safe code.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/data_traits.rs","byte_start":110527,"byte_end":110603,"line_start":117,"line_end":117,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/data_traits.rs","byte_start":110604,"byte_end":110607,"line_start":118,"line_end":118,"column_start":1,"column_end":4}},{"value":"/ ***Internal trait, see `Data`.***","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/data_traits.rs","byte_start":110608,"byte_end":110645,"line_start":119,"line_end":119,"column_start":1,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":476},"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/data_traits.rs","byte_start":111072,"byte_end":111085,"line_start":131,"line_end":131,"column_start":8,"column_end":21},"name":"ensure_unique","qualname":"::data_traits::DataMut::ensure_unique","value":"pub fn ensure_unique<D>(&mut ArrayBase<Self, D>) where Self: Sized,\nD: Dimension","parent":{"krate":0,"index":475},"children":[],"decl_id":null,"docs":" Ensures that the array has unique access to its data.\n","sig":null,"attributes":[{"value":"/ Ensures that the array has unique access to its data.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/data_traits.rs","byte_start":110974,"byte_end":111031,"line_start":128,"line_end":128,"column_start":5,"column_end":62}},{"value":"inline","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/data_traits.rs","byte_start":111055,"byte_end":111064,"line_start":130,"line_end":130,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":478},"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/data_traits.rs","byte_start":111331,"byte_end":111340,"line_start":142,"line_end":142,"column_start":8,"column_end":17},"name":"is_unique","qualname":"::data_traits::DataMut::is_unique","value":"pub fn is_unique(&mut Self) -> bool","parent":{"krate":0,"index":475},"children":[],"decl_id":null,"docs":" Returns whether the array has unique access to its data.\n","sig":null,"attributes":[{"value":"/ Returns whether the array has unique access to its data.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/data_traits.rs","byte_start":111230,"byte_end":111290,"line_start":139,"line_end":139,"column_start":5,"column_end":65}},{"value":"inline","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/data_traits.rs","byte_start":111314,"byte_end":111323,"line_start":141,"line_end":141,"column_start":5,"column_end":14}}]},{"kind":"Trait","id":{"krate":0,"index":570},"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/data_traits.rs","byte_start":118317,"byte_end":118326,"line_start":411,"line_end":411,"column_start":18,"column_end":27},"name":"DataOwned","qualname":"::data_traits::DataOwned","value":"DataOwned: Data","parent":null,"children":[{"krate":0,"index":571},{"krate":0,"index":572},{"krate":0,"index":573}],"decl_id":null,"docs":" Array representation trait.","sig":null,"attributes":[{"value":"/ Array representation trait.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/data_traits.rs","byte_start":117629,"byte_end":117660,"line_start":399,"line_end":399,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/data_traits.rs","byte_start":117661,"byte_end":117664,"line_start":400,"line_end":400,"column_start":1,"column_end":4}},{"value":"/ A representation that is a unique or shared owner of its data.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/data_traits.rs","byte_start":117665,"byte_end":117731,"line_start":401,"line_end":401,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/data_traits.rs","byte_start":117732,"byte_end":117735,"line_start":402,"line_end":402,"column_start":1,"column_end":4}},{"value":"/ ***Internal trait, see `Data`.***","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/data_traits.rs","byte_start":117736,"byte_end":117773,"line_start":403,"line_end":403,"column_start":1,"column_end":38}}]},{"kind":"Type","id":{"krate":0,"index":571},"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/data_traits.rs","byte_start":118403,"byte_end":118414,"line_start":413,"line_end":413,"column_start":10,"column_end":21},"name":"MaybeUninit","qualname":"::data_traits::DataOwned::MaybeUninit","value":"type MaybeUninit: DataOwned<Elem = MaybeUninit<Self::Elem>>\n        + RawDataSubst<Self::Elem, Output=Self>;","parent":{"krate":0,"index":570},"children":[],"decl_id":null,"docs":" Corresponding owned data with MaybeUninit elements\n","sig":null,"attributes":[{"value":"/ Corresponding owned data with MaybeUninit elements","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/data_traits.rs","byte_start":118339,"byte_end":118393,"line_start":412,"line_end":412,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":572},"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/data_traits.rs","byte_start":118533,"byte_end":118536,"line_start":416,"line_end":416,"column_start":8,"column_end":11},"name":"new","qualname":"::data_traits::DataOwned::new","value":"pub fn new(Vec<Self::Elem>) -> Self","parent":{"krate":0,"index":570},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":573},"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/data_traits.rs","byte_start":118714,"byte_end":118725,"line_start":421,"line_end":421,"column_start":8,"column_end":19},"name":"into_shared","qualname":"::data_traits::DataOwned::into_shared","value":"pub fn into_shared(Self) -> OwnedArcRepr<Self::Elem>","parent":{"krate":0,"index":570},"children":[],"decl_id":null,"docs":" Converts the data representation to a shared (copy on write)\n representation, without any copying.\n","sig":null,"attributes":[{"value":"/ Converts the data representation to a shared (copy on write)","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/data_traits.rs","byte_start":118578,"byte_end":118642,"line_start":418,"line_end":418,"column_start":5,"column_end":69}},{"value":"/ representation, without any copying.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/data_traits.rs","byte_start":118647,"byte_end":118687,"line_start":419,"line_end":419,"column_start":5,"column_end":45}}]},{"kind":"Trait","id":{"krate":0,"index":574},"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/data_traits.rs","byte_start":118908,"byte_end":118918,"line_start":429,"line_end":429,"column_start":18,"column_end":28},"name":"DataShared","qualname":"::data_traits::DataShared","value":"DataShared: Clone + Data + RawDataClone","parent":null,"children":[],"decl_id":null,"docs":" Array representation trait.","sig":null,"attributes":[{"value":"/ Array representation trait.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/data_traits.rs","byte_start":118764,"byte_end":118795,"line_start":424,"line_end":424,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/data_traits.rs","byte_start":118796,"byte_end":118799,"line_start":425,"line_end":425,"column_start":1,"column_end":4}},{"value":"/ A representation that is a lightweight view.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/data_traits.rs","byte_start":118800,"byte_end":118848,"line_start":426,"line_end":426,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/data_traits.rs","byte_start":118849,"byte_end":118852,"line_start":427,"line_end":427,"column_start":1,"column_end":4}},{"value":"/ ***Internal trait, see `Data`.***","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/data_traits.rs","byte_start":118853,"byte_end":118890,"line_start":428,"line_end":428,"column_start":1,"column_end":38}}]},{"kind":"Trait","id":{"krate":0,"index":614},"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/data_traits.rs","byte_start":122747,"byte_end":122759,"line_start":563,"line_end":563,"column_start":11,"column_end":23},"name":"RawDataSubst","qualname":"::data_traits::RawDataSubst","value":"RawDataSubst<A>: RawData","parent":null,"children":[{"krate":0,"index":616},{"krate":0,"index":617}],"decl_id":null,"docs":" Array representation trait.","sig":null,"attributes":[{"value":"/ Array representation trait.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/data_traits.rs","byte_start":122500,"byte_end":122531,"line_start":557,"line_end":557,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/data_traits.rs","byte_start":122532,"byte_end":122535,"line_start":558,"line_end":558,"column_start":1,"column_end":4}},{"value":"/ The RawDataSubst trait maps the element type of array storage, while","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/data_traits.rs","byte_start":122536,"byte_end":122608,"line_start":559,"line_end":559,"column_start":1,"column_end":73}},{"value":"/ keeping the same kind of storage.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/data_traits.rs","byte_start":122609,"byte_end":122646,"line_start":560,"line_end":560,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/data_traits.rs","byte_start":122647,"byte_end":122650,"line_start":561,"line_end":561,"column_start":1,"column_end":4}},{"value":"/ For example, `RawDataSubst<B>` can map the type `OwnedRepr<A>` to `OwnedRepr<B>`.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/data_traits.rs","byte_start":122651,"byte_end":122736,"line_start":562,"line_end":562,"column_start":1,"column_end":86}}]},{"kind":"Type","id":{"krate":0,"index":616},"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/data_traits.rs","byte_start":122865,"byte_end":122871,"line_start":565,"line_end":565,"column_start":10,"column_end":16},"name":"Output","qualname":"::data_traits::RawDataSubst::Output","value":"type Output: RawData<Elem = A>;","parent":{"krate":0,"index":614},"children":[],"decl_id":null,"docs":" The resulting array storage of the same kind but substituted element type\n","sig":null,"attributes":[{"value":"/ The resulting array storage of the same kind but substituted element type","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/data_traits.rs","byte_start":122778,"byte_end":122855,"line_start":564,"line_end":564,"column_start":5,"column_end":82}}]},{"kind":"Method","id":{"krate":0,"index":617},"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/data_traits.rs","byte_start":123115,"byte_end":123125,"line_start":573,"line_end":573,"column_start":15,"column_end":25},"name":"data_subst","qualname":"::data_traits::RawDataSubst::data_subst","value":"pub unsafe fn data_subst(Self) -> Self::Output","parent":{"krate":0,"index":614},"children":[],"decl_id":null,"docs":" Unsafely translate the data representation from one element\n representation to another.","sig":null,"attributes":[{"value":"/ Unsafely translate the data representation from one element","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/data_traits.rs","byte_start":122897,"byte_end":122960,"line_start":567,"line_end":567,"column_start":5,"column_end":68}},{"value":"/ representation to another.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/data_traits.rs","byte_start":122965,"byte_end":122995,"line_start":568,"line_end":568,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/data_traits.rs","byte_start":123000,"byte_end":123003,"line_start":569,"line_end":569,"column_start":5,"column_end":8}},{"value":"/ ## Safety","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/data_traits.rs","byte_start":123008,"byte_end":123021,"line_start":570,"line_end":570,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/data_traits.rs","byte_start":123026,"byte_end":123029,"line_start":571,"line_end":571,"column_start":5,"column_end":8}},{"value":"/ Caller must ensure the two types have the same representation.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/data_traits.rs","byte_start":123034,"byte_end":123100,"line_start":572,"line_end":572,"column_start":5,"column_end":71}}]},{"kind":"Function","id":{"krate":0,"index":673},"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/free_functions.rs","byte_start":125806,"byte_end":125810,"line_start":53,"line_end":53,"column_start":8,"column_end":12},"name":"arr0","qualname":"::free_functions::arr0","value":"pub fn arr0<A>(A) -> Array0<A>","parent":null,"children":[],"decl_id":null,"docs":" Create a zero-dimensional array with the element `x`.\n","sig":null,"attributes":[{"value":"/ Create a zero-dimensional array with the element `x`.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/free_functions.rs","byte_start":125741,"byte_end":125798,"line_start":52,"line_end":52,"column_start":1,"column_end":58}}]},{"kind":"Function","id":{"krate":0,"index":675},"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/free_functions.rs","byte_start":125969,"byte_end":125973,"line_start":58,"line_end":58,"column_start":8,"column_end":12},"name":"arr1","qualname":"::free_functions::arr1","value":"pub fn arr1<A: Clone>(&[A]) -> Array1<A>","parent":null,"children":[],"decl_id":null,"docs":" Create a one-dimensional array with elements from `xs`.\n","sig":null,"attributes":[{"value":"/ Create a one-dimensional array with elements from `xs`.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/free_functions.rs","byte_start":125902,"byte_end":125961,"line_start":57,"line_end":57,"column_start":1,"column_end":60}}]},{"kind":"Function","id":{"krate":0,"index":677},"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/free_functions.rs","byte_start":126112,"byte_end":126118,"line_start":63,"line_end":63,"column_start":8,"column_end":14},"name":"rcarr1","qualname":"::free_functions::rcarr1","value":"pub fn rcarr1<A: Clone>(&[A]) -> ArcArray1<A>","parent":null,"children":[],"decl_id":null,"docs":" Create a one-dimensional array with elements from `xs`.\n","sig":null,"attributes":[{"value":"/ Create a one-dimensional array with elements from `xs`.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/free_functions.rs","byte_start":126045,"byte_end":126104,"line_start":62,"line_end":62,"column_start":1,"column_end":60}}]},{"kind":"Function","id":{"krate":0,"index":679},"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/free_functions.rs","byte_start":126250,"byte_end":126256,"line_start":68,"line_end":68,"column_start":8,"column_end":14},"name":"aview0","qualname":"::free_functions::aview0","value":"pub fn aview0<A>(&A) -> ArrayView0<, A>","parent":null,"children":[],"decl_id":null,"docs":" Create a zero-dimensional array view borrowing `x`.\n","sig":null,"attributes":[{"value":"/ Create a zero-dimensional array view borrowing `x`.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/free_functions.rs","byte_start":126187,"byte_end":126242,"line_start":67,"line_end":67,"column_start":1,"column_end":56}}]},{"kind":"Function","id":{"krate":0,"index":681},"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/free_functions.rs","byte_start":126649,"byte_end":126655,"line_start":84,"line_end":84,"column_start":8,"column_end":14},"name":"aview1","qualname":"::free_functions::aview1","value":"pub fn aview1<A>(&[A]) -> ArrayView1<, A>","parent":null,"children":[],"decl_id":null,"docs":" Create a one-dimensional array view with elements borrowing `xs`.","sig":null,"attributes":[{"value":"/ Create a one-dimensional array view with elements borrowing `xs`.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/free_functions.rs","byte_start":126344,"byte_end":126413,"line_start":72,"line_end":72,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/free_functions.rs","byte_start":126414,"byte_end":126417,"line_start":73,"line_end":73,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/free_functions.rs","byte_start":126418,"byte_end":126425,"line_start":74,"line_end":74,"column_start":1,"column_end":8}},{"value":"/ use ndarray::aview1;","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/free_functions.rs","byte_start":126426,"byte_end":126450,"line_start":75,"line_end":75,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/free_functions.rs","byte_start":126451,"byte_end":126454,"line_start":76,"line_end":76,"column_start":1,"column_end":4}},{"value":"/ let data = [1.0; 1024];","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/free_functions.rs","byte_start":126455,"byte_end":126482,"line_start":77,"line_end":77,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/free_functions.rs","byte_start":126483,"byte_end":126486,"line_start":78,"line_end":78,"column_start":1,"column_end":4}},{"value":"/ // Create a 2D array view from borrowed data","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/free_functions.rs","byte_start":126487,"byte_end":126535,"line_start":79,"line_end":79,"column_start":1,"column_end":49}},{"value":"/ let a2d = aview1(&data).into_shape((32, 32)).unwrap();","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/free_functions.rs","byte_start":126536,"byte_end":126594,"line_start":80,"line_end":80,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/free_functions.rs","byte_start":126595,"byte_end":126598,"line_start":81,"line_end":81,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(a2d.sum(), 1024.0);","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/free_functions.rs","byte_start":126599,"byte_end":126633,"line_start":82,"line_end":82,"column_start":1,"column_end":35}},{"value":"/ ```","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/free_functions.rs","byte_start":126634,"byte_end":126641,"line_start":83,"line_end":83,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":683},"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/free_functions.rs","byte_start":126924,"byte_end":126930,"line_start":92,"line_end":92,"column_start":8,"column_end":14},"name":"aview2","qualname":"::free_functions::aview2","value":"pub fn aview2<A, V: FixedInitializer<Elem = A>>(&[V]) -> ArrayView2<, A>","parent":null,"children":[],"decl_id":null,"docs":" Create a two-dimensional array view with elements borrowing `xs`.","sig":null,"attributes":[{"value":"/ Create a two-dimensional array view with elements borrowing `xs`.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/free_functions.rs","byte_start":126719,"byte_end":126788,"line_start":88,"line_end":88,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/free_functions.rs","byte_start":126789,"byte_end":126792,"line_start":89,"line_end":89,"column_start":1,"column_end":4}},{"value":"/ **Panics** if the product of non-zero axis lengths overflows `isize`. (This","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/free_functions.rs","byte_start":126793,"byte_end":126872,"line_start":90,"line_end":90,"column_start":1,"column_end":80}},{"value":"/ can only occur when `V` is zero-sized.)","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/free_functions.rs","byte_start":126873,"byte_end":126916,"line_start":91,"line_end":91,"column_start":1,"column_end":44}}]},{"kind":"Function","id":{"krate":0,"index":686},"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/free_functions.rs","byte_start":128247,"byte_end":128257,"line_start":124,"line_end":124,"column_start":8,"column_end":18},"name":"aview_mut1","qualname":"::free_functions::aview_mut1","value":"pub fn aview_mut1<A>(&mut [A]) -> ArrayViewMut1<, A>","parent":null,"children":[],"decl_id":null,"docs":" Create a one-dimensional read-write array view with elements borrowing `xs`.","sig":null,"attributes":[{"value":"/ Create a one-dimensional read-write array view with elements borrowing `xs`.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/free_functions.rs","byte_start":127813,"byte_end":127893,"line_start":112,"line_end":112,"column_start":1,"column_end":81}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/free_functions.rs","byte_start":127894,"byte_end":127897,"line_start":113,"line_end":113,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/free_functions.rs","byte_start":127898,"byte_end":127905,"line_start":114,"line_end":114,"column_start":1,"column_end":8}},{"value":"/ use ndarray::{aview_mut1, s};","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/free_functions.rs","byte_start":127906,"byte_end":127939,"line_start":115,"line_end":115,"column_start":1,"column_end":34}},{"value":"/ // Create an array view over some data, then slice it and modify it.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/free_functions.rs","byte_start":127940,"byte_end":128012,"line_start":116,"line_end":116,"column_start":1,"column_end":73}},{"value":"/ let mut data = [0; 1024];","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/free_functions.rs","byte_start":128013,"byte_end":128042,"line_start":117,"line_end":117,"column_start":1,"column_end":30}},{"value":"/ {","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/free_functions.rs","byte_start":128043,"byte_end":128048,"line_start":118,"line_end":118,"column_start":1,"column_end":6}},{"value":"/     let mut a = aview_mut1(&mut data).into_shape((32, 32)).unwrap();","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/free_functions.rs","byte_start":128049,"byte_end":128121,"line_start":119,"line_end":119,"column_start":1,"column_end":73}},{"value":"/     a.slice_mut(s![.., ..;3]).fill(5);","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/free_functions.rs","byte_start":128122,"byte_end":128164,"line_start":120,"line_end":120,"column_start":1,"column_end":43}},{"value":"/ }","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/free_functions.rs","byte_start":128165,"byte_end":128170,"line_start":121,"line_end":121,"column_start":1,"column_end":6}},{"value":"/ assert_eq!(&data[..10], [5, 0, 0, 5, 0, 0, 5, 0, 0, 5]);","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/free_functions.rs","byte_start":128171,"byte_end":128231,"line_start":122,"line_end":122,"column_start":1,"column_end":61}},{"value":"/ ```","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/free_functions.rs","byte_start":128232,"byte_end":128239,"line_start":123,"line_end":123,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":688},"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/free_functions.rs","byte_start":129120,"byte_end":129130,"line_start":151,"line_end":151,"column_start":8,"column_end":18},"name":"aview_mut2","qualname":"::free_functions::aview_mut2","value":"pub fn aview_mut2<A, V: FixedInitializer<Elem = A>>(&mut [V])\n-> ArrayViewMut2<, A>","parent":null,"children":[],"decl_id":null,"docs":" Create a two-dimensional read-write array view with elements borrowing `xs`.","sig":null,"attributes":[{"value":"/ Create a two-dimensional read-write array view with elements borrowing `xs`.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/free_functions.rs","byte_start":128331,"byte_end":128411,"line_start":128,"line_end":128,"column_start":1,"column_end":81}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/free_functions.rs","byte_start":128412,"byte_end":128415,"line_start":129,"line_end":129,"column_start":1,"column_end":4}},{"value":"/ **Panics** if the product of non-zero axis lengths overflows `isize`. (This","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/free_functions.rs","byte_start":128416,"byte_end":128495,"line_start":130,"line_end":130,"column_start":1,"column_end":80}},{"value":"/ can only occur when `V` is zero-sized.)","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/free_functions.rs","byte_start":128496,"byte_end":128539,"line_start":131,"line_end":131,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/free_functions.rs","byte_start":128540,"byte_end":128543,"line_start":132,"line_end":132,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/free_functions.rs","byte_start":128544,"byte_end":128557,"line_start":133,"line_end":133,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/free_functions.rs","byte_start":128558,"byte_end":128561,"line_start":134,"line_end":134,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/free_functions.rs","byte_start":128562,"byte_end":128569,"line_start":135,"line_end":135,"column_start":1,"column_end":8}},{"value":"/ use ndarray::aview_mut2;","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/free_functions.rs","byte_start":128570,"byte_end":128598,"line_start":136,"line_end":136,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/free_functions.rs","byte_start":128599,"byte_end":128602,"line_start":137,"line_end":137,"column_start":1,"column_end":4}},{"value":"/ // The inner (nested) array must be of length 1 to 16, but the outer","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/free_functions.rs","byte_start":128603,"byte_end":128675,"line_start":138,"line_end":138,"column_start":1,"column_end":73}},{"value":"/ // can be of any length.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/free_functions.rs","byte_start":128676,"byte_end":128704,"line_start":139,"line_end":139,"column_start":1,"column_end":29}},{"value":"/ let mut data = [[0.; 2]; 128];","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/free_functions.rs","byte_start":128705,"byte_end":128739,"line_start":140,"line_end":140,"column_start":1,"column_end":35}},{"value":"/ {","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/free_functions.rs","byte_start":128740,"byte_end":128745,"line_start":141,"line_end":141,"column_start":1,"column_end":6}},{"value":"/     // Make a 128 x 2 mut array view then turn it into 2 x 128","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/free_functions.rs","byte_start":128746,"byte_end":128812,"line_start":142,"line_end":142,"column_start":1,"column_end":67}},{"value":"/     let mut a = aview_mut2(&mut data).reversed_axes();","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/free_functions.rs","byte_start":128813,"byte_end":128871,"line_start":143,"line_end":143,"column_start":1,"column_end":59}},{"value":"/     // Make the first row ones and second row minus ones.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/free_functions.rs","byte_start":128872,"byte_end":128933,"line_start":144,"line_end":144,"column_start":1,"column_end":62}},{"value":"/     a.row_mut(0).fill(1.);","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/free_functions.rs","byte_start":128934,"byte_end":128964,"line_start":145,"line_end":145,"column_start":1,"column_end":31}},{"value":"/     a.row_mut(1).fill(-1.);","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/free_functions.rs","byte_start":128965,"byte_end":128996,"line_start":146,"line_end":146,"column_start":1,"column_end":32}},{"value":"/ }","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/free_functions.rs","byte_start":128997,"byte_end":129002,"line_start":147,"line_end":147,"column_start":1,"column_end":6}},{"value":"/ // look at the start of the result","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/free_functions.rs","byte_start":129003,"byte_end":129041,"line_start":148,"line_end":148,"column_start":1,"column_end":39}},{"value":"/ assert_eq!(&data[..3], [[1., -1.], [1., -1.], [1., -1.]]);","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/free_functions.rs","byte_start":129042,"byte_end":129104,"line_start":149,"line_end":149,"column_start":1,"column_end":63}},{"value":"/ ```","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/free_functions.rs","byte_start":129105,"byte_end":129112,"line_start":150,"line_end":150,"column_start":1,"column_end":8}}]},{"kind":"Trait","id":{"krate":0,"index":691},"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/free_functions.rs","byte_start":130101,"byte_end":130117,"line_start":172,"line_end":172,"column_start":18,"column_end":34},"name":"FixedInitializer","qualname":"::free_functions::FixedInitializer","value":"FixedInitializer","parent":null,"children":[{"krate":0,"index":692},{"krate":0,"index":693},{"krate":0,"index":694}],"decl_id":null,"docs":" Fixed-size array used for array initialization\n","sig":null,"attributes":[{"value":"/ Fixed-size array used for array initialization","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/free_functions.rs","byte_start":130033,"byte_end":130083,"line_start":171,"line_end":171,"column_start":1,"column_end":51}}]},{"kind":"Type","id":{"krate":0,"index":692},"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/free_functions.rs","byte_start":130129,"byte_end":130133,"line_start":173,"line_end":173,"column_start":10,"column_end":14},"name":"Elem","qualname":"::free_functions::FixedInitializer::Elem","value":"type Elem;","parent":{"krate":0,"index":691},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":693},"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/free_functions.rs","byte_start":130142,"byte_end":130155,"line_start":174,"line_end":174,"column_start":8,"column_end":21},"name":"as_init_slice","qualname":"::free_functions::FixedInitializer::as_init_slice","value":"pub fn as_init_slice(&Self) -> &[Self::Elem]","parent":{"krate":0,"index":691},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":694},"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/free_functions.rs","byte_start":130188,"byte_end":130191,"line_start":175,"line_end":175,"column_start":8,"column_end":11},"name":"len","qualname":"::free_functions::FixedInitializer::len","value":"pub fn len() -> usize","parent":{"krate":0,"index":691},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":696},"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/free_functions.rs","byte_start":131251,"byte_end":131255,"line_start":212,"line_end":212,"column_start":8,"column_end":12},"name":"arr2","qualname":"::free_functions::arr2","value":"pub fn arr2<A: Clone, V: FixedInitializer<Elem = A>>(&[V]) -> Array2<A> where\nV: Clone","parent":null,"children":[],"decl_id":null,"docs":" Create a two-dimensional array with elements from `xs`.","sig":null,"attributes":[{"value":"/ Create a two-dimensional array with elements from `xs`.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/free_functions.rs","byte_start":131027,"byte_end":131086,"line_start":201,"line_end":201,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/free_functions.rs","byte_start":131087,"byte_end":131090,"line_start":202,"line_end":202,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/free_functions.rs","byte_start":131091,"byte_end":131098,"line_start":203,"line_end":203,"column_start":1,"column_end":8}},{"value":"/ use ndarray::arr2;","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/free_functions.rs","byte_start":131099,"byte_end":131121,"line_start":204,"line_end":204,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/free_functions.rs","byte_start":131122,"byte_end":131125,"line_start":205,"line_end":205,"column_start":1,"column_end":4}},{"value":"/ let a = arr2(&[[1, 2, 3],","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/free_functions.rs","byte_start":131126,"byte_end":131155,"line_start":206,"line_end":206,"column_start":1,"column_end":30}},{"value":"/                [4, 5, 6]]);","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/free_functions.rs","byte_start":131156,"byte_end":131187,"line_start":207,"line_end":207,"column_start":1,"column_end":32}},{"value":"/ assert!(","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/free_functions.rs","byte_start":131188,"byte_end":131200,"line_start":208,"line_end":208,"column_start":1,"column_end":13}},{"value":"/     a.shape() == [2, 3]","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/free_functions.rs","byte_start":131201,"byte_end":131228,"line_start":209,"line_end":209,"column_start":1,"column_end":28}},{"value":"/ );","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/free_functions.rs","byte_start":131229,"byte_end":131235,"line_start":210,"line_end":210,"column_start":1,"column_end":7}},{"value":"/ ```","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/free_functions.rs","byte_start":131236,"byte_end":131243,"line_start":211,"line_end":211,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":708},"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/free_functions.rs","byte_start":133768,"byte_end":133774,"line_start":282,"line_end":282,"column_start":8,"column_end":14},"name":"rcarr2","qualname":"::free_functions::rcarr2","value":"pub fn rcarr2<A: Clone, V: Clone + FixedInitializer<Elem = A>>(&[V])\n-> ArcArray2<A>","parent":null,"children":[],"decl_id":null,"docs":" Create a two-dimensional array with elements from `xs`.","sig":null,"attributes":[{"value":"/ Create a two-dimensional array with elements from `xs`.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/free_functions.rs","byte_start":133697,"byte_end":133756,"line_start":280,"line_end":280,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/free_functions.rs","byte_start":133757,"byte_end":133760,"line_start":281,"line_end":281,"column_start":1,"column_end":4}}]},{"kind":"Function","id":{"krate":0,"index":711},"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/free_functions.rs","byte_start":134287,"byte_end":134291,"line_start":303,"line_end":303,"column_start":8,"column_end":12},"name":"arr3","qualname":"::free_functions::arr3","value":"pub fn arr3<A: Clone, V: FixedInitializer<Elem = U>, U: FixedInitializer<Elem\n            = A>>(&[V]) -> Array3<A> where V: Clone, U: Clone","parent":null,"children":[],"decl_id":null,"docs":" Create a three-dimensional array with elements from `xs`.","sig":null,"attributes":[{"value":"/ Create a three-dimensional array with elements from `xs`.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/free_functions.rs","byte_start":133882,"byte_end":133943,"line_start":286,"line_end":286,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/free_functions.rs","byte_start":133944,"byte_end":133947,"line_start":287,"line_end":287,"column_start":1,"column_end":4}},{"value":"/ **Panics** if the slices are not all of the same length.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/free_functions.rs","byte_start":133948,"byte_end":134008,"line_start":288,"line_end":288,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/free_functions.rs","byte_start":134009,"byte_end":134012,"line_start":289,"line_end":289,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/free_functions.rs","byte_start":134013,"byte_end":134020,"line_start":290,"line_end":290,"column_start":1,"column_end":8}},{"value":"/ use ndarray::arr3;","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/free_functions.rs","byte_start":134021,"byte_end":134043,"line_start":291,"line_end":291,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/free_functions.rs","byte_start":134044,"byte_end":134047,"line_start":292,"line_end":292,"column_start":1,"column_end":4}},{"value":"/ let a = arr3(&[[[1, 2],","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/free_functions.rs","byte_start":134048,"byte_end":134075,"line_start":293,"line_end":293,"column_start":1,"column_end":28}},{"value":"/                 [3, 4]],","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/free_functions.rs","byte_start":134076,"byte_end":134104,"line_start":294,"line_end":294,"column_start":1,"column_end":29}},{"value":"/                [[5, 6],","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/free_functions.rs","byte_start":134105,"byte_end":134132,"line_start":295,"line_end":295,"column_start":1,"column_end":28}},{"value":"/                 [7, 8]],","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/free_functions.rs","byte_start":134133,"byte_end":134161,"line_start":296,"line_end":296,"column_start":1,"column_end":29}},{"value":"/                [[9, 0],","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/free_functions.rs","byte_start":134162,"byte_end":134189,"line_start":297,"line_end":297,"column_start":1,"column_end":28}},{"value":"/                 [1, 2]]]);","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/free_functions.rs","byte_start":134190,"byte_end":134220,"line_start":298,"line_end":298,"column_start":1,"column_end":31}},{"value":"/ assert!(","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/free_functions.rs","byte_start":134221,"byte_end":134233,"line_start":299,"line_end":299,"column_start":1,"column_end":13}},{"value":"/     a.shape() == [3, 2, 2]","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/free_functions.rs","byte_start":134234,"byte_end":134264,"line_start":300,"line_end":300,"column_start":1,"column_end":31}},{"value":"/ );","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/free_functions.rs","byte_start":134265,"byte_end":134271,"line_start":301,"line_end":301,"column_start":1,"column_end":7}},{"value":"/ ```","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/free_functions.rs","byte_start":134272,"byte_end":134279,"line_start":302,"line_end":302,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":715},"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/free_functions.rs","byte_start":134532,"byte_end":134538,"line_start":314,"line_end":314,"column_start":8,"column_end":14},"name":"rcarr3","qualname":"::free_functions::rcarr3","value":"pub fn rcarr3<A: Clone, V: FixedInitializer<Elem = U>,\n              U: FixedInitializer<Elem = A>>(&[V]) -> ArcArray<A, Ix3> where\nV: Clone, U: Clone","parent":null,"children":[],"decl_id":null,"docs":" Create a three-dimensional array with elements from `xs`.\n","sig":null,"attributes":[{"value":"/ Create a three-dimensional array with elements from `xs`.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/free_functions.rs","byte_start":134463,"byte_end":134524,"line_start":313,"line_end":313,"column_start":1,"column_end":62}}]},{"kind":"Struct","id":{"krate":0,"index":3927},"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/error.rs","byte_start":135229,"byte_end":135239,"line_start":15,"line_end":15,"column_start":12,"column_end":22},"name":"ShapeError","qualname":"::error::ShapeError","value":"ShapeError {  }","parent":null,"children":[{"krate":0,"index":3928}],"decl_id":null,"docs":" An error related to array shape or layout.\n","sig":null,"attributes":[{"value":"/ An error related to array shape or layout.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/error.rs","byte_start":135154,"byte_end":135200,"line_start":13,"line_end":13,"column_start":1,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":726},"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/error.rs","byte_start":135417,"byte_end":135421,"line_start":23,"line_end":23,"column_start":12,"column_end":16},"name":"kind","qualname":"<ShapeError>::kind","value":"pub fn kind(&Self) -> ErrorKind","parent":null,"children":[],"decl_id":null,"docs":" Return the `ErrorKind` of this error.\n","sig":null,"attributes":[{"value":"/ Return the `ErrorKind` of this error.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/error.rs","byte_start":135350,"byte_end":135391,"line_start":21,"line_end":21,"column_start":5,"column_end":46}},{"value":"inline","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/error.rs","byte_start":135396,"byte_end":135405,"line_start":22,"line_end":22,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":727},"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/error.rs","byte_start":135514,"byte_end":135523,"line_start":28,"line_end":28,"column_start":12,"column_end":21},"name":"from_kind","qualname":"<ShapeError>::from_kind","value":"pub fn from_kind(ErrorKind) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new `ShapeError`\n","sig":null,"attributes":[{"value":"/ Create a new `ShapeError`","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/error.rs","byte_start":135473,"byte_end":135502,"line_start":27,"line_end":27,"column_start":5,"column_end":34}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3932},"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/error.rs","byte_start":135846,"byte_end":135863,"line_start":41,"line_end":41,"column_start":5,"column_end":22},"name":"IncompatibleShape","qualname":"::error::ErrorKind::IncompatibleShape","value":"ErrorKind::IncompatibleShape","parent":{"krate":0,"index":3931},"children":[],"decl_id":null,"docs":" incompatible shape\n","sig":null,"attributes":[{"value":"/ incompatible shape","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/error.rs","byte_start":135819,"byte_end":135841,"line_start":40,"line_end":40,"column_start":5,"column_end":27}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3935},"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/error.rs","byte_start":135908,"byte_end":135926,"line_start":43,"line_end":43,"column_start":5,"column_end":23},"name":"IncompatibleLayout","qualname":"::error::ErrorKind::IncompatibleLayout","value":"ErrorKind::IncompatibleLayout","parent":{"krate":0,"index":3931},"children":[],"decl_id":null,"docs":" incompatible memory layout\n","sig":null,"attributes":[{"value":"/ incompatible memory layout","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/error.rs","byte_start":135873,"byte_end":135903,"line_start":42,"line_end":42,"column_start":5,"column_end":35}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3937},"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/error.rs","byte_start":135982,"byte_end":135994,"line_start":45,"line_end":45,"column_start":5,"column_end":17},"name":"RangeLimited","qualname":"::error::ErrorKind::RangeLimited","value":"ErrorKind::RangeLimited","parent":{"krate":0,"index":3931},"children":[],"decl_id":null,"docs":" the shape does not fit inside type limits\n","sig":null,"attributes":[{"value":"/ the shape does not fit inside type limits","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/error.rs","byte_start":135932,"byte_end":135977,"line_start":44,"line_end":44,"column_start":5,"column_end":50}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3939},"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/error.rs","byte_start":136031,"byte_end":136042,"line_start":47,"line_end":47,"column_start":5,"column_end":16},"name":"OutOfBounds","qualname":"::error::ErrorKind::OutOfBounds","value":"ErrorKind::OutOfBounds","parent":{"krate":0,"index":3931},"children":[],"decl_id":null,"docs":" out of bounds indexing\n","sig":null,"attributes":[{"value":"/ out of bounds indexing","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/error.rs","byte_start":136000,"byte_end":136026,"line_start":46,"line_end":46,"column_start":5,"column_end":31}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3941},"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/error.rs","byte_start":136080,"byte_end":136091,"line_start":49,"line_end":49,"column_start":5,"column_end":16},"name":"Unsupported","qualname":"::error::ErrorKind::Unsupported","value":"ErrorKind::Unsupported","parent":{"krate":0,"index":3931},"children":[],"decl_id":null,"docs":" aliasing array elements\n","sig":null,"attributes":[{"value":"/ aliasing array elements","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/error.rs","byte_start":136048,"byte_end":136075,"line_start":48,"line_end":48,"column_start":5,"column_end":32}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3943},"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/error.rs","byte_start":136150,"byte_end":136158,"line_start":51,"line_end":51,"column_start":5,"column_end":13},"name":"Overflow","qualname":"::error::ErrorKind::Overflow","value":"ErrorKind::Overflow","parent":{"krate":0,"index":3931},"children":[],"decl_id":null,"docs":" overflow when computing offset, length, etc.\n","sig":null,"attributes":[{"value":"/ overflow when computing offset, length, etc.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/error.rs","byte_start":136097,"byte_end":136145,"line_start":50,"line_end":50,"column_start":5,"column_end":53}}]},{"kind":"Enum","id":{"krate":0,"index":3931},"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/error.rs","byte_start":135803,"byte_end":135812,"line_start":39,"line_end":39,"column_start":10,"column_end":19},"name":"ErrorKind","qualname":"::error::ErrorKind","value":"pub enum ErrorKind {\n\n    /// incompatible shape\n    IncompatibleShape = ,\n\n    /// incompatible memory layout\n    IncompatibleLayout,\n\n    /// the shape does not fit inside type limits\n    RangeLimited,\n\n    /// out of bounds indexing\n    OutOfBounds,\n\n    /// aliasing array elements\n    Unsupported,\n\n    /// overflow when computing offset, length, etc.\n    Overflow,\n}","parent":null,"children":[{"krate":0,"index":3932},{"krate":0,"index":3935},{"krate":0,"index":3937},{"krate":0,"index":3939},{"krate":0,"index":3941},{"krate":0,"index":3943}],"decl_id":null,"docs":" Error code for an error related to array shape or layout.","sig":null,"attributes":[{"value":"/ Error code for an error related to array shape or layout.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/error.rs","byte_start":135586,"byte_end":135647,"line_start":33,"line_end":33,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/error.rs","byte_start":135648,"byte_end":135651,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ This enumeration is not exhaustive. The representation of the enum","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/error.rs","byte_start":135652,"byte_end":135722,"line_start":35,"line_end":35,"column_start":1,"column_end":71}},{"value":"/ is not guaranteed.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/error.rs","byte_start":135723,"byte_end":135745,"line_start":36,"line_end":36,"column_start":1,"column_end":23}},{"value":"non_exhaustive","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/error.rs","byte_start":135746,"byte_end":135763,"line_start":37,"line_end":37,"column_start":1,"column_end":18}}]},{"kind":"Struct","id":{"krate":0,"index":3950},"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/indexes.rs","byte_start":144251,"byte_end":144262,"line_start":21,"line_end":21,"column_start":12,"column_end":23},"name":"IndicesIter","qualname":"::indexes::IndicesIter","value":"IndicesIter {  }","parent":null,"children":[{"krate":0,"index":3952},{"krate":0,"index":3953}],"decl_id":null,"docs":" An iterator over the indexes of an array shape.","sig":null,"attributes":[{"value":"/ An iterator over the indexes of an array shape.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/indexes.rs","byte_start":144133,"byte_end":144184,"line_start":17,"line_end":17,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/indexes.rs","byte_start":144185,"byte_end":144188,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ Iterator element type is `D`.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/indexes.rs","byte_start":144189,"byte_end":144222,"line_start":19,"line_end":19,"column_start":1,"column_end":34}}]},{"kind":"Function","id":{"krate":0,"index":781},"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/indexes.rs","byte_start":144482,"byte_end":144489,"line_start":30,"line_end":30,"column_start":8,"column_end":15},"name":"indices","qualname":"::indexes::indices","value":"pub fn indices<E>(E) -> Indices<E::Dim> where E: IntoDimension","parent":null,"children":[],"decl_id":null,"docs":" Create an iterable of the array shape `shape`.","sig":null,"attributes":[{"value":"/ Create an iterable of the array shape `shape`.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/indexes.rs","byte_start":144305,"byte_end":144355,"line_start":26,"line_end":26,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/indexes.rs","byte_start":144356,"byte_end":144359,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ *Note:* prefer higher order methods, arithmetic operations and","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/indexes.rs","byte_start":144360,"byte_end":144426,"line_start":28,"line_end":28,"column_start":1,"column_end":67}},{"value":"/ non-indexed iteration before using indices.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/indexes.rs","byte_start":144427,"byte_end":144474,"line_start":29,"line_end":29,"column_start":1,"column_end":48}}]},{"kind":"Function","id":{"krate":0,"index":783},"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/indexes.rs","byte_start":144856,"byte_end":144866,"line_start":45,"line_end":45,"column_start":8,"column_end":18},"name":"indices_of","qualname":"::indexes::indices_of","value":"pub fn indices_of<S, D>(&ArrayBase<S, D>) -> Indices<D> where S: Data,\nD: Dimension","parent":null,"children":[],"decl_id":null,"docs":" Return an iterable of the indices of the passed-in array.","sig":null,"attributes":[{"value":"/ Return an iterable of the indices of the passed-in array.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/indexes.rs","byte_start":144668,"byte_end":144729,"line_start":41,"line_end":41,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/indexes.rs","byte_start":144730,"byte_end":144733,"line_start":42,"line_end":42,"column_start":1,"column_end":4}},{"value":"/ *Note:* prefer higher order methods, arithmetic operations and","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/indexes.rs","byte_start":144734,"byte_end":144800,"line_start":43,"line_end":43,"column_start":1,"column_end":67}},{"value":"/ non-indexed iteration before using indices.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/indexes.rs","byte_start":144801,"byte_end":144848,"line_start":44,"line_end":44,"column_start":1,"column_end":48}}]},{"kind":"Struct","id":{"krate":0,"index":3957},"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/indexes.rs","byte_start":147193,"byte_end":147200,"line_start":134,"line_end":134,"column_start":12,"column_end":19},"name":"Indices","qualname":"::indexes::Indices","value":"Indices {  }","parent":null,"children":[{"krate":0,"index":3959},{"krate":0,"index":3960}],"decl_id":null,"docs":" Indices producer and iterable.","sig":null,"attributes":[{"value":"/ Indices producer and iterable.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/indexes.rs","byte_start":147035,"byte_end":147069,"line_start":130,"line_end":130,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/indexes.rs","byte_start":147070,"byte_end":147073,"line_start":131,"line_end":131,"column_start":1,"column_end":4}},{"value":"/ `Indices` is an `NdProducer` that produces the indices of an array shape.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/indexes.rs","byte_start":147074,"byte_end":147151,"line_start":132,"line_end":132,"column_start":1,"column_end":78}}]},{"kind":"Struct","id":{"krate":0,"index":3969},"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/indexes.rs","byte_start":147300,"byte_end":147308,"line_start":143,"line_end":143,"column_start":12,"column_end":20},"name":"IndexPtr","qualname":"::indexes::IndexPtr","value":"IndexPtr {  }","parent":null,"children":[{"krate":0,"index":3971}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":853},"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/iterators/chunks.rs","byte_start":198850,"byte_end":198861,"line_start":34,"line_end":34,"column_start":12,"column_end":23},"name":"ExactChunks","qualname":"::iterators::chunks::ExactChunks","value":"ExactChunks {  }","parent":null,"children":[{"krate":0,"index":857},{"krate":0,"index":858},{"krate":0,"index":859}],"decl_id":null,"docs":" Exact chunks producer and iterable.","sig":null,"attributes":[{"value":"/ Exact chunks producer and iterable.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/iterators/chunks.rs","byte_start":198676,"byte_end":198715,"line_start":29,"line_end":29,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/iterators/chunks.rs","byte_start":198716,"byte_end":198719,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ See [`.exact_chunks()`](../struct.ArrayBase.html#method.exact_chunks) for more","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/iterators/chunks.rs","byte_start":198720,"byte_end":198802,"line_start":31,"line_end":31,"column_start":1,"column_end":83}},{"value":"/ information.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/iterators/chunks.rs","byte_start":198803,"byte_end":198819,"line_start":32,"line_end":32,"column_start":1,"column_end":17}}]},{"kind":"Struct","id":{"krate":0,"index":873},"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/iterators/chunks.rs","byte_start":200367,"byte_end":200382,"line_start":93,"line_end":93,"column_start":12,"column_end":27},"name":"ExactChunksIter","qualname":"::iterators::chunks::ExactChunksIter","value":"ExactChunksIter {  }","parent":null,"children":[{"krate":0,"index":877},{"krate":0,"index":878},{"krate":0,"index":879}],"decl_id":null,"docs":" Exact chunks iterator.","sig":null,"attributes":[{"value":"/ Exact chunks iterator.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/iterators/chunks.rs","byte_start":200225,"byte_end":200251,"line_start":89,"line_end":89,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/iterators/chunks.rs","byte_start":200252,"byte_end":200255,"line_start":90,"line_end":90,"column_start":1,"column_end":4}},{"value":"/ See [`.exact_chunks()`](../struct.ArrayBase.html#method.exact_chunks) for more","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/iterators/chunks.rs","byte_start":200256,"byte_end":200338,"line_start":91,"line_end":91,"column_start":1,"column_end":83}},{"value":"/ information.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/iterators/chunks.rs","byte_start":200339,"byte_end":200355,"line_start":92,"line_end":92,"column_start":1,"column_end":17}}]},{"kind":"Struct","id":{"krate":0,"index":880},"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/iterators/chunks.rs","byte_start":201090,"byte_end":201104,"line_start":124,"line_end":124,"column_start":12,"column_end":26},"name":"ExactChunksMut","qualname":"::iterators::chunks::ExactChunksMut","value":"ExactChunksMut {  }","parent":null,"children":[{"krate":0,"index":884},{"krate":0,"index":885},{"krate":0,"index":886}],"decl_id":null,"docs":" Exact chunks producer and iterable.","sig":null,"attributes":[{"value":"/ Exact chunks producer and iterable.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/iterators/chunks.rs","byte_start":200908,"byte_end":200947,"line_start":119,"line_end":119,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/iterators/chunks.rs","byte_start":200948,"byte_end":200951,"line_start":120,"line_end":120,"column_start":1,"column_end":4}},{"value":"/ See [`.exact_chunks_mut()`](../struct.ArrayBase.html#method.exact_chunks_mut)","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/iterators/chunks.rs","byte_start":200952,"byte_end":201033,"line_start":121,"line_end":121,"column_start":1,"column_end":82}},{"value":"/ for more information.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/iterators/chunks.rs","byte_start":201034,"byte_end":201059,"line_start":122,"line_end":122,"column_start":1,"column_end":26}}]},{"kind":"Struct","id":{"krate":0,"index":900},"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/iterators/chunks.rs","byte_start":203557,"byte_end":203575,"line_start":227,"line_end":227,"column_start":12,"column_end":30},"name":"ExactChunksIterMut","qualname":"::iterators::chunks::ExactChunksIterMut","value":"ExactChunksIterMut {  }","parent":null,"children":[{"krate":0,"index":904},{"krate":0,"index":905},{"krate":0,"index":906}],"decl_id":null,"docs":" Exact chunks iterator.","sig":null,"attributes":[{"value":"/ Exact chunks iterator.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/iterators/chunks.rs","byte_start":203407,"byte_end":203433,"line_start":223,"line_end":223,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/iterators/chunks.rs","byte_start":203434,"byte_end":203437,"line_start":224,"line_end":224,"column_start":1,"column_end":4}},{"value":"/ See [`.exact_chunks_mut()`](../struct.ArrayBase.html#method.exact_chunks_mut)","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/iterators/chunks.rs","byte_start":203438,"byte_end":203519,"line_start":225,"line_end":225,"column_start":1,"column_end":82}},{"value":"/ for more information.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/iterators/chunks.rs","byte_start":203520,"byte_end":203545,"line_start":226,"line_end":226,"column_start":1,"column_end":26}}]},{"kind":"Mod","id":{"krate":0,"index":907},"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/iterators/iter.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"iter","qualname":"::iterators::iter","value":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/iterators/iter.rs","parent":null,"children":[{"krate":0,"index":908},{"krate":0,"index":909},{"krate":0,"index":910},{"krate":0,"index":911},{"krate":0,"index":912},{"krate":0,"index":913},{"krate":0,"index":914},{"krate":0,"index":915},{"krate":0,"index":916},{"krate":0,"index":917},{"krate":0,"index":918},{"krate":0,"index":919},{"krate":0,"index":920},{"krate":0,"index":921},{"krate":0,"index":8665},{"krate":0,"index":922},{"krate":0,"index":8667},{"krate":0,"index":923},{"krate":0,"index":924},{"krate":0,"index":925},{"krate":0,"index":926},{"krate":0,"index":927},{"krate":0,"index":928},{"krate":0,"index":929}],"decl_id":null,"docs":" Producers, iterables and iterators.","sig":null,"attributes":[{"value":"/ Producers, iterables and iterators.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/iterators/iter.rs","byte_start":203664,"byte_end":203703,"line_start":1,"line_end":1,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/iterators/iter.rs","byte_start":203704,"byte_end":203707,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ This module collects all concrete producer, iterable and iterator","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/iterators/iter.rs","byte_start":203708,"byte_end":203777,"line_start":3,"line_end":3,"column_start":1,"column_end":70}},{"value":"/ implementation structs.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/iterators/iter.rs","byte_start":203778,"byte_end":203805,"line_start":4,"line_end":4,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/iterators/iter.rs","byte_start":203806,"byte_end":203809,"line_start":5,"line_end":5,"column_start":1,"column_end":4}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/iterators/iter.rs","byte_start":203810,"byte_end":203813,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ See also [`NdProducer`](../trait.NdProducer.html).","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/iterators/iter.rs","byte_start":203814,"byte_end":203868,"line_start":7,"line_end":7,"column_start":1,"column_end":55}}]},{"kind":"Struct","id":{"krate":0,"index":938},"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/iterators/lanes.rs","byte_start":204827,"byte_end":204832,"line_start":28,"line_end":28,"column_start":12,"column_end":17},"name":"Lanes","qualname":"::iterators::lanes::Lanes","value":"Lanes {  }","parent":null,"children":[{"krate":0,"index":942},{"krate":0,"index":943},{"krate":0,"index":944}],"decl_id":null,"docs":" See [`.lanes()`](../struct.ArrayBase.html#method.lanes)\n for more information.\n","sig":null,"attributes":[{"value":"/ See [`.lanes()`](../struct.ArrayBase.html#method.lanes)","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/iterators/lanes.rs","byte_start":204730,"byte_end":204789,"line_start":26,"line_end":26,"column_start":1,"column_end":60}},{"value":"/ for more information.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/iterators/lanes.rs","byte_start":204790,"byte_end":204815,"line_start":27,"line_end":27,"column_start":1,"column_end":26}}]},{"kind":"Struct","id":{"krate":0,"index":958},"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/iterators/lanes.rs","byte_start":206479,"byte_end":206487,"line_start":97,"line_end":97,"column_start":12,"column_end":20},"name":"LanesMut","qualname":"::iterators::lanes::LanesMut","value":"LanesMut {  }","parent":null,"children":[{"krate":0,"index":962},{"krate":0,"index":963},{"krate":0,"index":964}],"decl_id":null,"docs":" See [`.lanes_mut()`](../struct.ArrayBase.html#method.lanes_mut)\n for more information.\n","sig":null,"attributes":[{"value":"/ See [`.lanes_mut()`](../struct.ArrayBase.html#method.lanes_mut)","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/iterators/lanes.rs","byte_start":206374,"byte_end":206441,"line_start":95,"line_end":95,"column_start":1,"column_end":68}},{"value":"/ for more information.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/iterators/lanes.rs","byte_start":206442,"byte_end":206467,"line_start":96,"line_end":96,"column_start":1,"column_end":26}}]},{"kind":"Struct","id":{"krate":0,"index":984},"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/iterators/windows.rs","byte_start":207936,"byte_end":207943,"line_start":11,"line_end":11,"column_start":12,"column_end":19},"name":"Windows","qualname":"::iterators::windows::Windows","value":"Windows {  }","parent":null,"children":[{"krate":0,"index":988},{"krate":0,"index":989},{"krate":0,"index":990}],"decl_id":null,"docs":" Window producer and iterable","sig":null,"attributes":[{"value":"/ Window producer and iterable","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/iterators/windows.rs","byte_start":207798,"byte_end":207830,"line_start":7,"line_end":7,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/iterators/windows.rs","byte_start":207831,"byte_end":207834,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ See [`.windows()`](../struct.ArrayBase.html#method.windows) for more","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/iterators/windows.rs","byte_start":207835,"byte_end":207907,"line_start":9,"line_end":9,"column_start":1,"column_end":73}},{"value":"/ information.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/iterators/windows.rs","byte_start":207908,"byte_end":207924,"line_start":10,"line_end":10,"column_start":1,"column_end":17}}]},{"kind":"Struct","id":{"krate":0,"index":1004},"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/iterators/windows.rs","byte_start":210007,"byte_end":210018,"line_start":91,"line_end":91,"column_start":12,"column_end":23},"name":"WindowsIter","qualname":"::iterators::windows::WindowsIter","value":"WindowsIter {  }","parent":null,"children":[{"krate":0,"index":1008},{"krate":0,"index":1009},{"krate":0,"index":1010}],"decl_id":null,"docs":" Window iterator.","sig":null,"attributes":[{"value":"/ Window iterator.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/iterators/windows.rs","byte_start":209881,"byte_end":209901,"line_start":87,"line_end":87,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/iterators/windows.rs","byte_start":209902,"byte_end":209905,"line_start":88,"line_end":88,"column_start":1,"column_end":4}},{"value":"/ See [`.windows()`](../struct.ArrayBase.html#method.windows) for more","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/iterators/windows.rs","byte_start":209906,"byte_end":209978,"line_start":89,"line_end":89,"column_start":1,"column_end":73}},{"value":"/ information.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/iterators/windows.rs","byte_start":209979,"byte_end":209995,"line_start":90,"line_end":90,"column_start":1,"column_end":17}}]},{"kind":"Struct","id":{"krate":0,"index":1117},"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/iterators/mod.rs","byte_start":160971,"byte_end":160975,"line_start":317,"line_end":317,"column_start":12,"column_end":16},"name":"Iter","qualname":"::iterators::Iter","value":"Iter {  }","parent":null,"children":[{"krate":0,"index":1121}],"decl_id":null,"docs":" An iterator over the elements of an array.","sig":null,"attributes":[{"value":"/ An iterator over the elements of an array.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/iterators/mod.rs","byte_start":160787,"byte_end":160833,"line_start":312,"line_end":312,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/iterators/mod.rs","byte_start":160834,"byte_end":160837,"line_start":313,"line_end":313,"column_start":1,"column_end":4}},{"value":"/ Iterator element type is `&'a A`.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/iterators/mod.rs","byte_start":160838,"byte_end":160875,"line_start":314,"line_end":314,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/iterators/mod.rs","byte_start":160876,"byte_end":160879,"line_start":315,"line_end":315,"column_start":1,"column_end":4}},{"value":"/ See [`.iter()`](../struct.ArrayBase.html#method.iter) for more information.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/iterators/mod.rs","byte_start":160880,"byte_end":160959,"line_start":316,"line_end":316,"column_start":1,"column_end":80}}]},{"kind":"Struct","id":{"krate":0,"index":1128},"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/iterators/mod.rs","byte_start":161391,"byte_end":161398,"line_start":332,"line_end":332,"column_start":12,"column_end":19},"name":"IterMut","qualname":"::iterators::IterMut","value":"IterMut {  }","parent":null,"children":[{"krate":0,"index":1132}],"decl_id":null,"docs":" An iterator over the elements of an array (mutable).","sig":null,"attributes":[{"value":"/ An iterator over the elements of an array (mutable).","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/iterators/mod.rs","byte_start":161185,"byte_end":161241,"line_start":327,"line_end":327,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/iterators/mod.rs","byte_start":161242,"byte_end":161245,"line_start":328,"line_end":328,"column_start":1,"column_end":4}},{"value":"/ Iterator element type is `&'a mut A`.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/iterators/mod.rs","byte_start":161246,"byte_end":161287,"line_start":329,"line_end":329,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/iterators/mod.rs","byte_start":161288,"byte_end":161291,"line_start":330,"line_end":330,"column_start":1,"column_end":4}},{"value":"/ See [`.iter_mut()`](../struct.ArrayBase.html#method.iter_mut) for more information.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/iterators/mod.rs","byte_start":161292,"byte_end":161379,"line_start":331,"line_end":331,"column_start":1,"column_end":88}}]},{"kind":"Struct","id":{"krate":0,"index":4151},"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/iterators/mod.rs","byte_start":162091,"byte_end":162102,"line_start":357,"line_end":357,"column_start":12,"column_end":23},"name":"IndexedIter","qualname":"::iterators::IndexedIter","value":"","parent":null,"children":[],"decl_id":null,"docs":" An iterator over the indexes and elements of an array.","sig":null,"attributes":[{"value":"/ An iterator over the indexes and elements of an array.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/iterators/mod.rs","byte_start":161904,"byte_end":161962,"line_start":353,"line_end":353,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/iterators/mod.rs","byte_start":161963,"byte_end":161966,"line_start":354,"line_end":354,"column_start":1,"column_end":4}},{"value":"/ See [`.indexed_iter()`](../struct.ArrayBase.html#method.indexed_iter) for more information.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/iterators/mod.rs","byte_start":161967,"byte_end":162062,"line_start":355,"line_end":355,"column_start":1,"column_end":96}}]},{"kind":"Struct","id":{"krate":0,"index":1144},"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/iterators/mod.rs","byte_start":162326,"byte_end":162340,"line_start":361,"line_end":361,"column_start":12,"column_end":26},"name":"IndexedIterMut","qualname":"::iterators::IndexedIterMut","value":"","parent":null,"children":[],"decl_id":null,"docs":" An iterator over the indexes and elements of an array (mutable).","sig":null,"attributes":[{"value":"/ An iterator over the indexes and elements of an array (mutable).","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/iterators/mod.rs","byte_start":162138,"byte_end":162206,"line_start":358,"line_end":358,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/iterators/mod.rs","byte_start":162207,"byte_end":162210,"line_start":359,"line_end":359,"column_start":1,"column_end":4}},{"value":"/ See [`.indexed_iter_mut()`](../struct.ArrayBase.html#method.indexed_iter_mut) for more information.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/iterators/mod.rs","byte_start":162211,"byte_end":162314,"line_start":360,"line_end":360,"column_start":1,"column_end":104}}]},{"kind":"Struct","id":{"krate":0,"index":1288},"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/iterators/mod.rs","byte_start":170172,"byte_end":170181,"line_start":683,"line_end":683,"column_start":12,"column_end":21},"name":"LanesIter","qualname":"::iterators::LanesIter","value":"LanesIter {  }","parent":null,"children":[{"krate":0,"index":1292},{"krate":0,"index":1293},{"krate":0,"index":1294},{"krate":0,"index":1295}],"decl_id":null,"docs":" An iterator that traverses over all axes but one, and yields a view for\n each lane along that axis.","sig":null,"attributes":[{"value":"/ An iterator that traverses over all axes but one, and yields a view for","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/iterators/mod.rs","byte_start":169968,"byte_end":170043,"line_start":679,"line_end":679,"column_start":1,"column_end":76}},{"value":"/ each lane along that axis.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/iterators/mod.rs","byte_start":170044,"byte_end":170074,"line_start":680,"line_end":680,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/iterators/mod.rs","byte_start":170075,"byte_end":170078,"line_start":681,"line_end":681,"column_start":1,"column_end":4}},{"value":"/ See [`.lanes()`](../struct.ArrayBase.html#method.lanes) for more information.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/iterators/mod.rs","byte_start":170079,"byte_end":170160,"line_start":682,"line_end":682,"column_start":1,"column_end":82}}]},{"kind":"Struct","id":{"krate":0,"index":1309},"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/iterators/mod.rs","byte_start":171399,"byte_end":171411,"line_start":735,"line_end":735,"column_start":12,"column_end":24},"name":"LanesIterMut","qualname":"::iterators::LanesIterMut","value":"LanesIterMut {  }","parent":null,"children":[{"krate":0,"index":1313},{"krate":0,"index":1314},{"krate":0,"index":1315},{"krate":0,"index":1316}],"decl_id":null,"docs":" An iterator that traverses over all dimensions but the innermost,\n and yields each inner row (mutable).","sig":null,"attributes":[{"value":"/ An iterator that traverses over all dimensions but the innermost,","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/iterators/mod.rs","byte_start":171179,"byte_end":171248,"line_start":730,"line_end":730,"column_start":1,"column_end":70}},{"value":"/ and yields each inner row (mutable).","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/iterators/mod.rs","byte_start":171249,"byte_end":171289,"line_start":731,"line_end":731,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/iterators/mod.rs","byte_start":171290,"byte_end":171293,"line_start":732,"line_end":732,"column_start":1,"column_end":4}},{"value":"/ See [`.lanes_mut()`](../struct.ArrayBase.html#method.lanes_mut)","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/iterators/mod.rs","byte_start":171294,"byte_end":171361,"line_start":733,"line_end":733,"column_start":1,"column_end":68}},{"value":"/ for more information.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/iterators/mod.rs","byte_start":171362,"byte_end":171387,"line_start":734,"line_end":734,"column_start":1,"column_end":26}}]},{"kind":"Struct","id":{"krate":0,"index":4184},"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/iterators/mod.rs","byte_start":176703,"byte_end":176711,"line_start":932,"line_end":932,"column_start":12,"column_end":20},"name":"AxisIter","qualname":"::iterators::AxisIter","value":"AxisIter {  }","parent":null,"children":[{"krate":0,"index":4188},{"krate":0,"index":4189}],"decl_id":null,"docs":" An iterator that traverses over an axis and\n and yields each subview.","sig":null,"attributes":[{"value":"/ An iterator that traverses over an axis and","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/iterators/mod.rs","byte_start":176083,"byte_end":176130,"line_start":917,"line_end":917,"column_start":1,"column_end":48}},{"value":"/ and yields each subview.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/iterators/mod.rs","byte_start":176131,"byte_end":176159,"line_start":918,"line_end":918,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/iterators/mod.rs","byte_start":176160,"byte_end":176163,"line_start":919,"line_end":919,"column_start":1,"column_end":4}},{"value":"/ The outermost dimension is `Axis(0)`, created with `.outer_iter()`,","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/iterators/mod.rs","byte_start":176164,"byte_end":176235,"line_start":920,"line_end":920,"column_start":1,"column_end":72}},{"value":"/ but you can traverse arbitrary dimension with `.axis_iter()`.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/iterators/mod.rs","byte_start":176236,"byte_end":176301,"line_start":921,"line_end":921,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/iterators/mod.rs","byte_start":176302,"byte_end":176305,"line_start":922,"line_end":922,"column_start":1,"column_end":4}},{"value":"/ For example, in a 3 × 5 × 5 array, with `axis` equal to `Axis(2)`,","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/iterators/mod.rs","byte_start":176306,"byte_end":176378,"line_start":923,"line_end":923,"column_start":1,"column_end":71}},{"value":"/ the iterator element is a 3 × 5 subview (and there are 5 in total).","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/iterators/mod.rs","byte_start":176379,"byte_end":176451,"line_start":924,"line_end":924,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/iterators/mod.rs","byte_start":176452,"byte_end":176455,"line_start":925,"line_end":925,"column_start":1,"column_end":4}},{"value":"/ Iterator element type is `ArrayView<'a, A, D>`.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/iterators/mod.rs","byte_start":176456,"byte_end":176507,"line_start":926,"line_end":926,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/iterators/mod.rs","byte_start":176508,"byte_end":176511,"line_start":927,"line_end":927,"column_start":1,"column_end":4}},{"value":"/ See [`.outer_iter()`](../struct.ArrayBase.html#method.outer_iter)","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/iterators/mod.rs","byte_start":176512,"byte_end":176581,"line_start":928,"line_end":928,"column_start":1,"column_end":70}},{"value":"/ or [`.axis_iter()`](../struct.ArrayBase.html#method.axis_iter)","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/iterators/mod.rs","byte_start":176582,"byte_end":176648,"line_start":929,"line_end":929,"column_start":1,"column_end":67}},{"value":"/ for more information.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/iterators/mod.rs","byte_start":176649,"byte_end":176674,"line_start":930,"line_end":930,"column_start":1,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":1362},"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/iterators/mod.rs","byte_start":177576,"byte_end":177584,"line_start":966,"line_end":966,"column_start":12,"column_end":20},"name":"split_at","qualname":"<AxisIter>::split_at","value":"pub fn split_at(Self, usize) -> (Self, Self)","parent":null,"children":[],"decl_id":null,"docs":" Splits the iterator at `index`, yielding two disjoint iterators.","sig":null,"attributes":[{"value":"/ Splits the iterator at `index`, yielding two disjoint iterators.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/iterators/mod.rs","byte_start":177261,"byte_end":177329,"line_start":959,"line_end":959,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/iterators/mod.rs","byte_start":177334,"byte_end":177337,"line_start":960,"line_end":960,"column_start":5,"column_end":8}},{"value":"/ `index` is relative to the current state of the iterator (which is not","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/iterators/mod.rs","byte_start":177342,"byte_end":177416,"line_start":961,"line_end":961,"column_start":5,"column_end":79}},{"value":"/ necessarily the start of the axis).","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/iterators/mod.rs","byte_start":177421,"byte_end":177460,"line_start":962,"line_end":962,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/iterators/mod.rs","byte_start":177465,"byte_end":177468,"line_start":963,"line_end":963,"column_start":5,"column_end":8}},{"value":"/ **Panics** if `index` is strictly greater than the iterator's remaining","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/iterators/mod.rs","byte_start":177473,"byte_end":177548,"line_start":964,"line_end":964,"column_start":5,"column_end":80}},{"value":"/ length.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/iterators/mod.rs","byte_start":177553,"byte_end":177564,"line_start":965,"line_end":965,"column_start":5,"column_end":16}}]},{"kind":"Struct","id":{"krate":0,"index":1382},"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/iterators/mod.rs","byte_start":179215,"byte_end":179226,"line_start":1028,"line_end":1028,"column_start":12,"column_end":23},"name":"AxisIterMut","qualname":"::iterators::AxisIterMut","value":"AxisIterMut {  }","parent":null,"children":[{"krate":0,"index":1386},{"krate":0,"index":1387}],"decl_id":null,"docs":" An iterator that traverses over an axis and\n and yields each subview (mutable)","sig":null,"attributes":[{"value":"/ An iterator that traverses over an axis and","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/iterators/mod.rs","byte_start":178584,"byte_end":178631,"line_start":1014,"line_end":1014,"column_start":1,"column_end":48}},{"value":"/ and yields each subview (mutable)","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/iterators/mod.rs","byte_start":178632,"byte_end":178669,"line_start":1015,"line_end":1015,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/iterators/mod.rs","byte_start":178670,"byte_end":178673,"line_start":1016,"line_end":1016,"column_start":1,"column_end":4}},{"value":"/ The outermost dimension is `Axis(0)`, created with `.outer_iter()`,","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/iterators/mod.rs","byte_start":178674,"byte_end":178745,"line_start":1017,"line_end":1017,"column_start":1,"column_end":72}},{"value":"/ but you can traverse arbitrary dimension with `.axis_iter()`.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/iterators/mod.rs","byte_start":178746,"byte_end":178811,"line_start":1018,"line_end":1018,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/iterators/mod.rs","byte_start":178812,"byte_end":178815,"line_start":1019,"line_end":1019,"column_start":1,"column_end":4}},{"value":"/ For example, in a 3 × 5 × 5 array, with `axis` equal to `Axis(2)`,","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/iterators/mod.rs","byte_start":178816,"byte_end":178888,"line_start":1020,"line_end":1020,"column_start":1,"column_end":71}},{"value":"/ the iterator element is a 3 × 5 subview (and there are 5 in total).","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/iterators/mod.rs","byte_start":178889,"byte_end":178961,"line_start":1021,"line_end":1021,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/iterators/mod.rs","byte_start":178962,"byte_end":178965,"line_start":1022,"line_end":1022,"column_start":1,"column_end":4}},{"value":"/ Iterator element type is `ArrayViewMut<'a, A, D>`.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/iterators/mod.rs","byte_start":178966,"byte_end":179020,"line_start":1023,"line_end":1023,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/iterators/mod.rs","byte_start":179021,"byte_end":179024,"line_start":1024,"line_end":1024,"column_start":1,"column_end":4}},{"value":"/ See [`.outer_iter_mut()`](../struct.ArrayBase.html#method.outer_iter_mut)","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/iterators/mod.rs","byte_start":179025,"byte_end":179102,"line_start":1025,"line_end":1025,"column_start":1,"column_end":78}},{"value":"/ or [`.axis_iter_mut()`](../struct.ArrayBase.html#method.axis_iter_mut)","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/iterators/mod.rs","byte_start":179103,"byte_end":179177,"line_start":1026,"line_end":1026,"column_start":1,"column_end":75}},{"value":"/ for more information.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/iterators/mod.rs","byte_start":179178,"byte_end":179203,"line_start":1027,"line_end":1027,"column_start":1,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":1394},"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/iterators/mod.rs","byte_start":179974,"byte_end":179982,"line_start":1052,"line_end":1052,"column_start":12,"column_end":20},"name":"split_at","qualname":"<AxisIterMut>::split_at","value":"pub fn split_at(Self, usize) -> (Self, Self)","parent":null,"children":[],"decl_id":null,"docs":" Splits the iterator at `index`, yielding two disjoint iterators.","sig":null,"attributes":[{"value":"/ Splits the iterator at `index`, yielding two disjoint iterators.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/iterators/mod.rs","byte_start":179659,"byte_end":179727,"line_start":1045,"line_end":1045,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/iterators/mod.rs","byte_start":179732,"byte_end":179735,"line_start":1046,"line_end":1046,"column_start":5,"column_end":8}},{"value":"/ `index` is relative to the current state of the iterator (which is not","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/iterators/mod.rs","byte_start":179740,"byte_end":179814,"line_start":1047,"line_end":1047,"column_start":5,"column_end":79}},{"value":"/ necessarily the start of the axis).","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/iterators/mod.rs","byte_start":179819,"byte_end":179858,"line_start":1048,"line_end":1048,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/iterators/mod.rs","byte_start":179863,"byte_end":179866,"line_start":1049,"line_end":1049,"column_start":5,"column_end":8}},{"value":"/ **Panics** if `index` is strictly greater than the iterator's remaining","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/iterators/mod.rs","byte_start":179871,"byte_end":179946,"line_start":1050,"line_end":1050,"column_start":5,"column_end":80}},{"value":"/ length.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/iterators/mod.rs","byte_start":179951,"byte_end":179962,"line_start":1051,"line_end":1051,"column_start":5,"column_end":16}}]},{"kind":"Struct","id":{"krate":0,"index":1446},"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/iterators/mod.rs","byte_start":184740,"byte_end":184754,"line_start":1224,"line_end":1224,"column_start":12,"column_end":26},"name":"AxisChunksIter","qualname":"::iterators::AxisChunksIter","value":"AxisChunksIter {  }","parent":null,"children":[{"krate":0,"index":1450},{"krate":0,"index":1451},{"krate":0,"index":1452},{"krate":0,"index":1453}],"decl_id":null,"docs":" An iterator that traverses over the specified axis\n and yields views of the specified size on this axis.","sig":null,"attributes":[{"value":"/ An iterator that traverses over the specified axis","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/iterators/mod.rs","byte_start":184274,"byte_end":184328,"line_start":1214,"line_end":1214,"column_start":1,"column_end":55}},{"value":"/ and yields views of the specified size on this axis.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/iterators/mod.rs","byte_start":184329,"byte_end":184385,"line_start":1215,"line_end":1215,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/iterators/mod.rs","byte_start":184386,"byte_end":184389,"line_start":1216,"line_end":1216,"column_start":1,"column_end":4}},{"value":"/ For example, in a 2 × 8 × 3 array, if the axis of iteration","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/iterators/mod.rs","byte_start":184390,"byte_end":184455,"line_start":1217,"line_end":1217,"column_start":1,"column_end":64}},{"value":"/ is 1 and the chunk size is 2, the yielded elements","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/iterators/mod.rs","byte_start":184456,"byte_end":184510,"line_start":1218,"line_end":1218,"column_start":1,"column_end":55}},{"value":"/ are 2 × 2 × 3 views (and there are 4 in total).","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/iterators/mod.rs","byte_start":184511,"byte_end":184564,"line_start":1219,"line_end":1219,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/iterators/mod.rs","byte_start":184565,"byte_end":184568,"line_start":1220,"line_end":1220,"column_start":1,"column_end":4}},{"value":"/ Iterator element type is `ArrayView<'a, A, D>`.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/iterators/mod.rs","byte_start":184569,"byte_end":184620,"line_start":1221,"line_end":1221,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/iterators/mod.rs","byte_start":184621,"byte_end":184624,"line_start":1222,"line_end":1222,"column_start":1,"column_end":4}},{"value":"/ See [`.axis_chunks_iter()`](../struct.ArrayBase.html#method.axis_chunks_iter) for more information.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/iterators/mod.rs","byte_start":184625,"byte_end":184728,"line_start":1223,"line_end":1223,"column_start":1,"column_end":104}}]},{"kind":"Struct","id":{"krate":0,"index":1463},"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/iterators/mod.rs","byte_start":190578,"byte_end":190595,"line_start":1404,"line_end":1404,"column_start":12,"column_end":29},"name":"AxisChunksIterMut","qualname":"::iterators::AxisChunksIterMut","value":"AxisChunksIterMut {  }","parent":null,"children":[{"krate":0,"index":1467},{"krate":0,"index":1468},{"krate":0,"index":1469},{"krate":0,"index":1470}],"decl_id":null,"docs":" An iterator that traverses over the specified axis\n and yields mutable views of the specified size on this axis.","sig":null,"attributes":[{"value":"/ An iterator that traverses over the specified axis","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/iterators/mod.rs","byte_start":190089,"byte_end":190143,"line_start":1393,"line_end":1393,"column_start":1,"column_end":55}},{"value":"/ and yields mutable views of the specified size on this axis.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/iterators/mod.rs","byte_start":190144,"byte_end":190208,"line_start":1394,"line_end":1394,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/iterators/mod.rs","byte_start":190209,"byte_end":190212,"line_start":1395,"line_end":1395,"column_start":1,"column_end":4}},{"value":"/ For example, in a 2 × 8 × 3 array, if the axis of iteration","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/iterators/mod.rs","byte_start":190213,"byte_end":190278,"line_start":1396,"line_end":1396,"column_start":1,"column_end":64}},{"value":"/ is 1 and the chunk size is 2, the yielded elements","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/iterators/mod.rs","byte_start":190279,"byte_end":190333,"line_start":1397,"line_end":1397,"column_start":1,"column_end":55}},{"value":"/ are 2 × 2 × 3 views (and there are 4 in total).","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/iterators/mod.rs","byte_start":190334,"byte_end":190387,"line_start":1398,"line_end":1398,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/iterators/mod.rs","byte_start":190388,"byte_end":190391,"line_start":1399,"line_end":1399,"column_start":1,"column_end":4}},{"value":"/ Iterator element type is `ArrayViewMut<'a, A, D>`.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/iterators/mod.rs","byte_start":190392,"byte_end":190446,"line_start":1400,"line_end":1400,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/iterators/mod.rs","byte_start":190447,"byte_end":190450,"line_start":1401,"line_end":1401,"column_start":1,"column_end":4}},{"value":"/ See [`.axis_chunks_iter_mut()`](../struct.ArrayBase.html#method.axis_chunks_iter_mut)","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/iterators/mod.rs","byte_start":190451,"byte_end":190540,"line_start":1402,"line_end":1402,"column_start":1,"column_end":90}},{"value":"/ for more information.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/iterators/mod.rs","byte_start":190541,"byte_end":190566,"line_start":1403,"line_end":1403,"column_start":1,"column_end":26}}]},{"kind":"Struct","id":{"krate":0,"index":4351},"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/layout/mod.rs","byte_start":210800,"byte_end":210806,"line_start":9,"line_end":9,"column_start":12,"column_end":18},"name":"Layout","qualname":"::layout::Layout","value":"","parent":null,"children":[],"decl_id":null,"docs":" Memory layout description\n","sig":null,"attributes":[{"value":"/ Memory layout description","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/layout/mod.rs","byte_start":210736,"byte_end":210765,"line_start":7,"line_end":7,"column_start":1,"column_end":30}}]},{"kind":"Trait","id":{"krate":0,"index":1563},"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/linalg_traits.rs","byte_start":218031,"byte_end":218043,"line_start":26,"line_end":26,"column_start":11,"column_end":23},"name":"LinalgScalar","qualname":"::linalg_traits::LinalgScalar","value":"LinalgScalar: 'static + Copy + Zero + One + Add<Output = Self> + Sub<Output = Self> +\nMul<Output = Self> + Div<Output = Self>","parent":null,"children":[],"decl_id":null,"docs":" Elements that support linear algebra operations.","sig":null,"attributes":[{"value":"/ Elements that support linear algebra operations.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/linalg_traits.rs","byte_start":217818,"byte_end":217870,"line_start":22,"line_end":22,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/linalg_traits.rs","byte_start":217871,"byte_end":217874,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ `'static` for type-based specialization, `Copy` so that they don't need move","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/linalg_traits.rs","byte_start":217875,"byte_end":217955,"line_start":24,"line_end":24,"column_start":1,"column_end":81}},{"value":"/ semantics or destructors, and the rest are numerical traits.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/linalg_traits.rs","byte_start":217956,"byte_end":218020,"line_start":25,"line_end":25,"column_start":1,"column_end":65}}]},{"kind":"Trait","id":{"krate":0,"index":1566},"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/linalg_traits.rs","byte_start":218802,"byte_end":218809,"line_start":59,"line_end":59,"column_start":11,"column_end":18},"name":"NdFloat","qualname":"::linalg_traits::NdFloat","value":"NdFloat: Float + AddAssign + SubAssign + MulAssign + DivAssign + RemAssign +\nfmt::Display + fmt::Debug + fmt::LowerExp + fmt::UpperExp + ScalarOperand +\nLinalgScalar + Send + Sync","parent":null,"children":[],"decl_id":null,"docs":" Floating-point element types `f32` and `f64`.","sig":null,"attributes":[{"value":"/ Floating-point element types `f32` and `f64`.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/linalg_traits.rs","byte_start":218395,"byte_end":218444,"line_start":50,"line_end":50,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/linalg_traits.rs","byte_start":218445,"byte_end":218448,"line_start":51,"line_end":51,"column_start":1,"column_end":4}},{"value":"/ Trait `NdFloat` is only implemented for `f32` and `f64` but encompasses as","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/linalg_traits.rs","byte_start":218449,"byte_end":218527,"line_start":52,"line_end":52,"column_start":1,"column_end":79}},{"value":"/ much float-relevant ndarray functionality as possible, including the traits","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/linalg_traits.rs","byte_start":218528,"byte_end":218607,"line_start":53,"line_end":53,"column_start":1,"column_end":80}},{"value":"/ needed for linear algebra and for *right hand side* scalar","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/linalg_traits.rs","byte_start":218608,"byte_end":218670,"line_start":54,"line_end":54,"column_start":1,"column_end":63}},{"value":"/ operations (`ScalarOperand`).","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/linalg_traits.rs","byte_start":218671,"byte_end":218704,"line_start":55,"line_end":55,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/linalg_traits.rs","byte_start":218705,"byte_end":218708,"line_start":56,"line_end":56,"column_start":1,"column_end":4}},{"value":"/ This trait can only be implemented by `f32` and `f64`.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/linalg_traits.rs","byte_start":218709,"byte_end":218767,"line_start":57,"line_end":57,"column_start":1,"column_end":59}},{"value":"cfg(feature = \"std\")","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/linalg_traits.rs","byte_start":218768,"byte_end":218791,"line_start":58,"line_end":58,"column_start":1,"column_end":24}}]},{"kind":"Struct","id":{"krate":0,"index":4357},"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/math_cell.rs","byte_start":227034,"byte_end":227042,"line_start":15,"line_end":15,"column_start":12,"column_end":20},"name":"MathCell","qualname":"::math_cell::MathCell","value":"","parent":null,"children":[],"decl_id":null,"docs":" A transparent wrapper of [`Cell<T>`](std::cell::Cell) which is identical in every way, except\n it will implement arithmetic operators as well.","sig":null,"attributes":[{"value":"/ A transparent wrapper of [`Cell<T>`](std::cell::Cell) which is identical in every way, except","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/math_cell.rs","byte_start":226657,"byte_end":226754,"line_start":8,"line_end":8,"column_start":1,"column_end":98}},{"value":"/ it will implement arithmetic operators as well.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/math_cell.rs","byte_start":226755,"byte_end":226806,"line_start":9,"line_end":9,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/math_cell.rs","byte_start":226807,"byte_end":226810,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ The purpose of `MathCell` is to be used from [.cell_view()](crate::ArrayBase::cell_view).","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/math_cell.rs","byte_start":226811,"byte_end":226904,"line_start":11,"line_end":11,"column_start":1,"column_end":94}},{"value":"/ The `MathCell` derefs to `Cell`, so all the cell's methods are available.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/math_cell.rs","byte_start":226905,"byte_end":226982,"line_start":12,"line_end":12,"column_start":1,"column_end":78}},{"value":"repr(transparent)","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/math_cell.rs","byte_start":226983,"byte_end":227003,"line_start":13,"line_end":13,"column_start":1,"column_end":21}}]},{"kind":"Method","id":{"krate":0,"index":1622},"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/math_cell.rs","byte_start":227165,"byte_end":227168,"line_start":20,"line_end":20,"column_start":18,"column_end":21},"name":"new","qualname":"<MathCell<T>>::new","value":"pub const fn new(T) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new cell with the given value\n","sig":null,"attributes":[{"value":"/ Create a new cell with the given value","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/math_cell.rs","byte_start":227083,"byte_end":227125,"line_start":18,"line_end":18,"column_start":5,"column_end":47}},{"value":"inline(always)","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/math_cell.rs","byte_start":227130,"byte_end":227147,"line_start":19,"line_end":19,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":1623},"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/math_cell.rs","byte_start":227261,"byte_end":227271,"line_start":23,"line_end":23,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<MathCell<T>>::into_inner","value":"pub fn into_inner(Self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Return the inner value\n","sig":null,"attributes":[{"value":"/ Return the inner value","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/math_cell.rs","byte_start":227223,"byte_end":227249,"line_start":22,"line_end":22,"column_start":5,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":1624},"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/math_cell.rs","byte_start":227361,"byte_end":227365,"line_start":26,"line_end":26,"column_start":12,"column_end":16},"name":"swap","qualname":"<MathCell<T>>::swap","value":"pub fn swap(&Self, &Self)","parent":null,"children":[],"decl_id":null,"docs":" Swap value with another cell\n","sig":null,"attributes":[{"value":"/ Swap value with another cell","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/math_cell.rs","byte_start":227317,"byte_end":227349,"line_start":25,"line_end":25,"column_start":5,"column_end":37}}]},{"kind":"Struct","id":{"krate":0,"index":4364},"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/shape_builder.rs","byte_start":235776,"byte_end":235781,"line_start":8,"line_end":8,"column_start":12,"column_end":17},"name":"Shape","qualname":"::shape_builder::Shape","value":"Shape {  }","parent":null,"children":[{"krate":0,"index":4366},{"krate":0,"index":4367}],"decl_id":null,"docs":" A contiguous array shape of n dimensions.","sig":null,"attributes":[{"value":"/ A contiguous array shape of n dimensions.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/shape_builder.rs","byte_start":235610,"byte_end":235655,"line_start":4,"line_end":4,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/shape_builder.rs","byte_start":235656,"byte_end":235659,"line_start":5,"line_end":5,"column_start":1,"column_end":4}},{"value":"/ Either c- or f- memory ordered (*c* a.k.a *row major* is the default).","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/shape_builder.rs","byte_start":235660,"byte_end":235734,"line_start":6,"line_end":6,"column_start":1,"column_end":75}}]},{"kind":"Struct","id":{"krate":0,"index":4382},"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/shape_builder.rs","byte_start":236216,"byte_end":236227,"line_start":27,"line_end":27,"column_start":12,"column_end":23},"name":"StrideShape","qualname":"::shape_builder::StrideShape","value":"StrideShape {  }","parent":null,"children":[{"krate":0,"index":4384},{"krate":0,"index":4385}],"decl_id":null,"docs":" An array shape of n dimensions in c-order, f-order or custom strides.\n","sig":null,"attributes":[{"value":"/ An array shape of n dimensions in c-order, f-order or custom strides.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/shape_builder.rs","byte_start":236101,"byte_end":236174,"line_start":25,"line_end":25,"column_start":1,"column_end":74}}]},{"kind":"Trait","id":{"krate":0,"index":1690},"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/shape_builder.rs","byte_start":237412,"byte_end":237424,"line_start":70,"line_end":70,"column_start":11,"column_end":23},"name":"ShapeBuilder","qualname":"::shape_builder::ShapeBuilder","value":"ShapeBuilder","parent":null,"children":[{"krate":0,"index":1691},{"krate":0,"index":1692},{"krate":0,"index":1693},{"krate":0,"index":1694},{"krate":0,"index":1695},{"krate":0,"index":1696}],"decl_id":null,"docs":" A trait for `Shape` and `D where D: Dimension` that allows\n customizing the memory layout (strides) of an array shape.","sig":null,"attributes":[{"value":"/ A trait for `Shape` and `D where D: Dimension` that allows","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/shape_builder.rs","byte_start":237175,"byte_end":237237,"line_start":65,"line_end":65,"column_start":1,"column_end":63}},{"value":"/ customizing the memory layout (strides) of an array shape.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/shape_builder.rs","byte_start":237238,"byte_end":237300,"line_start":66,"line_end":66,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/shape_builder.rs","byte_start":237301,"byte_end":237304,"line_start":67,"line_end":67,"column_start":1,"column_end":4}},{"value":"/ This trait is used together with array constructor methods like","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/shape_builder.rs","byte_start":237305,"byte_end":237372,"line_start":68,"line_end":68,"column_start":1,"column_end":68}},{"value":"/ `Array::from_shape_vec`.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/shape_builder.rs","byte_start":237373,"byte_end":237401,"line_start":69,"line_end":69,"column_start":1,"column_end":29}}]},{"kind":"Type","id":{"krate":0,"index":1691},"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/shape_builder.rs","byte_start":237436,"byte_end":237439,"line_start":71,"line_end":71,"column_start":10,"column_end":13},"name":"Dim","qualname":"::shape_builder::ShapeBuilder::Dim","value":"type Dim: Dimension;","parent":{"krate":0,"index":1690},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":1692},"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/shape_builder.rs","byte_start":237461,"byte_end":237468,"line_start":72,"line_end":72,"column_start":10,"column_end":17},"name":"Strides","qualname":"::shape_builder::ShapeBuilder::Strides","value":"type Strides;","parent":{"krate":0,"index":1690},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1693},"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/shape_builder.rs","byte_start":237478,"byte_end":237488,"line_start":74,"line_end":74,"column_start":8,"column_end":18},"name":"into_shape","qualname":"::shape_builder::ShapeBuilder::into_shape","value":"pub fn into_shape(Self) -> Shape<Self::Dim>","parent":{"krate":0,"index":1690},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1694},"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/shape_builder.rs","byte_start":237523,"byte_end":237524,"line_start":75,"line_end":75,"column_start":8,"column_end":9},"name":"f","qualname":"::shape_builder::ShapeBuilder::f","value":"pub fn f(Self) -> Shape<Self::Dim>","parent":{"krate":0,"index":1690},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1695},"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/shape_builder.rs","byte_start":237559,"byte_end":237564,"line_start":76,"line_end":76,"column_start":8,"column_end":13},"name":"set_f","qualname":"::shape_builder::ShapeBuilder::set_f","value":"pub fn set_f(Self, bool) -> Shape<Self::Dim>","parent":{"krate":0,"index":1690},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1696},"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/shape_builder.rs","byte_start":237611,"byte_end":237618,"line_start":77,"line_end":77,"column_start":8,"column_end":15},"name":"strides","qualname":"::shape_builder::ShapeBuilder::strides","value":"pub fn strides(Self, Self::Strides) -> StrideShape<Self::Dim>","parent":{"krate":0,"index":1690},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1722},"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/shape_builder.rs","byte_start":239510,"byte_end":239514,"line_start":167,"line_end":167,"column_start":12,"column_end":16},"name":"size","qualname":"<Shape<D>>::size","value":"pub fn size(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Return the size of the shape in number of elements\n","sig":null,"attributes":[{"value":"/ Return the size of the shape in number of elements","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/shape_builder.rs","byte_start":239444,"byte_end":239498,"line_start":166,"line_end":166,"column_start":5,"column_end":59}}]},{"kind":"Struct","id":{"krate":0,"index":4411},"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/slice.rs","byte_start":241152,"byte_end":241157,"line_start":38,"line_end":38,"column_start":12,"column_end":17},"name":"Slice","qualname":"::slice::Slice","value":"Slice { start, end, step }","parent":null,"children":[{"krate":0,"index":4412},{"krate":0,"index":4413},{"krate":0,"index":4414}],"decl_id":null,"docs":" A slice (range with step size).","sig":null,"attributes":[{"value":"/ A slice (range with step size).","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/slice.rs","byte_start":240281,"byte_end":240316,"line_start":17,"line_end":17,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/slice.rs","byte_start":240317,"byte_end":240320,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ `end` is an exclusive index. Negative `begin` or `end` indexes are counted","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/slice.rs","byte_start":240321,"byte_end":240399,"line_start":19,"line_end":19,"column_start":1,"column_end":79}},{"value":"/ from the back of the axis. If `end` is `None`, the slice extends to the end","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/slice.rs","byte_start":240400,"byte_end":240479,"line_start":20,"line_end":20,"column_start":1,"column_end":80}},{"value":"/ of the axis.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/slice.rs","byte_start":240480,"byte_end":240496,"line_start":21,"line_end":21,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/slice.rs","byte_start":240497,"byte_end":240500,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ See also the [`s![]`](macro.s.html) macro.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/slice.rs","byte_start":240501,"byte_end":240547,"line_start":23,"line_end":23,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/slice.rs","byte_start":240548,"byte_end":240551,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ ## Examples","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/slice.rs","byte_start":240552,"byte_end":240567,"line_start":25,"line_end":25,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/slice.rs","byte_start":240568,"byte_end":240571,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ `Slice::new(0, None, 1)` is the full range of an axis. It can also be","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/slice.rs","byte_start":240572,"byte_end":240645,"line_start":27,"line_end":27,"column_start":1,"column_end":74}},{"value":"/ created with `Slice::from(..)`. The Python equivalent is `[:]`.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/slice.rs","byte_start":240646,"byte_end":240713,"line_start":28,"line_end":28,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/slice.rs","byte_start":240714,"byte_end":240717,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ `Slice::new(a, b, 2)` is every second element from `a` until `b`. It can","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/slice.rs","byte_start":240718,"byte_end":240794,"line_start":30,"line_end":30,"column_start":1,"column_end":77}},{"value":"/ also be created with `Slice::from(a..b).step_by(2)`. The Python equivalent","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/slice.rs","byte_start":240795,"byte_end":240873,"line_start":31,"line_end":31,"column_start":1,"column_end":79}},{"value":"/ is `[a:b:2]`.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/slice.rs","byte_start":240874,"byte_end":240891,"line_start":32,"line_end":32,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/slice.rs","byte_start":240892,"byte_end":240895,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"/ `Slice::new(a, None, -1)` is every element, from `a` until the end, in","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/slice.rs","byte_start":240896,"byte_end":240970,"line_start":34,"line_end":34,"column_start":1,"column_end":75}},{"value":"/ reverse order. It can also be created with `Slice::from(a..).step_by(-1)`.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/slice.rs","byte_start":240971,"byte_end":241049,"line_start":35,"line_end":35,"column_start":1,"column_end":79}},{"value":"/ The Python equivalent is `[a::-1]`.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/slice.rs","byte_start":241050,"byte_end":241089,"line_start":36,"line_end":36,"column_start":1,"column_end":40}}]},{"kind":"Field","id":{"krate":0,"index":4412},"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/slice.rs","byte_start":241168,"byte_end":241173,"line_start":39,"line_end":39,"column_start":9,"column_end":14},"name":"start","qualname":"::slice::Slice::start","value":"isize","parent":{"krate":0,"index":4411},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":4413},"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/slice.rs","byte_start":241190,"byte_end":241193,"line_start":40,"line_end":40,"column_start":9,"column_end":12},"name":"end","qualname":"::slice::Slice::end","value":"std::option::Option<isize>","parent":{"krate":0,"index":4411},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":4414},"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/slice.rs","byte_start":241218,"byte_end":241222,"line_start":41,"line_end":41,"column_start":9,"column_end":13},"name":"step","qualname":"::slice::Slice::step","value":"isize","parent":{"krate":0,"index":4411},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1753},"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/slice.rs","byte_start":241558,"byte_end":241561,"line_start":52,"line_end":52,"column_start":12,"column_end":15},"name":"new","qualname":"<Slice>::new","value":"pub fn new(isize, Option<isize>, isize) -> Slice","parent":null,"children":[],"decl_id":null,"docs":" Create a new `Slice` with the given extents.","sig":null,"attributes":[{"value":"/ Create a new `Slice` with the given extents.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/slice.rs","byte_start":241251,"byte_end":241299,"line_start":45,"line_end":45,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/slice.rs","byte_start":241304,"byte_end":241307,"line_start":46,"line_end":46,"column_start":5,"column_end":8}},{"value":"/ See also the `From` impls, converting from ranges; for example","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/slice.rs","byte_start":241312,"byte_end":241378,"line_start":47,"line_end":47,"column_start":5,"column_end":71}},{"value":"/ `Slice::from(i..)` or `Slice::from(j..k)`.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/slice.rs","byte_start":241383,"byte_end":241429,"line_start":48,"line_end":48,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/slice.rs","byte_start":241434,"byte_end":241437,"line_start":49,"line_end":49,"column_start":5,"column_end":8}},{"value":"/ `step` must be nonzero.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/slice.rs","byte_start":241442,"byte_end":241469,"line_start":50,"line_end":50,"column_start":5,"column_end":32}},{"value":"/ (This method checks with a debug assertion that `step` is not zero.)","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/slice.rs","byte_start":241474,"byte_end":241546,"line_start":51,"line_end":51,"column_start":5,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":1754},"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/slice.rs","byte_start":241979,"byte_end":241986,"line_start":63,"line_end":63,"column_start":12,"column_end":19},"name":"step_by","qualname":"<Slice>::step_by","value":"pub fn step_by(Self, isize) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new `Slice` with the given step size (multiplied with the\n previous step size).","sig":null,"attributes":[{"value":"/ Create a new `Slice` with the given step size (multiplied with the","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/slice.rs","byte_start":241737,"byte_end":241807,"line_start":57,"line_end":57,"column_start":5,"column_end":75}},{"value":"/ previous step size).","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/slice.rs","byte_start":241812,"byte_end":241836,"line_start":58,"line_end":58,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/slice.rs","byte_start":241841,"byte_end":241844,"line_start":59,"line_end":59,"column_start":5,"column_end":8}},{"value":"/ `step` must be nonzero.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/slice.rs","byte_start":241849,"byte_end":241876,"line_start":60,"line_end":60,"column_start":5,"column_end":32}},{"value":"/ (This method checks with a debug assertion that `step` is not zero.)","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/slice.rs","byte_start":241881,"byte_end":241953,"line_start":61,"line_end":61,"column_start":5,"column_end":77}},{"value":"inline","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/slice.rs","byte_start":241958,"byte_end":241967,"line_start":62,"line_end":62,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":4430},"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/slice.rs","byte_start":242332,"byte_end":242339,"line_start":76,"line_end":76,"column_start":12,"column_end":19},"name":"NewAxis","qualname":"::slice::NewAxis","value":"","parent":null,"children":[],"decl_id":null,"docs":" Token to represent a new axis in a slice description.","sig":null,"attributes":[{"value":"/ Token to represent a new axis in a slice description.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/slice.rs","byte_start":242181,"byte_end":242238,"line_start":72,"line_end":72,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/slice.rs","byte_start":242239,"byte_end":242242,"line_start":73,"line_end":73,"column_start":1,"column_end":4}},{"value":"/ See also the [`s![]`](macro.s!.html) macro.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/slice.rs","byte_start":242243,"byte_end":242290,"line_start":74,"line_end":74,"column_start":1,"column_end":48}}]},{"kind":"StructVariant","id":{"krate":0,"index":4438},"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/slice.rs","byte_start":244015,"byte_end":244020,"line_start":111,"line_end":111,"column_start":5,"column_end":10},"name":"Slice","qualname":"::slice::SliceInfoElem::Slice","value":"SliceInfoElem::Slice { start, end, step }","parent":{"krate":0,"index":4437},"children":[],"decl_id":null,"docs":" A range with step size. `end` is an exclusive index. Negative `begin`\n or `end` indexes are counted from the back of the axis. If `end` is\n `None`, the slice extends to the end of the axis.\n","sig":null,"attributes":[{"value":"/ A range with step size. `end` is an exclusive index. Negative `begin`","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/slice.rs","byte_start":243803,"byte_end":243876,"line_start":108,"line_end":108,"column_start":5,"column_end":78}},{"value":"/ or `end` indexes are counted from the back of the axis. If `end` is","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/slice.rs","byte_start":243881,"byte_end":243952,"line_start":109,"line_end":109,"column_start":5,"column_end":76}},{"value":"/ `None`, the slice extends to the end of the axis.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/slice.rs","byte_start":243957,"byte_end":244010,"line_start":110,"line_end":110,"column_start":5,"column_end":58}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4442},"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/slice.rs","byte_start":244129,"byte_end":244134,"line_start":117,"line_end":117,"column_start":5,"column_end":10},"name":"Index","qualname":"::slice::SliceInfoElem::Index","value":"SliceInfoElem::Index(isize)","parent":{"krate":0,"index":4437},"children":[],"decl_id":null,"docs":" A single index.\n","sig":null,"attributes":[{"value":"/ A single index.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/slice.rs","byte_start":244105,"byte_end":244124,"line_start":116,"line_end":116,"column_start":5,"column_end":24}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4445},"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/slice.rs","byte_start":244179,"byte_end":244186,"line_start":119,"line_end":119,"column_start":5,"column_end":12},"name":"NewAxis","qualname":"::slice::SliceInfoElem::NewAxis","value":"SliceInfoElem::NewAxis","parent":{"krate":0,"index":4437},"children":[],"decl_id":null,"docs":" A new axis of length 1.\n","sig":null,"attributes":[{"value":"/ A new axis of length 1.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/slice.rs","byte_start":244147,"byte_end":244174,"line_start":118,"line_end":118,"column_start":5,"column_end":32}}]},{"kind":"Enum","id":{"krate":0,"index":4437},"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/slice.rs","byte_start":243783,"byte_end":243796,"line_start":107,"line_end":107,"column_start":10,"column_end":23},"name":"SliceInfoElem","qualname":"::slice::SliceInfoElem","value":"pub enum SliceInfoElem {\n\n    /// A range with step size. `end` is an exclusive index. Negative `begin`\n    /// or `end` indexes are counted from the back of the axis. If `end` is\n    /// `None`, the slice extends to the end of the axis.\n    Slice {\n        start: isize,\n        end: Option<isize>,\n        step: isize,\n    },\n\n    /// A single index.\n    Index(isize),\n\n    /// A new axis of length 1.\n    NewAxis,\n}","parent":null,"children":[{"krate":0,"index":4438},{"krate":0,"index":4442},{"krate":0,"index":4445}],"decl_id":null,"docs":" A slice (range with step), an index, or a new axis token.","sig":null,"attributes":[{"value":"/ A slice (range with step), an index, or a new axis token.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/slice.rs","byte_start":242342,"byte_end":242403,"line_start":78,"line_end":78,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/slice.rs","byte_start":242404,"byte_end":242407,"line_start":79,"line_end":79,"column_start":1,"column_end":4}},{"value":"/ See also the [`s![]`](macro.s!.html) macro for a convenient way to create a","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/slice.rs","byte_start":242408,"byte_end":242487,"line_start":80,"line_end":80,"column_start":1,"column_end":80}},{"value":"/ `SliceInfo<[SliceInfoElem; n], Din, Dout>`.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/slice.rs","byte_start":242488,"byte_end":242535,"line_start":81,"line_end":81,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/slice.rs","byte_start":242536,"byte_end":242539,"line_start":82,"line_end":82,"column_start":1,"column_end":4}},{"value":"/ ## Examples","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/slice.rs","byte_start":242540,"byte_end":242555,"line_start":83,"line_end":83,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/slice.rs","byte_start":242556,"byte_end":242559,"line_start":84,"line_end":84,"column_start":1,"column_end":4}},{"value":"/ `SliceInfoElem::Index(a)` is the index `a`. It can also be created with","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/slice.rs","byte_start":242560,"byte_end":242635,"line_start":85,"line_end":85,"column_start":1,"column_end":76}},{"value":"/ `SliceInfoElem::from(a)`. The Python equivalent is `[a]`. The macro","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/slice.rs","byte_start":242636,"byte_end":242707,"line_start":86,"line_end":86,"column_start":1,"column_end":72}},{"value":"/ equivalent is `s![a]`.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/slice.rs","byte_start":242708,"byte_end":242734,"line_start":87,"line_end":87,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/slice.rs","byte_start":242735,"byte_end":242738,"line_start":88,"line_end":88,"column_start":1,"column_end":4}},{"value":"/ `SliceInfoElem::Slice { start: 0, end: None, step: 1 }` is the full range","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/slice.rs","byte_start":242739,"byte_end":242816,"line_start":89,"line_end":89,"column_start":1,"column_end":78}},{"value":"/ of an axis. It can also be created with `SliceInfoElem::from(..)`. The","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/slice.rs","byte_start":242817,"byte_end":242891,"line_start":90,"line_end":90,"column_start":1,"column_end":75}},{"value":"/ Python equivalent is `[:]`. The macro equivalent is `s![..]`.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/slice.rs","byte_start":242892,"byte_end":242957,"line_start":91,"line_end":91,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/slice.rs","byte_start":242958,"byte_end":242961,"line_start":92,"line_end":92,"column_start":1,"column_end":4}},{"value":"/ `SliceInfoElem::Slice { start: a, end: Some(b), step: 2 }` is every second","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/slice.rs","byte_start":242962,"byte_end":243040,"line_start":93,"line_end":93,"column_start":1,"column_end":79}},{"value":"/ element from `a` until `b`. It can also be created with","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/slice.rs","byte_start":243041,"byte_end":243100,"line_start":94,"line_end":94,"column_start":1,"column_end":60}},{"value":"/ `SliceInfoElem::from(Slice::from(a..b).step_by(2))`. The Python equivalent","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/slice.rs","byte_start":243101,"byte_end":243179,"line_start":95,"line_end":95,"column_start":1,"column_end":79}},{"value":"/ is `[a:b:2]`. The macro equivalent is `s![a..b;2]`.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/slice.rs","byte_start":243180,"byte_end":243235,"line_start":96,"line_end":96,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/slice.rs","byte_start":243236,"byte_end":243239,"line_start":97,"line_end":97,"column_start":1,"column_end":4}},{"value":"/ `SliceInfoElem::Slice { start: a, end: None, step: -1 }` is every element,","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/slice.rs","byte_start":243240,"byte_end":243318,"line_start":98,"line_end":98,"column_start":1,"column_end":79}},{"value":"/ from `a` until the end, in reverse order. It can also be created with","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/slice.rs","byte_start":243319,"byte_end":243392,"line_start":99,"line_end":99,"column_start":1,"column_end":74}},{"value":"/ `SliceInfoElem::from(Slice::from(a..).step_by(-1))`. The Python equivalent","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/slice.rs","byte_start":243393,"byte_end":243471,"line_start":100,"line_end":100,"column_start":1,"column_end":79}},{"value":"/ is `[a::-1]`. The macro equivalent is `s![a..;-1]`.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/slice.rs","byte_start":243472,"byte_end":243527,"line_start":101,"line_end":101,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/slice.rs","byte_start":243528,"byte_end":243531,"line_start":102,"line_end":102,"column_start":1,"column_end":4}},{"value":"/ `SliceInfoElem::NewAxis` is a new axis of length 1. It can also be created","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/slice.rs","byte_start":243532,"byte_end":243610,"line_start":103,"line_end":103,"column_start":1,"column_end":79}},{"value":"/ with `SliceInfoElem::from(NewAxis)`. The Python equivalent is","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/slice.rs","byte_start":243611,"byte_end":243676,"line_start":104,"line_end":104,"column_start":1,"column_end":66}},{"value":"/ `[np.newaxis]`. The macro equivalent is `s![NewAxis]`.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/slice.rs","byte_start":243677,"byte_end":243735,"line_start":105,"line_end":105,"column_start":1,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":1756},"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/slice.rs","byte_start":244309,"byte_end":244317,"line_start":126,"line_end":126,"column_start":12,"column_end":20},"name":"is_slice","qualname":"<SliceInfoElem>::is_slice","value":"pub fn is_slice(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if `self` is a `Slice` value.\n","sig":null,"attributes":[{"value":"/ Returns `true` if `self` is a `Slice` value.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/slice.rs","byte_start":244249,"byte_end":244297,"line_start":125,"line_end":125,"column_start":5,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":1757},"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/slice.rs","byte_start":244459,"byte_end":244467,"line_start":131,"line_end":131,"column_start":12,"column_end":20},"name":"is_index","qualname":"<SliceInfoElem>::is_index","value":"pub fn is_index(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if `self` is an `Index` value.\n","sig":null,"attributes":[{"value":"/ Returns `true` if `self` is an `Index` value.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/slice.rs","byte_start":244398,"byte_end":244447,"line_start":130,"line_end":130,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":1758},"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/slice.rs","byte_start":244606,"byte_end":244617,"line_start":136,"line_end":136,"column_start":12,"column_end":23},"name":"is_new_axis","qualname":"<SliceInfoElem>::is_new_axis","value":"pub fn is_new_axis(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if `self` is a `NewAxis` value.\n","sig":null,"attributes":[{"value":"/ Returns `true` if `self` is a `NewAxis` value.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/slice.rs","byte_start":244544,"byte_end":244594,"line_start":135,"line_end":135,"column_start":5,"column_end":55}}]},{"kind":"Trait","id":{"krate":0,"index":1771},"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/slice.rs","byte_start":249088,"byte_end":249096,"line_start":290,"line_end":290,"column_start":18,"column_end":26},"name":"SliceArg","qualname":"::slice::SliceArg","value":"SliceArg<D: Dimension>: AsRef<[SliceInfoElem]>","parent":null,"children":[{"krate":0,"index":1773},{"krate":0,"index":1774},{"krate":0,"index":1775},{"krate":0,"index":4528}],"decl_id":null,"docs":" A type that can slice an array of dimension `D`.","sig":null,"attributes":[{"value":"/ A type that can slice an array of dimension `D`.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/slice.rs","byte_start":248706,"byte_end":248758,"line_start":284,"line_end":284,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/slice.rs","byte_start":248759,"byte_end":248762,"line_start":285,"line_end":285,"column_start":1,"column_end":4}},{"value":"/ This trait is unsafe to implement because the implementation must ensure","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/slice.rs","byte_start":248763,"byte_end":248839,"line_start":286,"line_end":286,"column_start":1,"column_end":77}},{"value":"/ that `D`, `Self::OutDim`, `self.in_dim()`, and `self.out_ndim()` are","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/slice.rs","byte_start":248840,"byte_end":248912,"line_start":287,"line_end":287,"column_start":1,"column_end":73}},{"value":"/ consistent with the `&[SliceInfoElem]` returned by `self.as_ref()` and that","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/slice.rs","byte_start":248913,"byte_end":248992,"line_start":288,"line_end":288,"column_start":1,"column_end":80}},{"value":"/ `self.as_ref()` always returns the same value when called multiple times.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/slice.rs","byte_start":248993,"byte_end":249070,"line_start":289,"line_end":289,"column_start":1,"column_end":78}}]},{"kind":"Type","id":{"krate":0,"index":1773},"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/slice.rs","byte_start":249190,"byte_end":249196,"line_start":292,"line_end":292,"column_start":10,"column_end":16},"name":"OutDim","qualname":"::slice::SliceArg::OutDim","value":"type OutDim: Dimension;","parent":{"krate":0,"index":1771},"children":[],"decl_id":null,"docs":" Dimensionality of the output array.\n","sig":null,"attributes":[{"value":"/ Dimensionality of the output array.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/slice.rs","byte_start":249141,"byte_end":249180,"line_start":291,"line_end":291,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":1774},"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/slice.rs","byte_start":249272,"byte_end":249279,"line_start":295,"line_end":295,"column_start":8,"column_end":15},"name":"in_ndim","qualname":"::slice::SliceArg::in_ndim","value":"pub fn in_ndim(&Self) -> usize","parent":{"krate":0,"index":1771},"children":[],"decl_id":null,"docs":" Returns the number of axes in the input array.\n","sig":null,"attributes":[{"value":"/ Returns the number of axes in the input array.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/slice.rs","byte_start":249214,"byte_end":249264,"line_start":294,"line_end":294,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":1775},"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/slice.rs","byte_start":249361,"byte_end":249369,"line_start":298,"line_end":298,"column_start":8,"column_end":16},"name":"out_ndim","qualname":"::slice::SliceArg::out_ndim","value":"pub fn out_ndim(&Self) -> usize","parent":{"krate":0,"index":1771},"children":[],"decl_id":null,"docs":" Returns the number of axes in the output array.\n","sig":null,"attributes":[{"value":"/ Returns the number of axes in the output array.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/slice.rs","byte_start":249302,"byte_end":249353,"line_start":297,"line_end":297,"column_start":5,"column_end":56}}]},{"kind":"Struct","id":{"krate":0,"index":4581},"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/slice.rs","byte_start":251593,"byte_end":251602,"line_start":394,"line_end":394,"column_start":12,"column_end":21},"name":"SliceInfo","qualname":"::slice::SliceInfo","value":"SliceInfo {  }","parent":null,"children":[{"krate":0,"index":4585},{"krate":0,"index":4586},{"krate":0,"index":4587}],"decl_id":null,"docs":" Represents all of the necessary information to perform a slice.","sig":null,"attributes":[{"value":"/ Represents all of the necessary information to perform a slice.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/slice.rs","byte_start":251000,"byte_end":251067,"line_start":383,"line_end":383,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/slice.rs","byte_start":251068,"byte_end":251071,"line_start":384,"line_end":384,"column_start":1,"column_end":4}},{"value":"/ The type `T` is typically `[SliceInfoElem; n]`, `&[SliceInfoElem]`, or","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/slice.rs","byte_start":251072,"byte_end":251146,"line_start":385,"line_end":385,"column_start":1,"column_end":75}},{"value":"/ `Vec<SliceInfoElem>`. The type `Din` is the dimension of the array to be","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/slice.rs","byte_start":251147,"byte_end":251223,"line_start":386,"line_end":386,"column_start":1,"column_end":77}},{"value":"/ sliced, and `Dout` is the output dimension after calling [`.slice()`]. Note","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/slice.rs","byte_start":251224,"byte_end":251303,"line_start":387,"line_end":387,"column_start":1,"column_end":80}},{"value":"/ that if `Din` is a fixed dimension type (`Ix0`, `Ix1`, `Ix2`, etc.), the","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/slice.rs","byte_start":251304,"byte_end":251380,"line_start":388,"line_end":388,"column_start":1,"column_end":77}},{"value":"/ `SliceInfo` instance can still be used to slice an array with dimension","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/slice.rs","byte_start":251381,"byte_end":251456,"line_start":389,"line_end":389,"column_start":1,"column_end":76}},{"value":"/ `IxDyn` as long as the number of axes matches.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/slice.rs","byte_start":251457,"byte_end":251507,"line_start":390,"line_end":390,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/slice.rs","byte_start":251508,"byte_end":251511,"line_start":391,"line_end":391,"column_start":1,"column_end":4}},{"value":"/ [`.slice()`]: struct.ArrayBase.html#method.slice","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/slice.rs","byte_start":251512,"byte_end":251564,"line_start":392,"line_end":392,"column_start":1,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":1809},"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/slice.rs","byte_start":252926,"byte_end":252939,"line_start":445,"line_end":445,"column_start":19,"column_end":32},"name":"new_unchecked","qualname":"<SliceInfo<T, Din, Dout>>::new_unchecked","value":"pub unsafe fn new_unchecked(T, PhantomData<Din>, PhantomData<Dout>)\n-> SliceInfo<T, Din, Dout>","parent":null,"children":[],"decl_id":null,"docs":" Returns a new `SliceInfo` instance.","sig":null,"attributes":[{"value":"/ Returns a new `SliceInfo` instance.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/slice.rs","byte_start":252549,"byte_end":252588,"line_start":435,"line_end":435,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/slice.rs","byte_start":252593,"byte_end":252596,"line_start":436,"line_end":436,"column_start":5,"column_end":8}},{"value":"/ **Note:** only unchecked for non-debug builds of `ndarray`.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/slice.rs","byte_start":252601,"byte_end":252664,"line_start":437,"line_end":437,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/slice.rs","byte_start":252669,"byte_end":252672,"line_start":438,"line_end":438,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/slice.rs","byte_start":252677,"byte_end":252689,"line_start":439,"line_end":439,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/slice.rs","byte_start":252694,"byte_end":252697,"line_start":440,"line_end":440,"column_start":5,"column_end":8}},{"value":"/ The caller must ensure that `in_dim` and `out_dim` are consistent with","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/slice.rs","byte_start":252702,"byte_end":252776,"line_start":441,"line_end":441,"column_start":5,"column_end":79}},{"value":"/ `indices` and that `indices.as_ref()` always returns the same value","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/slice.rs","byte_start":252781,"byte_end":252852,"line_start":442,"line_end":442,"column_start":5,"column_end":76}},{"value":"/ when called multiple times.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/slice.rs","byte_start":252857,"byte_end":252888,"line_start":443,"line_end":443,"column_start":5,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":1810},"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/slice.rs","byte_start":253728,"byte_end":253731,"line_start":471,"line_end":471,"column_start":19,"column_end":22},"name":"new","qualname":"<SliceInfo<T, Din, Dout>>::new","value":"pub unsafe fn new(T) -> Result<SliceInfo<T, Din, Dout>, ShapeError>","parent":null,"children":[],"decl_id":null,"docs":" Returns a new `SliceInfo` instance.","sig":null,"attributes":[{"value":"/ Returns a new `SliceInfo` instance.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/slice.rs","byte_start":253363,"byte_end":253402,"line_start":461,"line_end":461,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/slice.rs","byte_start":253407,"byte_end":253410,"line_start":462,"line_end":462,"column_start":5,"column_end":8}},{"value":"/ Errors if `Din` or `Dout` is not consistent with `indices`.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/slice.rs","byte_start":253415,"byte_end":253478,"line_start":463,"line_end":463,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/slice.rs","byte_start":253483,"byte_end":253486,"line_start":464,"line_end":464,"column_start":5,"column_end":8}},{"value":"/ For common types, a safe alternative is to use `TryFrom` instead.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/slice.rs","byte_start":253491,"byte_end":253560,"line_start":465,"line_end":465,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/slice.rs","byte_start":253565,"byte_end":253568,"line_start":466,"line_end":466,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/slice.rs","byte_start":253573,"byte_end":253585,"line_start":467,"line_end":467,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/slice.rs","byte_start":253590,"byte_end":253593,"line_start":468,"line_end":468,"column_start":5,"column_end":8}},{"value":"/ The caller must ensure `indices.as_ref()` always returns the same value","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/slice.rs","byte_start":253598,"byte_end":253673,"line_start":469,"line_end":469,"column_start":5,"column_end":80}},{"value":"/ when called multiple times.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/slice.rs","byte_start":253678,"byte_end":253709,"line_start":470,"line_end":470,"column_start":5,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":1811},"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/slice.rs","byte_start":254326,"byte_end":254333,"line_start":486,"line_end":486,"column_start":12,"column_end":19},"name":"in_ndim","qualname":"<SliceInfo<T, Din, Dout>>::in_ndim","value":"pub fn in_ndim(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of dimensions of the input array for\n [`.slice()`](struct.ArrayBase.html#method.slice).","sig":null,"attributes":[{"value":"/ Returns the number of dimensions of the input array for","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/slice.rs","byte_start":253992,"byte_end":254051,"line_start":480,"line_end":480,"column_start":5,"column_end":64}},{"value":"/ [`.slice()`](struct.ArrayBase.html#method.slice).","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/slice.rs","byte_start":254056,"byte_end":254109,"line_start":481,"line_end":481,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/slice.rs","byte_start":254114,"byte_end":254117,"line_start":482,"line_end":482,"column_start":5,"column_end":8}},{"value":"/ If `Din` is a fixed-size dimension type, then this is equivalent to","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/slice.rs","byte_start":254122,"byte_end":254193,"line_start":483,"line_end":483,"column_start":5,"column_end":76}},{"value":"/ `Din::NDIM.unwrap()`. Otherwise, the value is calculated by iterating","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/slice.rs","byte_start":254198,"byte_end":254271,"line_start":484,"line_end":484,"column_start":5,"column_end":78}},{"value":"/ over the `SliceInfoElem` elements.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/slice.rs","byte_start":254276,"byte_end":254314,"line_start":485,"line_end":485,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":1812},"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/slice.rs","byte_start":254854,"byte_end":254862,"line_start":501,"line_end":501,"column_start":12,"column_end":20},"name":"out_ndim","qualname":"<SliceInfo<T, Din, Dout>>::out_ndim","value":"pub fn out_ndim(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of dimensions after calling\n [`.slice()`](struct.ArrayBase.html#method.slice) (including taking\n subviews).","sig":null,"attributes":[{"value":"/ Returns the number of dimensions after calling","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/slice.rs","byte_start":254491,"byte_end":254541,"line_start":494,"line_end":494,"column_start":5,"column_end":55}},{"value":"/ [`.slice()`](struct.ArrayBase.html#method.slice) (including taking","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/slice.rs","byte_start":254546,"byte_end":254616,"line_start":495,"line_end":495,"column_start":5,"column_end":75}},{"value":"/ subviews).","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/slice.rs","byte_start":254621,"byte_end":254635,"line_start":496,"line_end":496,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/slice.rs","byte_start":254640,"byte_end":254643,"line_start":497,"line_end":497,"column_start":5,"column_end":8}},{"value":"/ If `Dout` is a fixed-size dimension type, then this is equivalent to","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/slice.rs","byte_start":254648,"byte_end":254720,"line_start":498,"line_end":498,"column_start":5,"column_end":77}},{"value":"/ `Dout::NDIM.unwrap()`. Otherwise, the value is calculated by iterating","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/slice.rs","byte_start":254725,"byte_end":254799,"line_start":499,"line_end":499,"column_start":5,"column_end":79}},{"value":"/ over the `SliceInfoElem` elements.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/slice.rs","byte_start":254804,"byte_end":254842,"line_start":500,"line_end":500,"column_start":5,"column_end":43}}]},{"kind":"Trait","id":{"krate":0,"index":1845},"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/slice.rs","byte_start":258203,"byte_end":258215,"line_start":630,"line_end":630,"column_start":11,"column_end":23},"name":"SliceNextDim","qualname":"::slice::SliceNextDim","value":"SliceNextDim","parent":null,"children":[{"krate":0,"index":1846},{"krate":0,"index":1847},{"krate":0,"index":1848},{"krate":0,"index":1850}],"decl_id":null,"docs":" Trait for determining dimensionality of input and output for [`s!`] macro.\n","sig":null,"attributes":[{"value":"/ Trait for determining dimensionality of input and output for [`s!`] macro.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/slice.rs","byte_start":258099,"byte_end":258177,"line_start":628,"line_end":628,"column_start":1,"column_end":79}}]},{"kind":"Type","id":{"krate":0,"index":1846},"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/slice.rs","byte_start":258312,"byte_end":258317,"line_start":632,"line_end":632,"column_start":10,"column_end":15},"name":"InDim","qualname":"::slice::SliceNextDim::InDim","value":"type InDim: Dimension;","parent":{"krate":0,"index":1845},"children":[],"decl_id":null,"docs":" Number of dimensions that this slicing argument consumes in the input array.\n","sig":null,"attributes":[{"value":"/ Number of dimensions that this slicing argument consumes in the input array.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/slice.rs","byte_start":258222,"byte_end":258302,"line_start":631,"line_end":631,"column_start":5,"column_end":85}}]},{"kind":"Type","id":{"krate":0,"index":1847},"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/slice.rs","byte_start":258425,"byte_end":258431,"line_start":634,"line_end":634,"column_start":10,"column_end":16},"name":"OutDim","qualname":"::slice::SliceNextDim::OutDim","value":"type OutDim: Dimension;","parent":{"krate":0,"index":1845},"children":[],"decl_id":null,"docs":" Number of dimensions that this slicing argument produces in the output array.\n","sig":null,"attributes":[{"value":"/ Number of dimensions that this slicing argument produces in the output array.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/slice.rs","byte_start":258334,"byte_end":258415,"line_start":633,"line_end":633,"column_start":5,"column_end":86}}]},{"kind":"Method","id":{"krate":0,"index":1848},"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/slice.rs","byte_start":258452,"byte_end":258463,"line_start":636,"line_end":636,"column_start":8,"column_end":19},"name":"next_in_dim","qualname":"::slice::SliceNextDim::next_in_dim","value":"pub fn next_in_dim<D>(&Self, PhantomData<D>)\n-> PhantomData<<D as DimAdd<Self::InDim>>::Output> where D: Dimension +\nDimAdd<Self::InDim>","parent":{"krate":0,"index":1845},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1850},"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/slice.rs","byte_start":258638,"byte_end":258650,"line_start":643,"line_end":643,"column_start":8,"column_end":20},"name":"next_out_dim","qualname":"::slice::SliceNextDim::next_out_dim","value":"pub fn next_out_dim<D>(&Self, PhantomData<D>)\n-> PhantomData<<D as DimAdd<Self::OutDim>>::Output> where D: Dimension +\nDimAdd<Self::OutDim>","parent":{"krate":0,"index":1845},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":1854},"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/slice.rs","byte_start":267755,"byte_end":267768,"line_start":877,"line_end":877,"column_start":11,"column_end":24},"name":"MultiSliceArg","qualname":"::slice::MultiSliceArg","value":"MultiSliceArg<'a, A, D>","parent":null,"children":[{"krate":0,"index":1858},{"krate":0,"index":1859},{"krate":0,"index":4712}],"decl_id":null,"docs":" Slicing information describing multiple mutable, disjoint slices.","sig":null,"attributes":[{"value":"/ Slicing information describing multiple mutable, disjoint slices.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/slice.rs","byte_start":267521,"byte_end":267590,"line_start":873,"line_end":873,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/slice.rs","byte_start":267591,"byte_end":267594,"line_start":874,"line_end":874,"column_start":1,"column_end":4}},{"value":"/ It's unfortunate that we need `'a` and `A` to be parameters of the trait,","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/slice.rs","byte_start":267595,"byte_end":267672,"line_start":875,"line_end":875,"column_start":1,"column_end":78}},{"value":"/ but they're necessary until Rust supports generic associated types.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/slice.rs","byte_start":267673,"byte_end":267744,"line_start":876,"line_end":876,"column_start":1,"column_end":72}}]},{"kind":"Type","id":{"krate":0,"index":1858},"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/slice.rs","byte_start":267890,"byte_end":267896,"line_start":883,"line_end":883,"column_start":10,"column_end":16},"name":"Output","qualname":"::slice::MultiSliceArg::Output","value":"type Output;","parent":{"krate":0,"index":1854},"children":[],"decl_id":null,"docs":" The type of the slices created by `.multi_slice_move()`.\n","sig":null,"attributes":[{"value":"/ The type of the slices created by `.multi_slice_move()`.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/slice.rs","byte_start":267820,"byte_end":267880,"line_start":882,"line_end":882,"column_start":5,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":1859},"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/slice.rs","byte_start":268097,"byte_end":268113,"line_start":889,"line_end":889,"column_start":8,"column_end":24},"name":"multi_slice_move","qualname":"::slice::MultiSliceArg::multi_slice_move","value":"pub fn multi_slice_move(&Self, ArrayViewMut) -> Self::Output","parent":{"krate":0,"index":1854},"children":[],"decl_id":null,"docs":" Split the view into multiple disjoint slices.","sig":null,"attributes":[{"value":"/ Split the view into multiple disjoint slices.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/slice.rs","byte_start":267903,"byte_end":267952,"line_start":885,"line_end":885,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/slice.rs","byte_start":267957,"byte_end":267960,"line_start":886,"line_end":886,"column_start":5,"column_end":8}},{"value":"/ **Panics** if performing any individual slice panics or if the slices","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/slice.rs","byte_start":267965,"byte_end":268038,"line_start":887,"line_end":887,"column_start":5,"column_end":78}},{"value":"/ are not disjoint (i.e. if they intersect).","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/slice.rs","byte_start":268043,"byte_end":268089,"line_start":888,"line_end":888,"column_start":5,"column_end":51}}]},{"kind":"Function","id":{"krate":0,"index":1907},"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/stacking.rs","byte_start":272872,"byte_end":272877,"line_start":36,"line_end":36,"column_start":8,"column_end":13},"name":"stack","qualname":"::stacking::stack","value":"pub fn stack<A, D>(Axis, &[ArrayView<, A, D>])\n-> Result<Array<A, D::Larger>, ShapeError> where A: Copy, D: Dimension,\nD::Larger: RemoveAxis","parent":null,"children":[],"decl_id":null,"docs":" Stack arrays along the new axis.","sig":null,"attributes":[{"value":"/ Stack arrays along the new axis.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/stacking.rs","byte_start":272256,"byte_end":272292,"line_start":12,"line_end":12,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/stacking.rs","byte_start":272293,"byte_end":272296,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ ***Errors*** if the arrays have mismatching shapes.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/stacking.rs","byte_start":272297,"byte_end":272352,"line_start":14,"line_end":14,"column_start":1,"column_end":56}},{"value":"/ ***Errors*** if `arrays` is empty, if `axis` is out of bounds,","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/stacking.rs","byte_start":272353,"byte_end":272419,"line_start":15,"line_end":15,"column_start":1,"column_end":67}},{"value":"/ if the result is larger than is possible to represent.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/stacking.rs","byte_start":272420,"byte_end":272478,"line_start":16,"line_end":16,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/stacking.rs","byte_start":272479,"byte_end":272482,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/stacking.rs","byte_start":272483,"byte_end":272490,"line_start":18,"line_end":18,"column_start":1,"column_end":8}},{"value":"/ extern crate ndarray;","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/stacking.rs","byte_start":272491,"byte_end":272516,"line_start":19,"line_end":19,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/stacking.rs","byte_start":272517,"byte_end":272520,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ use ndarray::{arr2, arr3, stack, Axis};","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/stacking.rs","byte_start":272521,"byte_end":272564,"line_start":21,"line_end":21,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/stacking.rs","byte_start":272565,"byte_end":272568,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ # fn main() {","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/stacking.rs","byte_start":272569,"byte_end":272586,"line_start":23,"line_end":23,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/stacking.rs","byte_start":272587,"byte_end":272590,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ let a = arr2(&[[2., 2.],","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/stacking.rs","byte_start":272591,"byte_end":272619,"line_start":25,"line_end":25,"column_start":1,"column_end":29}},{"value":"/                [3., 3.]]);","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/stacking.rs","byte_start":272620,"byte_end":272650,"line_start":26,"line_end":26,"column_start":1,"column_end":31}},{"value":"/ assert!(","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/stacking.rs","byte_start":272651,"byte_end":272663,"line_start":27,"line_end":27,"column_start":1,"column_end":13}},{"value":"/     stack(Axis(0), &[a.view(), a.view()])","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/stacking.rs","byte_start":272664,"byte_end":272709,"line_start":28,"line_end":28,"column_start":1,"column_end":46}},{"value":"/     == Ok(arr3(&[[[2., 2.],","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/stacking.rs","byte_start":272710,"byte_end":272741,"line_start":29,"line_end":29,"column_start":1,"column_end":32}},{"value":"/                   [3., 3.]],","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/stacking.rs","byte_start":272742,"byte_end":272774,"line_start":30,"line_end":30,"column_start":1,"column_end":33}},{"value":"/                  [[2., 2.],","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/stacking.rs","byte_start":272775,"byte_end":272806,"line_start":31,"line_end":31,"column_start":1,"column_end":32}},{"value":"/                   [3., 3.]]]))","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/stacking.rs","byte_start":272807,"byte_end":272841,"line_start":32,"line_end":32,"column_start":1,"column_end":35}},{"value":"/ );","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/stacking.rs","byte_start":272842,"byte_end":272848,"line_start":33,"line_end":33,"column_start":1,"column_end":7}},{"value":"/ # }","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/stacking.rs","byte_start":272849,"byte_end":272856,"line_start":34,"line_end":34,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/stacking.rs","byte_start":272857,"byte_end":272864,"line_start":35,"line_end":35,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":1910},"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/stacking.rs","byte_start":273745,"byte_end":273756,"line_start":69,"line_end":69,"column_start":8,"column_end":19},"name":"concatenate","qualname":"::stacking::concatenate","value":"pub fn concatenate<A, D>(Axis, &[ArrayView<, A, D>])\n-> Result<Array<A, D>, ShapeError> where A: Copy, D: RemoveAxis","parent":null,"children":[],"decl_id":null,"docs":" Concatenate arrays along the given axis.","sig":null,"attributes":[{"value":"/ Concatenate arrays along the given axis.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/stacking.rs","byte_start":273105,"byte_end":273149,"line_start":49,"line_end":49,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/stacking.rs","byte_start":273150,"byte_end":273153,"line_start":50,"line_end":50,"column_start":1,"column_end":4}},{"value":"/ ***Errors*** if the arrays have mismatching shapes, apart from along `axis`.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/stacking.rs","byte_start":273154,"byte_end":273234,"line_start":51,"line_end":51,"column_start":1,"column_end":81}},{"value":"/ (may be made more flexible in the future).<br>","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/stacking.rs","byte_start":273235,"byte_end":273285,"line_start":52,"line_end":52,"column_start":1,"column_end":51}},{"value":"/ ***Errors*** if `arrays` is empty, if `axis` is out of bounds,","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/stacking.rs","byte_start":273286,"byte_end":273352,"line_start":53,"line_end":53,"column_start":1,"column_end":67}},{"value":"/ if the result is larger than is possible to represent.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/stacking.rs","byte_start":273353,"byte_end":273411,"line_start":54,"line_end":54,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/stacking.rs","byte_start":273412,"byte_end":273415,"line_start":55,"line_end":55,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/stacking.rs","byte_start":273416,"byte_end":273423,"line_start":56,"line_end":56,"column_start":1,"column_end":8}},{"value":"/ use ndarray::{arr2, Axis, concatenate};","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/stacking.rs","byte_start":273424,"byte_end":273467,"line_start":57,"line_end":57,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/stacking.rs","byte_start":273468,"byte_end":273471,"line_start":58,"line_end":58,"column_start":1,"column_end":4}},{"value":"/ let a = arr2(&[[2., 2.],","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/stacking.rs","byte_start":273472,"byte_end":273500,"line_start":59,"line_end":59,"column_start":1,"column_end":29}},{"value":"/                [3., 3.]]);","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/stacking.rs","byte_start":273501,"byte_end":273531,"line_start":60,"line_end":60,"column_start":1,"column_end":31}},{"value":"/ assert!(","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/stacking.rs","byte_start":273532,"byte_end":273544,"line_start":61,"line_end":61,"column_start":1,"column_end":13}},{"value":"/     concatenate(Axis(0), &[a.view(), a.view()])","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/stacking.rs","byte_start":273545,"byte_end":273596,"line_start":62,"line_end":62,"column_start":1,"column_end":52}},{"value":"/     == Ok(arr2(&[[2., 2.],","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/stacking.rs","byte_start":273597,"byte_end":273627,"line_start":63,"line_end":63,"column_start":1,"column_end":31}},{"value":"/                  [3., 3.],","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/stacking.rs","byte_start":273628,"byte_end":273658,"line_start":64,"line_end":64,"column_start":1,"column_end":31}},{"value":"/                  [2., 2.],","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/stacking.rs","byte_start":273659,"byte_end":273689,"line_start":65,"line_end":65,"column_start":1,"column_end":31}},{"value":"/                  [3., 3.]]))","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/stacking.rs","byte_start":273690,"byte_end":273722,"line_start":66,"line_end":66,"column_start":1,"column_end":33}},{"value":"/ );","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/stacking.rs","byte_start":273723,"byte_end":273729,"line_start":67,"line_end":67,"column_start":1,"column_end":7}},{"value":"/ ```","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/stacking.rs","byte_start":273730,"byte_end":273737,"line_start":68,"line_end":68,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":1915},"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/stacking.rs","byte_start":275667,"byte_end":275681,"line_start":136,"line_end":136,"column_start":8,"column_end":22},"name":"stack_new_axis","qualname":"::stacking::stack_new_axis","value":"pub fn stack_new_axis<A, D>(Axis, &[ArrayView<, A, D>])\n-> Result<Array<A, D::Larger>, ShapeError> where A: Copy, D: Dimension,\nD::Larger: RemoveAxis","parent":null,"children":[],"decl_id":null,"docs":" Stack arrays along the new axis.","sig":null,"attributes":[{"value":"deprecated(note = \"Use under the name stack instead.\", since = \"0.15.0\")","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/stacking.rs","byte_start":274961,"byte_end":275032,"line_start":111,"line_end":111,"column_start":1,"column_end":72}},{"value":"/ Stack arrays along the new axis.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/stacking.rs","byte_start":275033,"byte_end":275069,"line_start":112,"line_end":112,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/stacking.rs","byte_start":275070,"byte_end":275073,"line_start":113,"line_end":113,"column_start":1,"column_end":4}},{"value":"/ ***Errors*** if the arrays have mismatching shapes.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/stacking.rs","byte_start":275074,"byte_end":275129,"line_start":114,"line_end":114,"column_start":1,"column_end":56}},{"value":"/ ***Errors*** if `arrays` is empty, if `axis` is out of bounds,","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/stacking.rs","byte_start":275130,"byte_end":275196,"line_start":115,"line_end":115,"column_start":1,"column_end":67}},{"value":"/ if the result is larger than is possible to represent.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/stacking.rs","byte_start":275197,"byte_end":275255,"line_start":116,"line_end":116,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/stacking.rs","byte_start":275256,"byte_end":275259,"line_start":117,"line_end":117,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/stacking.rs","byte_start":275260,"byte_end":275267,"line_start":118,"line_end":118,"column_start":1,"column_end":8}},{"value":"/ extern crate ndarray;","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/stacking.rs","byte_start":275268,"byte_end":275293,"line_start":119,"line_end":119,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/stacking.rs","byte_start":275294,"byte_end":275297,"line_start":120,"line_end":120,"column_start":1,"column_end":4}},{"value":"/ use ndarray::{arr2, arr3, stack_new_axis, Axis};","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/stacking.rs","byte_start":275298,"byte_end":275350,"line_start":121,"line_end":121,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/stacking.rs","byte_start":275351,"byte_end":275354,"line_start":122,"line_end":122,"column_start":1,"column_end":4}},{"value":"/ # fn main() {","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/stacking.rs","byte_start":275355,"byte_end":275372,"line_start":123,"line_end":123,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/stacking.rs","byte_start":275373,"byte_end":275376,"line_start":124,"line_end":124,"column_start":1,"column_end":4}},{"value":"/ let a = arr2(&[[2., 2.],","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/stacking.rs","byte_start":275377,"byte_end":275405,"line_start":125,"line_end":125,"column_start":1,"column_end":29}},{"value":"/                [3., 3.]]);","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/stacking.rs","byte_start":275406,"byte_end":275436,"line_start":126,"line_end":126,"column_start":1,"column_end":31}},{"value":"/ assert!(","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/stacking.rs","byte_start":275437,"byte_end":275449,"line_start":127,"line_end":127,"column_start":1,"column_end":13}},{"value":"/     stack_new_axis(Axis(0), &[a.view(), a.view()])","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/stacking.rs","byte_start":275450,"byte_end":275504,"line_start":128,"line_end":128,"column_start":1,"column_end":55}},{"value":"/     == Ok(arr3(&[[[2., 2.],","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/stacking.rs","byte_start":275505,"byte_end":275536,"line_start":129,"line_end":129,"column_start":1,"column_end":32}},{"value":"/                   [3., 3.]],","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/stacking.rs","byte_start":275537,"byte_end":275569,"line_start":130,"line_end":130,"column_start":1,"column_end":33}},{"value":"/                  [[2., 2.],","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/stacking.rs","byte_start":275570,"byte_end":275601,"line_start":131,"line_end":131,"column_start":1,"column_end":32}},{"value":"/                   [3., 3.]]]))","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/stacking.rs","byte_start":275602,"byte_end":275636,"line_start":132,"line_end":132,"column_start":1,"column_end":35}},{"value":"/ );","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/stacking.rs","byte_start":275637,"byte_end":275643,"line_start":133,"line_end":133,"column_start":1,"column_end":7}},{"value":"/ # }","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/stacking.rs","byte_start":275644,"byte_end":275651,"line_start":134,"line_end":134,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/stacking.rs","byte_start":275652,"byte_end":275659,"line_start":135,"line_end":135,"column_start":1,"column_end":8}}]},{"kind":"Trait","id":{"krate":0,"index":1931},"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/zip/ndproducer.rs","byte_start":315643,"byte_end":315657,"line_start":13,"line_end":13,"column_start":11,"column_end":25},"name":"IntoNdProducer","qualname":"::zip::ndproducer::IntoNdProducer","value":"IntoNdProducer","parent":null,"children":[{"krate":0,"index":1932},{"krate":0,"index":1933},{"krate":0,"index":1934},{"krate":0,"index":1935}],"decl_id":null,"docs":" Argument conversion into a producer.","sig":null,"attributes":[{"value":"/ Argument conversion into a producer.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/zip/ndproducer.rs","byte_start":315428,"byte_end":315468,"line_start":8,"line_end":8,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/zip/ndproducer.rs","byte_start":315469,"byte_end":315472,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ Slices and vectors can be used (equivalent to 1-dimensional array views).","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/zip/ndproducer.rs","byte_start":315473,"byte_end":315550,"line_start":10,"line_end":10,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/zip/ndproducer.rs","byte_start":315551,"byte_end":315554,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ This trait is like `IntoIterator` for `NdProducers` instead of iterators.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/zip/ndproducer.rs","byte_start":315555,"byte_end":315632,"line_start":12,"line_end":12,"column_start":1,"column_end":78}}]},{"kind":"Type","id":{"krate":0,"index":1932},"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/zip/ndproducer.rs","byte_start":315713,"byte_end":315717,"line_start":15,"line_end":15,"column_start":10,"column_end":14},"name":"Item","qualname":"::zip::ndproducer::IntoNdProducer::Item","value":"type Item;","parent":{"krate":0,"index":1931},"children":[],"decl_id":null,"docs":" The element produced per iteration.\n","sig":null,"attributes":[{"value":"/ The element produced per iteration.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/zip/ndproducer.rs","byte_start":315664,"byte_end":315703,"line_start":14,"line_end":14,"column_start":5,"column_end":44}}]},{"kind":"Type","id":{"krate":0,"index":1933},"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/zip/ndproducer.rs","byte_start":315767,"byte_end":315770,"line_start":17,"line_end":17,"column_start":10,"column_end":13},"name":"Dim","qualname":"::zip::ndproducer::IntoNdProducer::Dim","value":"type Dim: Dimension;","parent":{"krate":0,"index":1931},"children":[],"decl_id":null,"docs":" Dimension type of the producer\n","sig":null,"attributes":[{"value":"/ Dimension type of the producer","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/zip/ndproducer.rs","byte_start":315723,"byte_end":315757,"line_start":16,"line_end":16,"column_start":5,"column_end":39}}]},{"kind":"Type","id":{"krate":0,"index":1934},"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/zip/ndproducer.rs","byte_start":315792,"byte_end":315798,"line_start":18,"line_end":18,"column_start":10,"column_end":16},"name":"Output","qualname":"::zip::ndproducer::IntoNdProducer::Output","value":"type Output: NdProducer<Dim = Self::Dim, Item = Self::Item>;","parent":{"krate":0,"index":1931},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1935},"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/zip/ndproducer.rs","byte_start":315903,"byte_end":315916,"line_start":20,"line_end":20,"column_start":8,"column_end":21},"name":"into_producer","qualname":"::zip::ndproducer::IntoNdProducer::into_producer","value":"pub fn into_producer(Self) -> Self::Output","parent":{"krate":0,"index":1931},"children":[],"decl_id":null,"docs":" Convert the value into an `NdProducer`.\n","sig":null,"attributes":[{"value":"/ Convert the value into an `NdProducer`.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/zip/ndproducer.rs","byte_start":315852,"byte_end":315895,"line_start":19,"line_end":19,"column_start":5,"column_end":48}}]},{"kind":"Trait","id":{"krate":0,"index":1942},"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/zip/ndproducer.rs","byte_start":317043,"byte_end":317053,"line_start":55,"line_end":55,"column_start":11,"column_end":21},"name":"NdProducer","qualname":"::zip::ndproducer::NdProducer","value":"NdProducer","parent":null,"children":[{"krate":0,"index":1943},{"krate":0,"index":1944},{"krate":0,"index":1945},{"krate":0,"index":1946},{"krate":0,"index":1947},{"krate":0,"index":1948},{"krate":0,"index":1949},{"krate":0,"index":1950},{"krate":0,"index":1951},{"krate":0,"index":1952},{"krate":0,"index":1953},{"krate":0,"index":1954},{"krate":0,"index":1955},{"krate":0,"index":4771}],"decl_id":null,"docs":" A producer of an n-dimensional set of elements;\n for example an array view, mutable array view or an iterator\n that yields chunks.","sig":null,"attributes":[{"value":"/ A producer of an n-dimensional set of elements;","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/zip/ndproducer.rs","byte_start":316138,"byte_end":316189,"line_start":35,"line_end":35,"column_start":1,"column_end":52}},{"value":"/ for example an array view, mutable array view or an iterator","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/zip/ndproducer.rs","byte_start":316190,"byte_end":316254,"line_start":36,"line_end":36,"column_start":1,"column_end":65}},{"value":"/ that yields chunks.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/zip/ndproducer.rs","byte_start":316255,"byte_end":316278,"line_start":37,"line_end":37,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/zip/ndproducer.rs","byte_start":316279,"byte_end":316282,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ Producers are used as a arguments to [`Zip`](struct.Zip.html) and","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/zip/ndproducer.rs","byte_start":316283,"byte_end":316352,"line_start":39,"line_end":39,"column_start":1,"column_end":70}},{"value":"/ [`azip!()`](macro.azip.html).","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/zip/ndproducer.rs","byte_start":316353,"byte_end":316386,"line_start":40,"line_end":40,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/zip/ndproducer.rs","byte_start":316387,"byte_end":316390,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"/ # Comparison to `IntoIterator`","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/zip/ndproducer.rs","byte_start":316391,"byte_end":316425,"line_start":42,"line_end":42,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/zip/ndproducer.rs","byte_start":316426,"byte_end":316429,"line_start":43,"line_end":43,"column_start":1,"column_end":4}},{"value":"/ Most `NdProducers` are *iterable* (implement `IntoIterator`) but not directly","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/zip/ndproducer.rs","byte_start":316430,"byte_end":316511,"line_start":44,"line_end":44,"column_start":1,"column_end":82}},{"value":"/ iterators. This separation is needed because the producer represents","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/zip/ndproducer.rs","byte_start":316512,"byte_end":316584,"line_start":45,"line_end":45,"column_start":1,"column_end":73}},{"value":"/ a multidimensional set of items, it can be split along a particular axis for","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/zip/ndproducer.rs","byte_start":316585,"byte_end":316665,"line_start":46,"line_end":46,"column_start":1,"column_end":81}},{"value":"/ parallelization, and it has no fixed correspondance to a sequence.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/zip/ndproducer.rs","byte_start":316666,"byte_end":316736,"line_start":47,"line_end":47,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/zip/ndproducer.rs","byte_start":316737,"byte_end":316740,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"/ The natural exception is one dimensional producers, like `AxisIter`, which","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/zip/ndproducer.rs","byte_start":316741,"byte_end":316819,"line_start":49,"line_end":49,"column_start":1,"column_end":79}},{"value":"/ implement `Iterator` directly","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/zip/ndproducer.rs","byte_start":316820,"byte_end":316853,"line_start":50,"line_end":50,"column_start":1,"column_end":34}},{"value":"/ (`AxisIter` traverses a one dimensional sequence, along an axis, while","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/zip/ndproducer.rs","byte_start":316854,"byte_end":316928,"line_start":51,"line_end":51,"column_start":1,"column_end":75}},{"value":"/ *producing* multidimensional items).","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/zip/ndproducer.rs","byte_start":316929,"byte_end":316969,"line_start":52,"line_end":52,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/zip/ndproducer.rs","byte_start":316970,"byte_end":316973,"line_start":53,"line_end":53,"column_start":1,"column_end":4}},{"value":"/ See also [`IntoNdProducer`](trait.IntoNdProducer.html)","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/zip/ndproducer.rs","byte_start":316974,"byte_end":317032,"line_start":54,"line_end":54,"column_start":1,"column_end":59}}]},{"kind":"Type","id":{"krate":0,"index":1943},"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/zip/ndproducer.rs","byte_start":317109,"byte_end":317113,"line_start":57,"line_end":57,"column_start":10,"column_end":14},"name":"Item","qualname":"::zip::ndproducer::NdProducer::Item","value":"type Item;","parent":{"krate":0,"index":1942},"children":[],"decl_id":null,"docs":" The element produced per iteration.\n","sig":null,"attributes":[{"value":"/ The element produced per iteration.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/zip/ndproducer.rs","byte_start":317060,"byte_end":317099,"line_start":56,"line_end":56,"column_start":5,"column_end":44}}]},{"kind":"Type","id":{"krate":0,"index":1944},"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/zip/ndproducer.rs","byte_start":317182,"byte_end":317185,"line_start":60,"line_end":60,"column_start":10,"column_end":13},"name":"Dim","qualname":"::zip::ndproducer::NdProducer::Dim","value":"type Dim: Dimension;","parent":{"krate":0,"index":1942},"children":[],"decl_id":null,"docs":" Dimension type\n","sig":null,"attributes":[{"value":"/ Dimension type","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/zip/ndproducer.rs","byte_start":317154,"byte_end":317172,"line_start":59,"line_end":59,"column_start":5,"column_end":23}}]},{"kind":"Type","id":{"krate":0,"index":1945},"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/zip/ndproducer.rs","byte_start":317524,"byte_end":317527,"line_start":68,"line_end":68,"column_start":10,"column_end":13},"name":"Ptr","qualname":"::zip::ndproducer::NdProducer::Ptr","value":"type Ptr: Offset<Stride = Self::Stride>;","parent":{"krate":0,"index":1942},"children":[],"decl_id":null,"docs":" Pointer or stand-in for pointer\n","sig":null,"attributes":[{"value":"/ Pointer or stand-in for pointer","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/zip/ndproducer.rs","byte_start":317479,"byte_end":317514,"line_start":67,"line_end":67,"column_start":5,"column_end":40}}]},{"kind":"Type","id":{"krate":0,"index":1946},"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/zip/ndproducer.rs","byte_start":317611,"byte_end":317617,"line_start":71,"line_end":71,"column_start":10,"column_end":16},"name":"Stride","qualname":"::zip::ndproducer::NdProducer::Stride","value":"type Stride: Copy;","parent":{"krate":0,"index":1942},"children":[],"decl_id":null,"docs":" Pointer stride\n","sig":null,"attributes":[{"value":"/ Pointer stride","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/zip/ndproducer.rs","byte_start":317583,"byte_end":317601,"line_start":70,"line_end":70,"column_start":5,"column_end":23}}]},{"kind":"Method","id":{"krate":0,"index":1947},"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/zip/ndproducer.rs","byte_start":317652,"byte_end":317658,"line_start":74,"line_end":74,"column_start":8,"column_end":14},"name":"layout","qualname":"::zip::ndproducer::NdProducer::layout","value":"pub fn layout(&Self) -> Layout","parent":{"krate":0,"index":1942},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1948},"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/zip/ndproducer.rs","byte_start":317726,"byte_end":317733,"line_start":76,"line_end":76,"column_start":8,"column_end":15},"name":"raw_dim","qualname":"::zip::ndproducer::NdProducer::raw_dim","value":"pub fn raw_dim(&Self) -> Self::Dim","parent":{"krate":0,"index":1942},"children":[],"decl_id":null,"docs":" Return the shape of the producer.\n","sig":null,"attributes":[{"value":"/ Return the shape of the producer.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/zip/ndproducer.rs","byte_start":317681,"byte_end":317718,"line_start":75,"line_end":75,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":1949},"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/zip/ndproducer.rs","byte_start":317781,"byte_end":317790,"line_start":78,"line_end":78,"column_start":8,"column_end":17},"name":"equal_dim","qualname":"::zip::ndproducer::NdProducer::equal_dim","value":"pub fn equal_dim(&Self, &Self::Dim) -> bool","parent":{"krate":0,"index":1942},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1950},"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/zip/ndproducer.rs","byte_start":317888,"byte_end":317894,"line_start":82,"line_end":82,"column_start":8,"column_end":14},"name":"as_ptr","qualname":"::zip::ndproducer::NdProducer::as_ptr","value":"pub fn as_ptr(&Self) -> Self::Ptr","parent":{"krate":0,"index":1942},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1951},"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/zip/ndproducer.rs","byte_start":317949,"byte_end":317955,"line_start":84,"line_end":84,"column_start":15,"column_end":21},"name":"as_ref","qualname":"::zip::ndproducer::NdProducer::as_ref","value":"pub unsafe fn as_ref(&Self, Self::Ptr) -> Self::Item","parent":{"krate":0,"index":1942},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1952},"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/zip/ndproducer.rs","byte_start":318027,"byte_end":318035,"line_start":86,"line_end":86,"column_start":15,"column_end":23},"name":"uget_ptr","qualname":"::zip::ndproducer::NdProducer::uget_ptr","value":"pub unsafe fn uget_ptr(&Self, &Self::Dim) -> Self::Ptr","parent":{"krate":0,"index":1942},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1953},"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/zip/ndproducer.rs","byte_start":318098,"byte_end":318107,"line_start":88,"line_end":88,"column_start":8,"column_end":17},"name":"stride_of","qualname":"::zip::ndproducer::NdProducer::stride_of","value":"pub fn stride_of(&Self, Axis) -> <Self::Ptr as Offset>::Stride","parent":{"krate":0,"index":1942},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1954},"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/zip/ndproducer.rs","byte_start":318187,"byte_end":318204,"line_start":90,"line_end":90,"column_start":8,"column_end":25},"name":"contiguous_stride","qualname":"::zip::ndproducer::NdProducer::contiguous_stride","value":"pub fn contiguous_stride(&Self) -> Self::Stride","parent":{"krate":0,"index":1942},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1955},"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/zip/ndproducer.rs","byte_start":318255,"byte_end":318263,"line_start":92,"line_end":92,"column_start":8,"column_end":16},"name":"split_at","qualname":"::zip::ndproducer::NdProducer::split_at","value":"pub fn split_at(Self, Axis, usize) -> (Self, Self) where Self: Sized","parent":{"krate":0,"index":1942},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":1956},"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/zip/ndproducer.rs","byte_start":318378,"byte_end":318384,"line_start":99,"line_end":99,"column_start":11,"column_end":17},"name":"Offset","qualname":"::zip::ndproducer::Offset","value":"Offset: Copy","parent":null,"children":[{"krate":0,"index":1957},{"krate":0,"index":1958},{"krate":0,"index":4772}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":1957},"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/zip/ndproducer.rs","byte_start":318402,"byte_end":318408,"line_start":100,"line_end":100,"column_start":10,"column_end":16},"name":"Stride","qualname":"::zip::ndproducer::Offset::Stride","value":"type Stride: Copy;","parent":{"krate":0,"index":1956},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1958},"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/zip/ndproducer.rs","byte_start":318430,"byte_end":318443,"line_start":101,"line_end":101,"column_start":15,"column_end":28},"name":"stride_offset","qualname":"::zip::ndproducer::Offset::stride_offset","value":"pub unsafe fn stride_offset(Self, Self::Stride, usize) -> Self","parent":{"krate":0,"index":1956},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":2100},"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/zip/mod.rs","byte_start":280671,"byte_end":280677,"line_start":47,"line_end":47,"column_start":10,"column_end":16},"name":"Output","qualname":"::zip::Broadcast::Output","value":"type Output: NdProducer<Dim = E::Dim>;","parent":{"krate":0,"index":2098},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":2115},"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/zip/mod.rs","byte_start":282215,"byte_end":282219,"line_start":99,"line_end":99,"column_start":10,"column_end":14},"name":"Item","qualname":"::zip::ZippableTuple::Item","value":"type Item;","parent":{"krate":0,"index":2114},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":2116},"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/zip/mod.rs","byte_start":282230,"byte_end":282233,"line_start":100,"line_end":100,"column_start":10,"column_end":13},"name":"Ptr","qualname":"::zip::ZippableTuple::Ptr","value":"type Ptr: OffsetTuple<Args = Self::Stride> + Copy;","parent":{"krate":0,"index":2114},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":2117},"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/zip/mod.rs","byte_start":282285,"byte_end":282288,"line_start":101,"line_end":101,"column_start":10,"column_end":13},"name":"Dim","qualname":"::zip::ZippableTuple::Dim","value":"type Dim: Dimension;","parent":{"krate":0,"index":2114},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":2118},"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/zip/mod.rs","byte_start":282310,"byte_end":282316,"line_start":102,"line_end":102,"column_start":10,"column_end":16},"name":"Stride","qualname":"::zip::ZippableTuple::Stride","value":"type Stride: Copy;","parent":{"krate":0,"index":2114},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":4781},"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/zip/mod.rs","byte_start":285413,"byte_end":285416,"line_start":188,"line_end":188,"column_start":12,"column_end":15},"name":"Zip","qualname":"::zip::Zip","value":"Zip {  }","parent":null,"children":[{"krate":0,"index":4784},{"krate":0,"index":4785},{"krate":0,"index":4786},{"krate":0,"index":4787}],"decl_id":null,"docs":" Lock step function application across several arrays or other producers.","sig":null,"attributes":[{"value":"/ Lock step function application across several arrays or other producers.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/zip/mod.rs","byte_start":282649,"byte_end":282725,"line_start":111,"line_end":111,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/zip/mod.rs","byte_start":282726,"byte_end":282729,"line_start":112,"line_end":112,"column_start":1,"column_end":4}},{"value":"/ Zip allows matching several producers to each other elementwise and applying","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/zip/mod.rs","byte_start":282730,"byte_end":282810,"line_start":113,"line_end":113,"column_start":1,"column_end":81}},{"value":"/ a function over all tuples of elements (one item from each input at","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/zip/mod.rs","byte_start":282811,"byte_end":282882,"line_start":114,"line_end":114,"column_start":1,"column_end":72}},{"value":"/ a time).","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/zip/mod.rs","byte_start":282883,"byte_end":282895,"line_start":115,"line_end":115,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/zip/mod.rs","byte_start":282896,"byte_end":282899,"line_start":116,"line_end":116,"column_start":1,"column_end":4}},{"value":"/ In general, the zip uses a tuple of producers","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/zip/mod.rs","byte_start":282900,"byte_end":282949,"line_start":117,"line_end":117,"column_start":1,"column_end":50}},{"value":"/ ([`NdProducer`](trait.NdProducer.html) trait) that all have to be of the","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/zip/mod.rs","byte_start":282950,"byte_end":283026,"line_start":118,"line_end":118,"column_start":1,"column_end":77}},{"value":"/ same shape. The NdProducer implementation defines what its item type is","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/zip/mod.rs","byte_start":283027,"byte_end":283102,"line_start":119,"line_end":119,"column_start":1,"column_end":76}},{"value":"/ (for example if it's a shared reference, mutable reference or an array","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/zip/mod.rs","byte_start":283103,"byte_end":283177,"line_start":120,"line_end":120,"column_start":1,"column_end":75}},{"value":"/ view etc).","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/zip/mod.rs","byte_start":283178,"byte_end":283192,"line_start":121,"line_end":121,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/zip/mod.rs","byte_start":283193,"byte_end":283196,"line_start":122,"line_end":122,"column_start":1,"column_end":4}},{"value":"/ If all the input arrays are of the same memory layout the zip performs much","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/zip/mod.rs","byte_start":283197,"byte_end":283276,"line_start":123,"line_end":123,"column_start":1,"column_end":80}},{"value":"/ better and the compiler can usually vectorize the loop (if applicable).","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/zip/mod.rs","byte_start":283277,"byte_end":283352,"line_start":124,"line_end":124,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/zip/mod.rs","byte_start":283353,"byte_end":283356,"line_start":125,"line_end":125,"column_start":1,"column_end":4}},{"value":"/ The order elements are visited is not specified. The producers don’t have to","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/zip/mod.rs","byte_start":283357,"byte_end":283439,"line_start":126,"line_end":126,"column_start":1,"column_end":81}},{"value":"/ have the same item type.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/zip/mod.rs","byte_start":283440,"byte_end":283468,"line_start":127,"line_end":127,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/zip/mod.rs","byte_start":283469,"byte_end":283472,"line_start":128,"line_end":128,"column_start":1,"column_end":4}},{"value":"/ The `Zip` has two methods for function application: `for_each` and","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/zip/mod.rs","byte_start":283473,"byte_end":283543,"line_start":129,"line_end":129,"column_start":1,"column_end":71}},{"value":"/ `fold_while`. The zip object can be split, which allows parallelization.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/zip/mod.rs","byte_start":283544,"byte_end":283620,"line_start":130,"line_end":130,"column_start":1,"column_end":77}},{"value":"/ A read-only zip object (no mutable producers) can be cloned.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/zip/mod.rs","byte_start":283621,"byte_end":283685,"line_start":131,"line_end":131,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/zip/mod.rs","byte_start":283686,"byte_end":283689,"line_start":132,"line_end":132,"column_start":1,"column_end":4}},{"value":"/ See also the [`azip!()` macro][az] which offers a convenient shorthand","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/zip/mod.rs","byte_start":283690,"byte_end":283764,"line_start":133,"line_end":133,"column_start":1,"column_end":75}},{"value":"/ to common ways to use `Zip`.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/zip/mod.rs","byte_start":283765,"byte_end":283797,"line_start":134,"line_end":134,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/zip/mod.rs","byte_start":283798,"byte_end":283801,"line_start":135,"line_end":135,"column_start":1,"column_end":4}},{"value":"/ [az]: macro.azip.html","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/zip/mod.rs","byte_start":283802,"byte_end":283827,"line_start":136,"line_end":136,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/zip/mod.rs","byte_start":283828,"byte_end":283831,"line_start":137,"line_end":137,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/zip/mod.rs","byte_start":283832,"byte_end":283839,"line_start":138,"line_end":138,"column_start":1,"column_end":8}},{"value":"/ use ndarray::Zip;","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/zip/mod.rs","byte_start":283840,"byte_end":283861,"line_start":139,"line_end":139,"column_start":1,"column_end":22}},{"value":"/ use ndarray::Array2;","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/zip/mod.rs","byte_start":283862,"byte_end":283886,"line_start":140,"line_end":140,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/zip/mod.rs","byte_start":283887,"byte_end":283890,"line_start":141,"line_end":141,"column_start":1,"column_end":4}},{"value":"/ type M = Array2<f64>;","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/zip/mod.rs","byte_start":283891,"byte_end":283916,"line_start":142,"line_end":142,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/zip/mod.rs","byte_start":283917,"byte_end":283920,"line_start":143,"line_end":143,"column_start":1,"column_end":4}},{"value":"/ // Create four 2d arrays of the same size","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/zip/mod.rs","byte_start":283921,"byte_end":283966,"line_start":144,"line_end":144,"column_start":1,"column_end":46}},{"value":"/ let mut a = M::zeros((64, 32));","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/zip/mod.rs","byte_start":283967,"byte_end":284002,"line_start":145,"line_end":145,"column_start":1,"column_end":36}},{"value":"/ let b = M::from_elem(a.dim(), 1.);","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/zip/mod.rs","byte_start":284003,"byte_end":284041,"line_start":146,"line_end":146,"column_start":1,"column_end":39}},{"value":"/ let c = M::from_elem(a.dim(), 2.);","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/zip/mod.rs","byte_start":284042,"byte_end":284080,"line_start":147,"line_end":147,"column_start":1,"column_end":39}},{"value":"/ let d = M::from_elem(a.dim(), 3.);","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/zip/mod.rs","byte_start":284081,"byte_end":284119,"line_start":148,"line_end":148,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/zip/mod.rs","byte_start":284120,"byte_end":284123,"line_start":149,"line_end":149,"column_start":1,"column_end":4}},{"value":"/ // Example 1: Perform an elementwise arithmetic operation across","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/zip/mod.rs","byte_start":284124,"byte_end":284192,"line_start":150,"line_end":150,"column_start":1,"column_end":69}},{"value":"/ // the four arrays a, b, c, d.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/zip/mod.rs","byte_start":284193,"byte_end":284227,"line_start":151,"line_end":151,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/zip/mod.rs","byte_start":284228,"byte_end":284231,"line_start":152,"line_end":152,"column_start":1,"column_end":4}},{"value":"/ Zip::from(&mut a)","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/zip/mod.rs","byte_start":284232,"byte_end":284253,"line_start":153,"line_end":153,"column_start":1,"column_end":22}},{"value":"/     .and(&b)","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/zip/mod.rs","byte_start":284254,"byte_end":284270,"line_start":154,"line_end":154,"column_start":1,"column_end":17}},{"value":"/     .and(&c)","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/zip/mod.rs","byte_start":284271,"byte_end":284287,"line_start":155,"line_end":155,"column_start":1,"column_end":17}},{"value":"/     .and(&d)","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/zip/mod.rs","byte_start":284288,"byte_end":284304,"line_start":156,"line_end":156,"column_start":1,"column_end":17}},{"value":"/     .for_each(|w, &x, &y, &z| {","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/zip/mod.rs","byte_start":284305,"byte_end":284340,"line_start":157,"line_end":157,"column_start":1,"column_end":36}},{"value":"/         *w += x + y * z;","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/zip/mod.rs","byte_start":284341,"byte_end":284369,"line_start":158,"line_end":158,"column_start":1,"column_end":29}},{"value":"/     });","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/zip/mod.rs","byte_start":284370,"byte_end":284381,"line_start":159,"line_end":159,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/zip/mod.rs","byte_start":284382,"byte_end":284385,"line_start":160,"line_end":160,"column_start":1,"column_end":4}},{"value":"/ // Example 2: Create a new array `totals` with one entry per row of `a`.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/zip/mod.rs","byte_start":284386,"byte_end":284462,"line_start":161,"line_end":161,"column_start":1,"column_end":77}},{"value":"/ //  Use Zip to traverse the rows of `a` and assign to the corresponding","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/zip/mod.rs","byte_start":284463,"byte_end":284538,"line_start":162,"line_end":162,"column_start":1,"column_end":76}},{"value":"/ //  entry in `totals` with the sum across each row.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/zip/mod.rs","byte_start":284539,"byte_end":284594,"line_start":163,"line_end":163,"column_start":1,"column_end":56}},{"value":"/ //  This is possible because the producer for `totals` and the row producer","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/zip/mod.rs","byte_start":284595,"byte_end":284674,"line_start":164,"line_end":164,"column_start":1,"column_end":80}},{"value":"/ //  for `a` have the same shape and dimensionality.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/zip/mod.rs","byte_start":284675,"byte_end":284730,"line_start":165,"line_end":165,"column_start":1,"column_end":56}},{"value":"/ //  The rows producer yields one array view (`row`) per iteration.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/zip/mod.rs","byte_start":284731,"byte_end":284801,"line_start":166,"line_end":166,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/zip/mod.rs","byte_start":284802,"byte_end":284805,"line_start":167,"line_end":167,"column_start":1,"column_end":4}},{"value":"/ use ndarray::{Array1, Axis};","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/zip/mod.rs","byte_start":284806,"byte_end":284838,"line_start":168,"line_end":168,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/zip/mod.rs","byte_start":284839,"byte_end":284842,"line_start":169,"line_end":169,"column_start":1,"column_end":4}},{"value":"/ let mut totals = Array1::zeros(a.nrows());","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/zip/mod.rs","byte_start":284843,"byte_end":284889,"line_start":170,"line_end":170,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/zip/mod.rs","byte_start":284890,"byte_end":284893,"line_start":171,"line_end":171,"column_start":1,"column_end":4}},{"value":"/ Zip::from(&mut totals)","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/zip/mod.rs","byte_start":284894,"byte_end":284920,"line_start":172,"line_end":172,"column_start":1,"column_end":27}},{"value":"/     .and(a.rows())","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/zip/mod.rs","byte_start":284921,"byte_end":284943,"line_start":173,"line_end":173,"column_start":1,"column_end":23}},{"value":"/     .for_each(|totals, row| *totals = row.sum());","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/zip/mod.rs","byte_start":284944,"byte_end":284997,"line_start":174,"line_end":174,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/zip/mod.rs","byte_start":284998,"byte_end":285001,"line_start":175,"line_end":175,"column_start":1,"column_end":4}},{"value":"/ // Check the result against the built in `.sum_axis()` along axis 1.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/zip/mod.rs","byte_start":285002,"byte_end":285074,"line_start":176,"line_end":176,"column_start":1,"column_end":73}},{"value":"/ assert_eq!(totals, a.sum_axis(Axis(1)));","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/zip/mod.rs","byte_start":285075,"byte_end":285119,"line_start":177,"line_end":177,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/zip/mod.rs","byte_start":285120,"byte_end":285123,"line_start":178,"line_end":178,"column_start":1,"column_end":4}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/zip/mod.rs","byte_start":285124,"byte_end":285127,"line_start":179,"line_end":179,"column_start":1,"column_end":4}},{"value":"/ // Example 3: Recreate Example 2 using map_collect to make a new array","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/zip/mod.rs","byte_start":285128,"byte_end":285202,"line_start":180,"line_end":180,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/zip/mod.rs","byte_start":285203,"byte_end":285206,"line_start":181,"line_end":181,"column_start":1,"column_end":4}},{"value":"/ let mut totals2 = Zip::from(a.rows()).map_collect(|row| row.sum());","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/zip/mod.rs","byte_start":285207,"byte_end":285278,"line_start":182,"line_end":182,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/zip/mod.rs","byte_start":285279,"byte_end":285282,"line_start":183,"line_end":183,"column_start":1,"column_end":4}},{"value":"/ // Check the result against the previous example.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/zip/mod.rs","byte_start":285283,"byte_end":285336,"line_start":184,"line_end":184,"column_start":1,"column_end":54}},{"value":"/ assert_eq!(totals, totals2);","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/zip/mod.rs","byte_start":285337,"byte_end":285369,"line_start":185,"line_end":185,"column_start":1,"column_end":33}},{"value":"/ ```","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/zip/mod.rs","byte_start":285370,"byte_end":285377,"line_start":186,"line_end":186,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":2128},"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/zip/mod.rs","byte_start":285933,"byte_end":285937,"line_start":207,"line_end":207,"column_start":12,"column_end":16},"name":"from","qualname":"<Zip<(P,), D>>::from","value":"pub fn from<IP>(IP) -> Self where IP: IntoNdProducer<Dim = D, Output = D, Item\n= D>","parent":null,"children":[],"decl_id":null,"docs":" Create a new `Zip` from the input array or other producer `p`.","sig":null,"attributes":[{"value":"/ Create a new `Zip` from the input array or other producer `p`.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/zip/mod.rs","byte_start":285714,"byte_end":285780,"line_start":203,"line_end":203,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/zip/mod.rs","byte_start":285785,"byte_end":285788,"line_start":204,"line_end":204,"column_start":5,"column_end":8}},{"value":"/ The Zip will take the exact dimension of `p` and all inputs","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/zip/mod.rs","byte_start":285793,"byte_end":285856,"line_start":205,"line_end":205,"column_start":5,"column_end":68}},{"value":"/ must have the same dimensions (or be broadcast to them).","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/zip/mod.rs","byte_start":285861,"byte_end":285921,"line_start":206,"line_end":206,"column_start":5,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":2133},"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/zip/mod.rs","byte_start":286676,"byte_end":286683,"line_start":233,"line_end":233,"column_start":12,"column_end":19},"name":"indexed","qualname":"<Zip<(Indices<D>, P), D>>::indexed","value":"pub fn indexed<IP>(IP) -> Self where IP: IntoNdProducer<Dim = D, Output = D,\nItem = D>","parent":null,"children":[],"decl_id":null,"docs":" Create a new `Zip` with an index producer and the producer `p`.","sig":null,"attributes":[{"value":"/ Create a new `Zip` with an index producer and the producer `p`.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/zip/mod.rs","byte_start":286406,"byte_end":286473,"line_start":227,"line_end":227,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/zip/mod.rs","byte_start":286478,"byte_end":286481,"line_start":228,"line_end":228,"column_start":5,"column_end":8}},{"value":"/ The Zip will take the exact dimension of `p` and all inputs","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/zip/mod.rs","byte_start":286486,"byte_end":286549,"line_start":229,"line_end":229,"column_start":5,"column_end":68}},{"value":"/ must have the same dimensions (or be broadcast to them).","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/zip/mod.rs","byte_start":286554,"byte_end":286614,"line_start":230,"line_end":230,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/zip/mod.rs","byte_start":286619,"byte_end":286622,"line_start":231,"line_end":231,"column_start":5,"column_end":8}},{"value":"/ *Note:* Indexed zip has overhead.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/zip/mod.rs","byte_start":286627,"byte_end":286664,"line_start":232,"line_end":232,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":2140},"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/zip/mod.rs","byte_start":287326,"byte_end":287330,"line_start":260,"line_end":260,"column_start":12,"column_end":16},"name":"size","qualname":"<Zip<Parts, D>>::size","value":"pub fn size(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Return a the number of element tuples in the Zip\n","sig":null,"attributes":[{"value":"/ Return a the number of element tuples in the Zip","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/zip/mod.rs","byte_start":287262,"byte_end":287314,"line_start":259,"line_end":259,"column_start":5,"column_end":57}}]},{"kind":"Type","id":{"krate":0,"index":2168},"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/zip/mod.rs","byte_start":293237,"byte_end":293241,"line_start":446,"line_end":446,"column_start":10,"column_end":14},"name":"Args","qualname":"::zip::OffsetTuple::Args","value":"type Args;","parent":{"krate":0,"index":2167},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5344},"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/zip/mod.rs","byte_start":310087,"byte_end":310095,"line_start":879,"line_end":879,"column_start":5,"column_end":13},"name":"Continue","qualname":"::zip::FoldWhile::Continue","value":"FoldWhile::Continue(T)","parent":{"krate":0,"index":5342},"children":[],"decl_id":null,"docs":" Continue folding with this value\n","sig":null,"attributes":[{"value":"/ Continue folding with this value","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/zip/mod.rs","byte_start":310046,"byte_end":310082,"line_start":878,"line_end":878,"column_start":5,"column_end":41}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5347},"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/zip/mod.rs","byte_start":310156,"byte_end":310160,"line_start":881,"line_end":881,"column_start":5,"column_end":9},"name":"Done","qualname":"::zip::FoldWhile::Done","value":"FoldWhile::Done(T)","parent":{"krate":0,"index":5342},"children":[],"decl_id":null,"docs":" Fold is complete and will return this value\n","sig":null,"attributes":[{"value":"/ Fold is complete and will return this value","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/zip/mod.rs","byte_start":310104,"byte_end":310151,"line_start":880,"line_end":880,"column_start":5,"column_end":52}}]},{"kind":"Enum","id":{"krate":0,"index":5342},"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/zip/mod.rs","byte_start":310027,"byte_end":310036,"line_start":877,"line_end":877,"column_start":10,"column_end":19},"name":"FoldWhile","qualname":"::zip::FoldWhile","value":"pub enum FoldWhile<T> {\n\n    /// Continue folding with this value\n    Continue(T),\n\n    /// Fold is complete and will return this value\n    Done(T),\n}","parent":null,"children":[{"krate":0,"index":5344},{"krate":0,"index":5347}],"decl_id":null,"docs":" Value controlling the execution of `.fold_while` on `Zip`.\n","sig":null,"attributes":[{"value":"/ Value controlling the execution of `.fold_while` on `Zip`.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/zip/mod.rs","byte_start":309925,"byte_end":309987,"line_start":875,"line_end":875,"column_start":1,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":2179},"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/zip/mod.rs","byte_start":310233,"byte_end":310243,"line_start":886,"line_end":886,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<FoldWhile<T>>::into_inner","value":"pub fn into_inner(Self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Return the inner value\n","sig":null,"attributes":[{"value":"/ Return the inner value","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/zip/mod.rs","byte_start":310195,"byte_end":310221,"line_start":885,"line_end":885,"column_start":5,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":2180},"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/zip/mod.rs","byte_start":310425,"byte_end":310432,"line_start":893,"line_end":893,"column_start":12,"column_end":19},"name":"is_done","qualname":"<FoldWhile<T>>::is_done","value":"pub fn is_done(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Return true if it is `Done`, false if `Continue`\n","sig":null,"attributes":[{"value":"/ Return true if it is `Done`, false if `Continue`","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/zip/mod.rs","byte_start":310361,"byte_end":310413,"line_start":892,"line_end":892,"column_start":5,"column_end":57}}]},{"kind":"Struct","id":{"krate":0,"index":5358},"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/dimension/axes.rs","byte_start":365261,"byte_end":365265,"line_start":41,"line_end":41,"column_start":12,"column_end":16},"name":"Axes","qualname":"::dimension::axes::Axes","value":"Axes {  }","parent":null,"children":[{"krate":0,"index":5361},{"krate":0,"index":5362},{"krate":0,"index":5363},{"krate":0,"index":5364}],"decl_id":null,"docs":" An iterator over the length and stride of each axis of an array.","sig":null,"attributes":[{"value":"/ An iterator over the length and stride of each axis of an array.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/dimension/axes.rs","byte_start":364588,"byte_end":364656,"line_start":16,"line_end":16,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/dimension/axes.rs","byte_start":364657,"byte_end":364660,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ This iterator is created from the array method","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/dimension/axes.rs","byte_start":364661,"byte_end":364711,"line_start":18,"line_end":18,"column_start":1,"column_end":51}},{"value":"/ [`.axes()`](crate::ArrayBase::axes).","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/dimension/axes.rs","byte_start":364712,"byte_end":364752,"line_start":19,"line_end":19,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/dimension/axes.rs","byte_start":364753,"byte_end":364756,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ Iterator element type is [`AxisDescription`].","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/dimension/axes.rs","byte_start":364757,"byte_end":364806,"line_start":21,"line_end":21,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/dimension/axes.rs","byte_start":364807,"byte_end":364810,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/dimension/axes.rs","byte_start":364811,"byte_end":364825,"line_start":23,"line_end":23,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/dimension/axes.rs","byte_start":364826,"byte_end":364829,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/dimension/axes.rs","byte_start":364830,"byte_end":364837,"line_start":25,"line_end":25,"column_start":1,"column_end":8}},{"value":"/ use ndarray::Array3;","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/dimension/axes.rs","byte_start":364838,"byte_end":364862,"line_start":26,"line_end":26,"column_start":1,"column_end":25}},{"value":"/ use ndarray::Axis;","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/dimension/axes.rs","byte_start":364863,"byte_end":364885,"line_start":27,"line_end":27,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/dimension/axes.rs","byte_start":364886,"byte_end":364889,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ let a = Array3::<f32>::zeros((3, 5, 4));","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/dimension/axes.rs","byte_start":364890,"byte_end":364934,"line_start":29,"line_end":29,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/dimension/axes.rs","byte_start":364935,"byte_end":364938,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ // find the largest axis in the array","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/dimension/axes.rs","byte_start":364939,"byte_end":364980,"line_start":31,"line_end":31,"column_start":1,"column_end":42}},{"value":"/ // check the axis index and its length","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/dimension/axes.rs","byte_start":364981,"byte_end":365023,"line_start":32,"line_end":32,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/dimension/axes.rs","byte_start":365024,"byte_end":365027,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"/ let largest_axis = a.axes()","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/dimension/axes.rs","byte_start":365028,"byte_end":365059,"line_start":34,"line_end":34,"column_start":1,"column_end":32}},{"value":"/                     .max_by_key(|ax| ax.len)","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/dimension/axes.rs","byte_start":365060,"byte_end":365108,"line_start":35,"line_end":35,"column_start":1,"column_end":49}},{"value":"/                     .unwrap();","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/dimension/axes.rs","byte_start":365109,"byte_end":365143,"line_start":36,"line_end":36,"column_start":1,"column_end":35}},{"value":"/ assert_eq!(largest_axis.axis, Axis(1));","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/dimension/axes.rs","byte_start":365144,"byte_end":365187,"line_start":37,"line_end":37,"column_start":1,"column_end":44}},{"value":"/ assert_eq!(largest_axis.len, 5);","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/dimension/axes.rs","byte_start":365188,"byte_end":365224,"line_start":38,"line_end":38,"column_start":1,"column_end":37}},{"value":"/ ```","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/dimension/axes.rs","byte_start":365225,"byte_end":365232,"line_start":39,"line_end":39,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":5369},"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/dimension/axes.rs","byte_start":365432,"byte_end":365447,"line_start":50,"line_end":50,"column_start":12,"column_end":27},"name":"AxisDescription","qualname":"::dimension::axes::AxisDescription","value":"AxisDescription { axis, len, stride }","parent":null,"children":[{"krate":0,"index":5370},{"krate":0,"index":5371},{"krate":0,"index":5372}],"decl_id":null,"docs":" Description of the axis, its length and its stride.\n","sig":null,"attributes":[{"value":"/ Description of the axis, its length and its stride.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/dimension/axes.rs","byte_start":365348,"byte_end":365403,"line_start":48,"line_end":48,"column_start":1,"column_end":56}}]},{"kind":"Field","id":{"krate":0,"index":5370},"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/dimension/axes.rs","byte_start":365458,"byte_end":365462,"line_start":51,"line_end":51,"column_start":9,"column_end":13},"name":"axis","qualname":"::dimension::axes::AxisDescription::axis","value":"dimension::axis::Axis","parent":{"krate":0,"index":5369},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":5371},"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/dimension/axes.rs","byte_start":365478,"byte_end":365481,"line_start":52,"line_end":52,"column_start":9,"column_end":12},"name":"len","qualname":"::dimension::axes::AxisDescription::len","value":"usize","parent":{"krate":0,"index":5369},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":5372},"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/dimension/axes.rs","byte_start":365498,"byte_end":365504,"line_start":53,"line_end":53,"column_start":9,"column_end":15},"name":"stride","qualname":"::dimension::axes::AxisDescription::stride","value":"isize","parent":{"krate":0,"index":5369},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2222},"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/dimension/axes.rs","byte_start":365851,"byte_end":365855,"line_start":65,"line_end":65,"column_start":12,"column_end":16},"name":"axis","qualname":"<AxisDescription>::axis","value":"pub fn axis(Self) -> Axis","parent":null,"children":[],"decl_id":null,"docs":" Return axis\n","sig":null,"attributes":[{"value":"/ Return axis","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/dimension/axes.rs","byte_start":365732,"byte_end":365747,"line_start":62,"line_end":62,"column_start":5,"column_end":20}},{"value":"deprecated(note = \"Use .axis field instead\", since = \"0.15.0\")","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/dimension/axes.rs","byte_start":365752,"byte_end":365817,"line_start":63,"line_end":63,"column_start":5,"column_end":70}},{"value":"inline(always)","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/dimension/axes.rs","byte_start":365822,"byte_end":365839,"line_start":64,"line_end":64,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":2223},"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/dimension/axes.rs","byte_start":366020,"byte_end":366023,"line_start":71,"line_end":71,"column_start":12,"column_end":15},"name":"len","qualname":"<AxisDescription>::len","value":"pub fn len(Self) -> Ix","parent":null,"children":[],"decl_id":null,"docs":" Return length\n","sig":null,"attributes":[{"value":"/ Return length","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/dimension/axes.rs","byte_start":365900,"byte_end":365917,"line_start":68,"line_end":68,"column_start":5,"column_end":22}},{"value":"deprecated(note = \"Use .len field instead\", since = \"0.15.0\")","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/dimension/axes.rs","byte_start":365922,"byte_end":365986,"line_start":69,"line_end":69,"column_start":5,"column_end":69}},{"value":"inline(always)","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/dimension/axes.rs","byte_start":365991,"byte_end":366008,"line_start":70,"line_end":70,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":2224},"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/dimension/axes.rs","byte_start":366188,"byte_end":366194,"line_start":77,"line_end":77,"column_start":12,"column_end":18},"name":"stride","qualname":"<AxisDescription>::stride","value":"pub fn stride(Self) -> Ixs","parent":null,"children":[],"decl_id":null,"docs":" Return stride\n","sig":null,"attributes":[{"value":"/ Return stride","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/dimension/axes.rs","byte_start":366065,"byte_end":366082,"line_start":74,"line_end":74,"column_start":5,"column_end":22}},{"value":"deprecated(note = \"Use .stride field instead\", since = \"0.15.0\")","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/dimension/axes.rs","byte_start":366087,"byte_end":366154,"line_start":75,"line_end":75,"column_start":5,"column_end":72}},{"value":"inline(always)","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/dimension/axes.rs","byte_start":366159,"byte_end":366176,"line_start":76,"line_end":76,"column_start":5,"column_end":22}}]},{"kind":"Struct","id":{"krate":0,"index":5385},"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/dimension/axis.rs","byte_start":369398,"byte_end":369402,"line_start":27,"line_end":27,"column_start":12,"column_end":16},"name":"Axis","qualname":"::dimension::axis::Axis","value":"","parent":null,"children":[],"decl_id":null,"docs":" An axis index.","sig":null,"attributes":[{"value":"/ An axis index.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/dimension/axis.rs","byte_start":368504,"byte_end":368522,"line_start":9,"line_end":9,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/dimension/axis.rs","byte_start":368523,"byte_end":368526,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ An axis one of an array’s “dimensions”; an *n*-dimensional array has *n*","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/dimension/axis.rs","byte_start":368527,"byte_end":368609,"line_start":11,"line_end":11,"column_start":1,"column_end":77}},{"value":"/ axes.  Axis *0* is the array’s outermost axis and *n*-1 is the innermost.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/dimension/axis.rs","byte_start":368610,"byte_end":368689,"line_start":12,"line_end":12,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/dimension/axis.rs","byte_start":368690,"byte_end":368693,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ All array axis arguments use this type to make the code easier to write","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/dimension/axis.rs","byte_start":368694,"byte_end":368769,"line_start":14,"line_end":14,"column_start":1,"column_end":76}},{"value":"/ correctly and easier to understand.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/dimension/axis.rs","byte_start":368770,"byte_end":368809,"line_start":15,"line_end":15,"column_start":1,"column_end":40}},{"value":"/ ","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/dimension/axis.rs","byte_start":368810,"byte_end":368814,"line_start":16,"line_end":16,"column_start":1,"column_end":5}},{"value":"/ For example: in a method like `index_axis(axis, index)` the code becomes","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/dimension/axis.rs","byte_start":368815,"byte_end":368891,"line_start":17,"line_end":17,"column_start":1,"column_end":77}},{"value":"/ self-explanatory when it's called like `.index_axis(Axis(1), i)`; it's","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/dimension/axis.rs","byte_start":368892,"byte_end":368966,"line_start":18,"line_end":18,"column_start":1,"column_end":75}},{"value":"/ evident which integer is the axis number and which is the index.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/dimension/axis.rs","byte_start":368967,"byte_end":369035,"line_start":19,"line_end":19,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/dimension/axis.rs","byte_start":369036,"byte_end":369039,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ Note: This type does **not** implement From/Into usize and similar trait","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/dimension/axis.rs","byte_start":369040,"byte_end":369116,"line_start":21,"line_end":21,"column_start":1,"column_end":77}},{"value":"/ based conversions, because we want to preserve code readability and quality.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/dimension/axis.rs","byte_start":369117,"byte_end":369197,"line_start":22,"line_end":22,"column_start":1,"column_end":81}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/dimension/axis.rs","byte_start":369198,"byte_end":369201,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ `Axis(1)` in itself is a very clear code style and the style that should be","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/dimension/axis.rs","byte_start":369202,"byte_end":369281,"line_start":24,"line_end":24,"column_start":1,"column_end":80}},{"value":"/ avoided is code like `1.into()`.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/dimension/axis.rs","byte_start":369282,"byte_end":369318,"line_start":25,"line_end":25,"column_start":1,"column_end":37}}]},{"kind":"Field","id":{"krate":0,"index":5387},"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/dimension/axis.rs","byte_start":369403,"byte_end":369412,"line_start":27,"line_end":27,"column_start":17,"column_end":26},"name":"0","qualname":"::dimension::axis::Axis::0","value":"usize","parent":{"krate":0,"index":5385},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2249},"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/dimension/axis.rs","byte_start":369499,"byte_end":369504,"line_start":32,"line_end":32,"column_start":12,"column_end":17},"name":"index","qualname":"<Axis>::index","value":"pub fn index(Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Return the index of the axis.\n","sig":null,"attributes":[{"value":"/ Return the index of the axis.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/dimension/axis.rs","byte_start":369432,"byte_end":369465,"line_start":30,"line_end":30,"column_start":5,"column_end":38}},{"value":"inline(always)","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/dimension/axis.rs","byte_start":369470,"byte_end":369487,"line_start":31,"line_end":31,"column_start":5,"column_end":22}}]},{"kind":"Trait","id":{"krate":0,"index":2266},"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/dimension/broadcast.rs","byte_start":370782,"byte_end":370788,"line_start":37,"line_end":37,"column_start":11,"column_end":17},"name":"DimMax","qualname":"::dimension::broadcast::DimMax","value":"DimMax<Other: Dimension>","parent":null,"children":[{"krate":0,"index":2268}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":2268},"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/dimension/broadcast.rs","byte_start":370875,"byte_end":370881,"line_start":39,"line_end":39,"column_start":10,"column_end":16},"name":"Output","qualname":"::dimension::broadcast::DimMax::Output","value":"type Output: Dimension;","parent":{"krate":0,"index":2266},"children":[],"decl_id":null,"docs":" The resulting dimension type after broadcasting.\n","sig":null,"attributes":[{"value":"/ The resulting dimension type after broadcasting.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/dimension/broadcast.rs","byte_start":370813,"byte_end":370865,"line_start":38,"line_end":38,"column_start":5,"column_end":57}}]},{"kind":"Trait","id":{"krate":0,"index":2288},"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/dimension/conversion.rs","byte_start":375820,"byte_end":375833,"line_start":42,"line_end":42,"column_start":11,"column_end":24},"name":"IntoDimension","qualname":"::dimension::conversion::IntoDimension","value":"IntoDimension","parent":null,"children":[{"krate":0,"index":2289},{"krate":0,"index":2290}],"decl_id":null,"docs":" Argument conversion a dimension.\n","sig":null,"attributes":[{"value":"/ Argument conversion a dimension.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/dimension/conversion.rs","byte_start":375773,"byte_end":375809,"line_start":41,"line_end":41,"column_start":1,"column_end":37}}]},{"kind":"Type","id":{"krate":0,"index":2289},"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/dimension/conversion.rs","byte_start":375845,"byte_end":375848,"line_start":43,"line_end":43,"column_start":10,"column_end":13},"name":"Dim","qualname":"::dimension::conversion::IntoDimension::Dim","value":"type Dim: Dimension;","parent":{"krate":0,"index":2288},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2290},"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/dimension/conversion.rs","byte_start":375868,"byte_end":375882,"line_start":44,"line_end":44,"column_start":8,"column_end":22},"name":"into_dimension","qualname":"::dimension::conversion::IntoDimension::into_dimension","value":"pub fn into_dimension(Self) -> Self::Dim","parent":{"krate":0,"index":2288},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":2305},"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/dimension/conversion.rs","byte_start":376546,"byte_end":376548,"line_start":83,"line_end":83,"column_start":10,"column_end":12},"name":"To","qualname":"::dimension::conversion::Convert::To","value":"type To;","parent":{"krate":0,"index":2304},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":5698},"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/dimension/dim.rs","byte_start":379749,"byte_end":379752,"line_start":39,"line_end":39,"column_start":12,"column_end":15},"name":"Dim","qualname":"::dimension::dim::Dim","value":"Dim {  }","parent":null,"children":[{"krate":0,"index":5700}],"decl_id":null,"docs":" Dimension description.","sig":null,"attributes":[{"value":"/ Dimension description.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/dimension/dim.rs","byte_start":379058,"byte_end":379084,"line_start":16,"line_end":16,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/dimension/dim.rs","byte_start":379085,"byte_end":379088,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ `Dim` describes the number of axes and the length of each axis","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/dimension/dim.rs","byte_start":379089,"byte_end":379155,"line_start":18,"line_end":18,"column_start":1,"column_end":67}},{"value":"/ in an array. It is also used as an index type.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/dimension/dim.rs","byte_start":379156,"byte_end":379206,"line_start":19,"line_end":19,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/dimension/dim.rs","byte_start":379207,"byte_end":379210,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ See also the [`Dimension` trait](trait.Dimension.html) for its methods and","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/dimension/dim.rs","byte_start":379211,"byte_end":379289,"line_start":21,"line_end":21,"column_start":1,"column_end":79}},{"value":"/ operations.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/dimension/dim.rs","byte_start":379290,"byte_end":379305,"line_start":22,"line_end":22,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/dimension/dim.rs","byte_start":379306,"byte_end":379309,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/dimension/dim.rs","byte_start":379310,"byte_end":379324,"line_start":24,"line_end":24,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/dimension/dim.rs","byte_start":379325,"byte_end":379328,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ To create an array with a particular dimension, you'd just pass","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/dimension/dim.rs","byte_start":379329,"byte_end":379396,"line_start":26,"line_end":26,"column_start":1,"column_end":68}},{"value":"/ a tuple (in this example (3, 2) is used), which is converted to","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/dimension/dim.rs","byte_start":379397,"byte_end":379464,"line_start":27,"line_end":27,"column_start":1,"column_end":68}},{"value":"/ `Dim` by the array constructor.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/dimension/dim.rs","byte_start":379465,"byte_end":379500,"line_start":28,"line_end":28,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/dimension/dim.rs","byte_start":379501,"byte_end":379504,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/dimension/dim.rs","byte_start":379505,"byte_end":379512,"line_start":30,"line_end":30,"column_start":1,"column_end":8}},{"value":"/ use ndarray::Array2;","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/dimension/dim.rs","byte_start":379513,"byte_end":379537,"line_start":31,"line_end":31,"column_start":1,"column_end":25}},{"value":"/ use ndarray::Dim;","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/dimension/dim.rs","byte_start":379538,"byte_end":379559,"line_start":32,"line_end":32,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/dimension/dim.rs","byte_start":379560,"byte_end":379563,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"/ let mut array = Array2::zeros((3, 2));","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/dimension/dim.rs","byte_start":379564,"byte_end":379606,"line_start":34,"line_end":34,"column_start":1,"column_end":43}},{"value":"/ array[[0, 0]] = 1.;","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/dimension/dim.rs","byte_start":379607,"byte_end":379630,"line_start":35,"line_end":35,"column_start":1,"column_end":24}},{"value":"/ assert_eq!(array.raw_dim(), Dim([3, 2]));","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/dimension/dim.rs","byte_start":379631,"byte_end":379676,"line_start":36,"line_end":36,"column_start":1,"column_end":46}},{"value":"/ ```","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/dimension/dim.rs","byte_start":379677,"byte_end":379684,"line_start":37,"line_end":37,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":2324},"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/dimension/dim.rs","byte_start":380172,"byte_end":380175,"line_start":60,"line_end":60,"column_start":8,"column_end":11},"name":"Dim","qualname":"::dimension::dim::Dim","value":"pub fn Dim<T>(T) -> T::Dim where T: IntoDimension","parent":null,"children":[],"decl_id":null,"docs":" Create a new dimension value.\n","sig":null,"attributes":[{"value":"/ Create a new dimension value.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/dimension/dim.rs","byte_start":380106,"byte_end":380139,"line_start":58,"line_end":58,"column_start":1,"column_end":34}},{"value":"allow(non_snake_case)","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/dimension/dim.rs","byte_start":380140,"byte_end":380164,"line_start":59,"line_end":59,"column_start":1,"column_end":25}}]},{"kind":"Trait","id":{"krate":0,"index":2388},"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/dimension/dimension_trait.rs","byte_start":384299,"byte_end":384308,"line_start":31,"line_end":31,"column_start":11,"column_end":20},"name":"Dimension","qualname":"::dimension::dimension_trait::Dimension","value":"Dimension: Clone + Eq + Debug + Send + Sync + Default + IndexMut<usize, Output = usize> +\nAdd<Self, Output = Self> + AddAssign + for<'x> AddAssign<&'x Self> + Sub<Self,\nOutput = Self> + SubAssign + for<'x> SubAssign<&'x Self> + Mul<usize, Output =\nSelf> + Mul<Self, Output = Self> + MulAssign + for<'x> MulAssign<&'x Self> +\nMulAssign<usize> + DimMax<Ix0, Output = Self> + DimMax<Self, Output = Self> +\nDimMax<IxDyn, Output = IxDyn> + DimMax<<Self as Dimension>::Smaller, Output =\nSelf> + DimMax<<Self as Dimension>::Larger, Output =\n<Self as Dimension>::Larger> + DimAdd<Self> +\nDimAdd<<Self as Dimension>::Smaller> + DimAdd<<Self as Dimension>::Larger> +\nDimAdd<Ix0, Output = Self> + DimAdd<Ix1, Output =\n<Self as Dimension>::Larger> + DimAdd<IxDyn, Output = IxDyn>","parent":null,"children":[{"krate":0,"index":2392},{"krate":0,"index":2393},{"krate":0,"index":2394},{"krate":0,"index":2395},{"krate":0,"index":2396},{"krate":0,"index":2397},{"krate":0,"index":2398},{"krate":0,"index":2400},{"krate":0,"index":2403},{"krate":0,"index":2404},{"krate":0,"index":2405},{"krate":0,"index":2406},{"krate":0,"index":2407},{"krate":0,"index":2408},{"krate":0,"index":2410},{"krate":0,"index":2412},{"krate":0,"index":2413},{"krate":0,"index":2414},{"krate":0,"index":2415},{"krate":0,"index":2416},{"krate":0,"index":2419},{"krate":0,"index":2420},{"krate":0,"index":2421},{"krate":0,"index":2422},{"krate":0,"index":2423},{"krate":0,"index":2424},{"krate":0,"index":2426},{"krate":0,"index":2429},{"krate":0,"index":2433},{"krate":0,"index":2434},{"krate":0,"index":2436},{"krate":0,"index":2437},{"krate":0,"index":5779}],"decl_id":null,"docs":" Array shape and index trait.","sig":null,"attributes":[{"value":"/ Array shape and index trait.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/dimension/dimension_trait.rs","byte_start":384074,"byte_end":384106,"line_start":25,"line_end":25,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/dimension/dimension_trait.rs","byte_start":384107,"byte_end":384110,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ This trait defines a number of methods and operations that can be used on","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/dimension/dimension_trait.rs","byte_start":384111,"byte_end":384188,"line_start":27,"line_end":27,"column_start":1,"column_end":78}},{"value":"/ dimensions and indices.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/dimension/dimension_trait.rs","byte_start":384189,"byte_end":384216,"line_start":28,"line_end":28,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/dimension/dimension_trait.rs","byte_start":384217,"byte_end":384220,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ **Note:** *This trait can not be implemented outside the crate*","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/dimension/dimension_trait.rs","byte_start":384221,"byte_end":384288,"line_start":30,"line_end":30,"column_start":1,"column_end":68}}]},{"kind":"Const","id":{"krate":0,"index":2392},"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/dimension/dimension_trait.rs","byte_start":385380,"byte_end":385384,"line_start":65,"line_end":65,"column_start":11,"column_end":15},"name":"NDIM","qualname":"::dimension::dimension_trait::Dimension::NDIM","value":"Option<usize>","parent":{"krate":0,"index":2388},"children":[],"decl_id":null,"docs":" For fixed-size dimension representations (e.g. `Ix2`), this should be\n `Some(ndim)`, and for variable-size dimension representations (e.g.\n `IxDyn`), this should be `None`.\n","sig":null,"attributes":[{"value":"/ For fixed-size dimension representations (e.g. `Ix2`), this should be","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/dimension/dimension_trait.rs","byte_start":385179,"byte_end":385252,"line_start":62,"line_end":62,"column_start":5,"column_end":78}},{"value":"/ `Some(ndim)`, and for variable-size dimension representations (e.g.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/dimension/dimension_trait.rs","byte_start":385257,"byte_end":385328,"line_start":63,"line_end":63,"column_start":5,"column_end":76}},{"value":"/ `IxDyn`), this should be `None`.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/dimension/dimension_trait.rs","byte_start":385333,"byte_end":385369,"line_start":64,"line_end":64,"column_start":5,"column_end":41}}]},{"kind":"Type","id":{"krate":0,"index":2393},"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/dimension/dimension_trait.rs","byte_start":385602,"byte_end":385609,"line_start":72,"line_end":72,"column_start":10,"column_end":17},"name":"Pattern","qualname":"::dimension::dimension_trait::Dimension::Pattern","value":"type Pattern: IntoDimension<Dim = Self> + Clone + Debug + PartialEq + Eq + Default;","parent":{"krate":0,"index":2388},"children":[],"decl_id":null,"docs":" Pattern matching friendly form of the dimension value.","sig":null,"attributes":[{"value":"/ Pattern matching friendly form of the dimension value.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/dimension/dimension_trait.rs","byte_start":385405,"byte_end":385463,"line_start":66,"line_end":66,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/dimension/dimension_trait.rs","byte_start":385468,"byte_end":385471,"line_start":67,"line_end":67,"column_start":5,"column_end":8}},{"value":"/ - For `Ix1`: `usize`,","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/dimension/dimension_trait.rs","byte_start":385476,"byte_end":385501,"line_start":68,"line_end":68,"column_start":5,"column_end":30}},{"value":"/ - For `Ix2`: `(usize, usize)`","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/dimension/dimension_trait.rs","byte_start":385506,"byte_end":385539,"line_start":69,"line_end":69,"column_start":5,"column_end":38}},{"value":"/ - and so on..","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/dimension/dimension_trait.rs","byte_start":385544,"byte_end":385561,"line_start":70,"line_end":70,"column_start":5,"column_end":22}},{"value":"/ - For `IxDyn`: `IxDyn`","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/dimension/dimension_trait.rs","byte_start":385566,"byte_end":385592,"line_start":71,"line_end":71,"column_start":5,"column_end":31}}]},{"kind":"Type","id":{"krate":0,"index":2394},"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/dimension/dimension_trait.rs","byte_start":385737,"byte_end":385744,"line_start":74,"line_end":74,"column_start":10,"column_end":17},"name":"Smaller","qualname":"::dimension::dimension_trait::Dimension::Smaller","value":"type Smaller: Dimension;","parent":{"krate":0,"index":2388},"children":[],"decl_id":null,"docs":" Next smaller dimension (if applicable)\n","sig":null,"attributes":[{"value":"/ Next smaller dimension (if applicable)","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/dimension/dimension_trait.rs","byte_start":385685,"byte_end":385727,"line_start":73,"line_end":73,"column_start":5,"column_end":47}}]},{"kind":"Type","id":{"krate":0,"index":2395},"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/dimension/dimension_trait.rs","byte_start":385796,"byte_end":385802,"line_start":76,"line_end":76,"column_start":10,"column_end":16},"name":"Larger","qualname":"::dimension::dimension_trait::Dimension::Larger","value":"type Larger: Dimension + RemoveAxis;","parent":{"krate":0,"index":2388},"children":[],"decl_id":null,"docs":" Next larger dimension\n","sig":null,"attributes":[{"value":"/ Next larger dimension","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/dimension/dimension_trait.rs","byte_start":385761,"byte_end":385786,"line_start":75,"line_end":75,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":2396},"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/dimension/dimension_trait.rs","byte_start":385895,"byte_end":385899,"line_start":79,"line_end":79,"column_start":8,"column_end":12},"name":"ndim","qualname":"::dimension::dimension_trait::Dimension::ndim","value":"pub fn ndim(&Self) -> usize","parent":{"krate":0,"index":2388},"children":[],"decl_id":null,"docs":" Returns the number of dimensions (number of axes).\n","sig":null,"attributes":[{"value":"/ Returns the number of dimensions (number of axes).","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/dimension/dimension_trait.rs","byte_start":385833,"byte_end":385887,"line_start":78,"line_end":78,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":2397},"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/dimension/dimension_trait.rs","byte_start":385995,"byte_end":386007,"line_start":82,"line_end":82,"column_start":8,"column_end":20},"name":"into_pattern","qualname":"::dimension::dimension_trait::Dimension::into_pattern","value":"pub fn into_pattern(Self) -> Self::Pattern","parent":{"krate":0,"index":2388},"children":[],"decl_id":null,"docs":" Convert the dimension into a pattern matching friendly value.\n","sig":null,"attributes":[{"value":"/ Convert the dimension into a pattern matching friendly value.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/dimension/dimension_trait.rs","byte_start":385922,"byte_end":385987,"line_start":81,"line_end":81,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":2398},"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/dimension/dimension_trait.rs","byte_start":386103,"byte_end":386107,"line_start":85,"line_end":85,"column_start":8,"column_end":12},"name":"size","qualname":"::dimension::dimension_trait::Dimension::size","value":"pub fn size(&Self) -> usize","parent":{"krate":0,"index":2388},"children":[],"decl_id":null,"docs":" Compute the size of the dimension (number of elements)\n","sig":null,"attributes":[{"value":"/ Compute the size of the dimension (number of elements)","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/dimension/dimension_trait.rs","byte_start":386037,"byte_end":386095,"line_start":84,"line_end":84,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":2400},"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/dimension/dimension_trait.rs","byte_start":386254,"byte_end":386266,"line_start":90,"line_end":90,"column_start":8,"column_end":20},"name":"size_checked","qualname":"::dimension::dimension_trait::Dimension::size_checked","value":"pub fn size_checked(&Self) -> Option<usize>","parent":{"krate":0,"index":2388},"children":[],"decl_id":null,"docs":" Compute the size while checking for overflow.\n","sig":null,"attributes":[{"value":"/ Compute the size while checking for overflow.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/dimension/dimension_trait.rs","byte_start":386197,"byte_end":386246,"line_start":89,"line_end":89,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":2403},"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/dimension/dimension_trait.rs","byte_start":386438,"byte_end":386443,"line_start":97,"line_end":97,"column_start":8,"column_end":13},"name":"slice","qualname":"::dimension::dimension_trait::Dimension::slice","value":"pub fn slice(&Self) -> &[Ix]","parent":{"krate":0,"index":2388},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2404},"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/dimension/dimension_trait.rs","byte_start":386488,"byte_end":386497,"line_start":100,"line_end":100,"column_start":8,"column_end":17},"name":"slice_mut","qualname":"::dimension::dimension_trait::Dimension::slice_mut","value":"pub fn slice_mut(&mut Self) -> &mut [Ix]","parent":{"krate":0,"index":2388},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2405},"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/dimension/dimension_trait.rs","byte_start":386573,"byte_end":386586,"line_start":103,"line_end":103,"column_start":8,"column_end":21},"name":"as_array_view","qualname":"::dimension::dimension_trait::Dimension::as_array_view","value":"pub fn as_array_view(&Self) -> ArrayView1<, Ix>","parent":{"krate":0,"index":2388},"children":[],"decl_id":null,"docs":" Borrow as a read-only array view.\n","sig":null,"attributes":[{"value":"/ Borrow as a read-only array view.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/dimension/dimension_trait.rs","byte_start":386528,"byte_end":386565,"line_start":102,"line_end":102,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":2406},"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/dimension/dimension_trait.rs","byte_start":386714,"byte_end":386731,"line_start":108,"line_end":108,"column_start":8,"column_end":25},"name":"as_array_view_mut","qualname":"::dimension::dimension_trait::Dimension::as_array_view_mut","value":"pub fn as_array_view_mut(&mut Self) -> ArrayViewMut1<, Ix>","parent":{"krate":0,"index":2388},"children":[],"decl_id":null,"docs":" Borrow as a read-write array view.\n","sig":null,"attributes":[{"value":"/ Borrow as a read-write array view.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/dimension/dimension_trait.rs","byte_start":386668,"byte_end":386706,"line_start":107,"line_end":107,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":2407},"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/dimension/dimension_trait.rs","byte_start":386849,"byte_end":386854,"line_start":113,"line_end":113,"column_start":8,"column_end":13},"name":"equal","qualname":"::dimension::dimension_trait::Dimension::equal","value":"pub fn equal(&Self, &Self) -> bool","parent":{"krate":0,"index":2388},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2408},"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/dimension/dimension_trait.rs","byte_start":387173,"byte_end":387188,"line_start":122,"line_end":122,"column_start":8,"column_end":23},"name":"default_strides","qualname":"::dimension::dimension_trait::Dimension::default_strides","value":"pub fn default_strides(&Self) -> Self","parent":{"krate":0,"index":2388},"children":[],"decl_id":null,"docs":" Returns the strides for a standard layout array with the given shape.","sig":null,"attributes":[{"value":"/ Returns the strides for a standard layout array with the given shape.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/dimension/dimension_trait.rs","byte_start":386931,"byte_end":387004,"line_start":117,"line_end":117,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/dimension/dimension_trait.rs","byte_start":387009,"byte_end":387012,"line_start":118,"line_end":118,"column_start":5,"column_end":8}},{"value":"/ If the array is non-empty, the strides result in contiguous layout; if","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/dimension/dimension_trait.rs","byte_start":387017,"byte_end":387091,"line_start":119,"line_end":119,"column_start":5,"column_end":79}},{"value":"/ the array is empty, the strides are all zeros.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/dimension/dimension_trait.rs","byte_start":387096,"byte_end":387146,"line_start":120,"line_end":120,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":2410},"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/dimension/dimension_trait.rs","byte_start":388096,"byte_end":388111,"line_start":147,"line_end":147,"column_start":8,"column_end":23},"name":"fortran_strides","qualname":"::dimension::dimension_trait::Dimension::fortran_strides","value":"pub fn fortran_strides(&Self) -> Self","parent":{"krate":0,"index":2388},"children":[],"decl_id":null,"docs":" Returns the strides for a Fortran layout array with the given shape.","sig":null,"attributes":[{"value":"/ Returns the strides for a Fortran layout array with the given shape.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/dimension/dimension_trait.rs","byte_start":387855,"byte_end":387927,"line_start":142,"line_end":142,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/dimension/dimension_trait.rs","byte_start":387932,"byte_end":387935,"line_start":143,"line_end":143,"column_start":5,"column_end":8}},{"value":"/ If the array is non-empty, the strides result in contiguous layout; if","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/dimension/dimension_trait.rs","byte_start":387940,"byte_end":388014,"line_start":144,"line_end":144,"column_start":5,"column_end":79}},{"value":"/ the array is empty, the strides are all zeros.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/dimension/dimension_trait.rs","byte_start":388019,"byte_end":388069,"line_start":145,"line_end":145,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":2412},"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/dimension/dimension_trait.rs","byte_start":389026,"byte_end":389031,"line_start":173,"line_end":173,"column_start":8,"column_end":13},"name":"zeros","qualname":"::dimension::dimension_trait::Dimension::zeros","value":"pub fn zeros(usize) -> Self","parent":{"krate":0,"index":2388},"children":[],"decl_id":null,"docs":" Creates a dimension of all zeros with the specified ndim.","sig":null,"attributes":[{"value":"/ Creates a dimension of all zeros with the specified ndim.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/dimension/dimension_trait.rs","byte_start":388759,"byte_end":388820,"line_start":167,"line_end":167,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/dimension/dimension_trait.rs","byte_start":388825,"byte_end":388828,"line_start":168,"line_end":168,"column_start":5,"column_end":8}},{"value":"/ This method is useful for generalizing over fixed-size and","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/dimension/dimension_trait.rs","byte_start":388833,"byte_end":388895,"line_start":169,"line_end":169,"column_start":5,"column_end":67}},{"value":"/ variable-size dimension representations.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/dimension/dimension_trait.rs","byte_start":388900,"byte_end":388944,"line_start":170,"line_end":170,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/dimension/dimension_trait.rs","byte_start":388949,"byte_end":388952,"line_start":171,"line_end":171,"column_start":5,"column_end":8}},{"value":"/ **Panics** if `Self` has a fixed size that is not `ndim`.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/dimension/dimension_trait.rs","byte_start":388957,"byte_end":389018,"line_start":172,"line_end":172,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":2413},"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/dimension/dimension_trait.rs","byte_start":389095,"byte_end":389106,"line_start":177,"line_end":177,"column_start":8,"column_end":19},"name":"first_index","qualname":"::dimension::dimension_trait::Dimension::first_index","value":"pub fn first_index(&Self) -> Option<Self>","parent":{"krate":0,"index":2388},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/dimension/dimension_trait.rs","byte_start":389078,"byte_end":389087,"line_start":176,"line_end":176,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2414},"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/dimension/dimension_trait.rs","byte_start":389498,"byte_end":389506,"line_start":191,"line_end":191,"column_start":8,"column_end":16},"name":"next_for","qualname":"::dimension::dimension_trait::Dimension::next_for","value":"pub fn next_for(&Self, Self) -> Option<Self>","parent":{"krate":0,"index":2388},"children":[],"decl_id":null,"docs":" Iteration -- Use self as size, and return next index after `index`\n or None if there are no more.\n","sig":null,"attributes":[{"value":"/ Iteration -- Use self as size, and return next index after `index`","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/dimension/dimension_trait.rs","byte_start":389320,"byte_end":389390,"line_start":187,"line_end":187,"column_start":5,"column_end":75}},{"value":"/ or None if there are no more.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/dimension/dimension_trait.rs","byte_start":389395,"byte_end":389428,"line_start":188,"line_end":188,"column_start":5,"column_end":38}},{"value":"inline","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/dimension/dimension_trait.rs","byte_start":389481,"byte_end":389490,"line_start":190,"line_end":190,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2415},"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/dimension/dimension_trait.rs","byte_start":390135,"byte_end":390145,"line_start":216,"line_end":216,"column_start":8,"column_end":18},"name":"next_for_f","qualname":"::dimension::dimension_trait::Dimension::next_for_f","value":"pub fn next_for_f(&Self, &mut Self) -> bool","parent":{"krate":0,"index":2388},"children":[],"decl_id":null,"docs":" Iteration -- Use self as size, and create the next index after `index`\n Return false if iteration is done","sig":null,"attributes":[{"value":"/ Iteration -- Use self as size, and create the next index after `index`","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/dimension/dimension_trait.rs","byte_start":389965,"byte_end":390039,"line_start":211,"line_end":211,"column_start":5,"column_end":79}},{"value":"/ Return false if iteration is done","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/dimension/dimension_trait.rs","byte_start":390044,"byte_end":390081,"line_start":212,"line_end":212,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/dimension/dimension_trait.rs","byte_start":390086,"byte_end":390089,"line_start":213,"line_end":213,"column_start":5,"column_end":8}},{"value":"/ Next in f-order","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/dimension/dimension_trait.rs","byte_start":390094,"byte_end":390113,"line_start":214,"line_end":214,"column_start":5,"column_end":24}},{"value":"inline","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/dimension/dimension_trait.rs","byte_start":390118,"byte_end":390127,"line_start":215,"line_end":215,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2416},"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/dimension/dimension_trait.rs","byte_start":390800,"byte_end":390818,"line_start":238,"line_end":238,"column_start":8,"column_end":26},"name":"strides_equivalent","qualname":"::dimension::dimension_trait::Dimension::strides_equivalent","value":"pub fn strides_equivalent<D>(&Self, &Self, &D) -> bool where D: Dimension","parent":{"krate":0,"index":2388},"children":[],"decl_id":null,"docs":" Returns `true` iff `strides1` and `strides2` are equivalent for the\n shape `self`.","sig":null,"attributes":[{"value":"/ Returns `true` iff `strides1` and `strides2` are equivalent for the","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/dimension/dimension_trait.rs","byte_start":390500,"byte_end":390571,"line_start":230,"line_end":230,"column_start":5,"column_end":76}},{"value":"/ shape `self`.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/dimension/dimension_trait.rs","byte_start":390576,"byte_end":390593,"line_start":231,"line_end":231,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/dimension/dimension_trait.rs","byte_start":390598,"byte_end":390601,"line_start":232,"line_end":232,"column_start":5,"column_end":8}},{"value":"/ The strides are equivalent if, for each axis with length > 1, the","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/dimension/dimension_trait.rs","byte_start":390606,"byte_end":390675,"line_start":233,"line_end":233,"column_start":5,"column_end":74}},{"value":"/ strides are equal.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/dimension/dimension_trait.rs","byte_start":390680,"byte_end":390702,"line_start":234,"line_end":234,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/dimension/dimension_trait.rs","byte_start":390707,"byte_end":390710,"line_start":235,"line_end":235,"column_start":5,"column_end":8}},{"value":"/ Note: Returns `false` if any of the ndims don't match.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/dimension/dimension_trait.rs","byte_start":390715,"byte_end":390773,"line_start":236,"line_end":236,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":2419},"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/dimension/dimension_trait.rs","byte_start":391247,"byte_end":391260,"line_start":251,"line_end":251,"column_start":8,"column_end":21},"name":"stride_offset","qualname":"::dimension::dimension_trait::Dimension::stride_offset","value":"pub fn stride_offset(&Self, &Self) -> isize","parent":{"krate":0,"index":2388},"children":[],"decl_id":null,"docs":" Return stride offset for index.\n","sig":null,"attributes":[{"value":"/ Return stride offset for index.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/dimension/dimension_trait.rs","byte_start":391204,"byte_end":391239,"line_start":250,"line_end":250,"column_start":5,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":2420},"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/dimension/dimension_trait.rs","byte_start":391554,"byte_end":391575,"line_start":261,"line_end":261,"column_start":8,"column_end":29},"name":"stride_offset_checked","qualname":"::dimension::dimension_trait::Dimension::stride_offset_checked","value":"pub fn stride_offset_checked(&Self, &Self, &Self) -> Option<isize>","parent":{"krate":0,"index":2388},"children":[],"decl_id":null,"docs":" Return stride offset for this dimension and index.\n","sig":null,"attributes":[{"value":"/ Return stride offset for this dimension and index.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/dimension/dimension_trait.rs","byte_start":391492,"byte_end":391546,"line_start":260,"line_end":260,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":2421},"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/dimension/dimension_trait.rs","byte_start":391741,"byte_end":391750,"line_start":266,"line_end":266,"column_start":8,"column_end":17},"name":"last_elem","qualname":"::dimension::dimension_trait::Dimension::last_elem","value":"pub fn last_elem(&Self) -> usize","parent":{"krate":0,"index":2388},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2422},"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/dimension/dimension_trait.rs","byte_start":391915,"byte_end":391928,"line_start":275,"line_end":275,"column_start":8,"column_end":21},"name":"set_last_elem","qualname":"::dimension::dimension_trait::Dimension::set_last_elem","value":"pub fn set_last_elem(&mut Self, usize)","parent":{"krate":0,"index":2388},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2423},"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/dimension/dimension_trait.rs","byte_start":392053,"byte_end":392066,"line_start":281,"line_end":281,"column_start":8,"column_end":21},"name":"is_contiguous","qualname":"::dimension::dimension_trait::Dimension::is_contiguous","value":"pub fn is_contiguous(&Self, &Self) -> bool","parent":{"krate":0,"index":2388},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2424},"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/dimension/dimension_trait.rs","byte_start":392959,"byte_end":392988,"line_start":309,"line_end":309,"column_start":8,"column_end":37},"name":"_fastest_varying_stride_order","qualname":"::dimension::dimension_trait::Dimension::_fastest_varying_stride_order","value":"pub fn _fastest_varying_stride_order(&Self) -> Self","parent":{"krate":0,"index":2388},"children":[],"decl_id":null,"docs":" Return the axis ordering corresponding to the fastest variation\n (in ascending order).","sig":null,"attributes":[{"value":"/ Return the axis ordering corresponding to the fastest variation","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/dimension/dimension_trait.rs","byte_start":392775,"byte_end":392842,"line_start":304,"line_end":304,"column_start":5,"column_end":72}},{"value":"/ (in ascending order).","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/dimension/dimension_trait.rs","byte_start":392847,"byte_end":392872,"line_start":305,"line_end":305,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/dimension/dimension_trait.rs","byte_start":392877,"byte_end":392880,"line_start":306,"line_end":306,"column_start":5,"column_end":8}},{"value":"/ Assumes that no stride value appears twice.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/dimension/dimension_trait.rs","byte_start":392885,"byte_end":392932,"line_start":307,"line_end":307,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":2426},"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/dimension/dimension_trait.rs","byte_start":393444,"byte_end":393459,"line_start":324,"line_end":324,"column_start":8,"column_end":23},"name":"min_stride_axis","qualname":"::dimension::dimension_trait::Dimension::min_stride_axis","value":"pub fn min_stride_axis(&Self, &Self) -> Axis","parent":{"krate":0,"index":2388},"children":[],"decl_id":null,"docs":" Compute the minimum stride axis (absolute value), under the constraint\n that the length of the axis is > 1;\n","sig":null,"attributes":[{"value":"/ Compute the minimum stride axis (absolute value), under the constraint","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/dimension/dimension_trait.rs","byte_start":393299,"byte_end":393373,"line_start":321,"line_end":321,"column_start":5,"column_end":79}},{"value":"/ that the length of the axis is > 1;","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/dimension/dimension_trait.rs","byte_start":393378,"byte_end":393417,"line_start":322,"line_end":322,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":2429},"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/dimension/dimension_trait.rs","byte_start":393962,"byte_end":393977,"line_start":339,"line_end":339,"column_start":8,"column_end":23},"name":"max_stride_axis","qualname":"::dimension::dimension_trait::Dimension::max_stride_axis","value":"pub fn max_stride_axis(&Self, &Self) -> Axis","parent":{"krate":0,"index":2388},"children":[],"decl_id":null,"docs":" Compute the maximum stride axis (absolute value), under the constraint\n that the length of the axis is > 1;\n","sig":null,"attributes":[{"value":"/ Compute the maximum stride axis (absolute value), under the constraint","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/dimension/dimension_trait.rs","byte_start":393817,"byte_end":393891,"line_start":336,"line_end":336,"column_start":5,"column_end":79}},{"value":"/ that the length of the axis is > 1;","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/dimension/dimension_trait.rs","byte_start":393896,"byte_end":393935,"line_start":337,"line_end":337,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":2433},"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/dimension/dimension_trait.rs","byte_start":394411,"byte_end":394419,"line_start":352,"line_end":352,"column_start":8,"column_end":16},"name":"into_dyn","qualname":"::dimension::dimension_trait::Dimension::into_dyn","value":"pub fn into_dyn(Self) -> IxDyn","parent":{"krate":0,"index":2388},"children":[],"decl_id":null,"docs":" Convert the dimensional into a dynamic dimensional (IxDyn).\n","sig":null,"attributes":[{"value":"/ Convert the dimensional into a dynamic dimensional (IxDyn).","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/dimension/dimension_trait.rs","byte_start":394340,"byte_end":394403,"line_start":351,"line_end":351,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":2434},"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/dimension/dimension_trait.rs","byte_start":394498,"byte_end":394512,"line_start":357,"line_end":357,"column_start":8,"column_end":22},"name":"from_dimension","qualname":"::dimension::dimension_trait::Dimension::from_dimension","value":"pub fn from_dimension<D2: Dimension>(&D2) -> Option<Self>","parent":{"krate":0,"index":2388},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2436},"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/dimension/dimension_trait.rs","byte_start":394800,"byte_end":394811,"line_start":370,"line_end":370,"column_start":8,"column_end":19},"name":"insert_axis","qualname":"::dimension::dimension_trait::Dimension::insert_axis","value":"pub fn insert_axis(&Self, Axis) -> Self::Larger","parent":{"krate":0,"index":2388},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2437},"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/dimension/dimension_trait.rs","byte_start":394875,"byte_end":394890,"line_start":373,"line_end":373,"column_start":8,"column_end":23},"name":"try_remove_axis","qualname":"::dimension::dimension_trait::Dimension::try_remove_axis","value":"pub fn try_remove_axis(&Self, Axis) -> Self::Smaller","parent":{"krate":0,"index":2388},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":5853},"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/dimension/dynindeximpl.rs","byte_start":411981,"byte_end":411990,"line_start":120,"line_end":120,"column_start":12,"column_end":21},"name":"IxDynImpl","qualname":"::dimension::dynindeximpl::IxDynImpl","value":"","parent":null,"children":[],"decl_id":null,"docs":" Dynamic dimension or index type.","sig":null,"attributes":[{"value":"/ Dynamic dimension or index type.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/dimension/dynindeximpl.rs","byte_start":411696,"byte_end":411732,"line_start":114,"line_end":114,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/dimension/dynindeximpl.rs","byte_start":411733,"byte_end":411736,"line_start":115,"line_end":115,"column_start":1,"column_end":4}},{"value":"/ Use `IxDyn` directly. This type implements a dynamic number of","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/dimension/dynindeximpl.rs","byte_start":411737,"byte_end":411803,"line_start":116,"line_end":116,"column_start":1,"column_end":67}},{"value":"/ dimensions or indices. Short dimensions are stored inline and don't need","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/dimension/dynindeximpl.rs","byte_start":411804,"byte_end":411880,"line_start":117,"line_end":117,"column_start":1,"column_end":77}},{"value":"/ any dynamic memory allocation.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/dimension/dynindeximpl.rs","byte_start":411881,"byte_end":411915,"line_start":118,"line_end":118,"column_start":1,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":2623},"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/dimension/dynindeximpl.rs","byte_start":414696,"byte_end":414701,"line_start":228,"line_end":228,"column_start":12,"column_end":17},"name":"zeros","qualname":"<IxDyn>::zeros","value":"pub fn zeros(usize) -> IxDyn","parent":null,"children":[],"decl_id":null,"docs":" Create a new dimension value with `n` axes, all zeros\n","sig":null,"attributes":[{"value":"/ Create a new dimension value with `n` axes, all zeros","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/dimension/dynindeximpl.rs","byte_start":414613,"byte_end":414670,"line_start":226,"line_end":226,"column_start":5,"column_end":62}},{"value":"inline","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/dimension/dynindeximpl.rs","byte_start":414675,"byte_end":414684,"line_start":227,"line_end":227,"column_start":5,"column_end":14}}]},{"kind":"Trait","id":{"krate":0,"index":2646},"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/dimension/ndindex.rs","byte_start":415401,"byte_end":415408,"line_start":21,"line_end":21,"column_start":18,"column_end":25},"name":"NdIndex","qualname":"::dimension::ndindex::NdIndex","value":"NdIndex<E>: Debug","parent":null,"children":[{"krate":0,"index":2648},{"krate":0,"index":2649}],"decl_id":null,"docs":" Tuple or fixed size arrays that can be used to index an array.","sig":null,"attributes":[{"value":"/ Tuple or fixed size arrays that can be used to index an array.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/dimension/ndindex.rs","byte_start":415096,"byte_end":415162,"line_start":9,"line_end":9,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/dimension/ndindex.rs","byte_start":415163,"byte_end":415166,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/dimension/ndindex.rs","byte_start":415167,"byte_end":415174,"line_start":11,"line_end":11,"column_start":1,"column_end":8}},{"value":"/ use ndarray::arr2;","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/dimension/ndindex.rs","byte_start":415175,"byte_end":415197,"line_start":12,"line_end":12,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/dimension/ndindex.rs","byte_start":415198,"byte_end":415201,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ let mut a = arr2(&[[0, 1],","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/dimension/ndindex.rs","byte_start":415202,"byte_end":415232,"line_start":14,"line_end":14,"column_start":1,"column_end":31}},{"value":"/                    [2, 3]]);","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/dimension/ndindex.rs","byte_start":415233,"byte_end":415265,"line_start":15,"line_end":15,"column_start":1,"column_end":33}},{"value":"/ assert_eq!(a[[0, 1]], 1);","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/dimension/ndindex.rs","byte_start":415266,"byte_end":415295,"line_start":16,"line_end":16,"column_start":1,"column_end":30}},{"value":"/ assert_eq!(a[[1, 1]], 3);","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/dimension/ndindex.rs","byte_start":415296,"byte_end":415325,"line_start":17,"line_end":17,"column_start":1,"column_end":30}},{"value":"/ a[[1, 1]] += 1;","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/dimension/ndindex.rs","byte_start":415326,"byte_end":415345,"line_start":18,"line_end":18,"column_start":1,"column_end":20}},{"value":"/ assert_eq!(a[(1, 1)], 4);","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/dimension/ndindex.rs","byte_start":415346,"byte_end":415375,"line_start":19,"line_end":19,"column_start":1,"column_end":30}},{"value":"/ ```","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/dimension/ndindex.rs","byte_start":415376,"byte_end":415383,"line_start":20,"line_end":20,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":2648},"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/dimension/ndindex.rs","byte_start":415447,"byte_end":415460,"line_start":23,"line_end":23,"column_start":8,"column_end":21},"name":"index_checked","qualname":"::dimension::ndindex::NdIndex::index_checked","value":"pub fn index_checked(&Self, &E, &E) -> Option<isize>","parent":{"krate":0,"index":2646},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2649},"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/dimension/ndindex.rs","byte_start":415534,"byte_end":415549,"line_start":25,"line_end":25,"column_start":8,"column_end":23},"name":"index_unchecked","qualname":"::dimension::ndindex::NdIndex::index_unchecked","value":"pub fn index_unchecked(&Self, &E) -> isize","parent":{"krate":0,"index":2646},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":2693},"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/dimension/ops.rs","byte_start":422050,"byte_end":422056,"line_start":4,"line_end":4,"column_start":11,"column_end":17},"name":"DimAdd","qualname":"::dimension::ops::DimAdd","value":"DimAdd<D: Dimension>","parent":null,"children":[{"krate":0,"index":2695}],"decl_id":null,"docs":" Adds the two dimensions at compile time.\n","sig":null,"attributes":[{"value":"/ Adds the two dimensions at compile time.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/dimension/ops.rs","byte_start":421995,"byte_end":422039,"line_start":3,"line_end":3,"column_start":1,"column_end":45}}]},{"kind":"Type","id":{"krate":0,"index":2695},"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/dimension/ops.rs","byte_start":422121,"byte_end":422127,"line_start":6,"line_end":6,"column_start":10,"column_end":16},"name":"Output","qualname":"::dimension::ops::DimAdd::Output","value":"type Output: Dimension;","parent":{"krate":0,"index":2693},"children":[],"decl_id":null,"docs":" The sum of the two dimensions.\n","sig":null,"attributes":[{"value":"/ The sum of the two dimensions.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/dimension/ops.rs","byte_start":422077,"byte_end":422111,"line_start":5,"line_end":5,"column_start":5,"column_end":39}}]},{"kind":"Trait","id":{"krate":0,"index":2712},"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/dimension/remove_axis.rs","byte_start":425116,"byte_end":425126,"line_start":15,"line_end":15,"column_start":11,"column_end":21},"name":"RemoveAxis","qualname":"::dimension::remove_axis::RemoveAxis","value":"RemoveAxis: Dimension","parent":null,"children":[{"krate":0,"index":2713}],"decl_id":null,"docs":" Array shape with a next smaller dimension.","sig":null,"attributes":[{"value":"/ Array shape with a next smaller dimension.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/dimension/remove_axis.rs","byte_start":424920,"byte_end":424966,"line_start":11,"line_end":11,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/dimension/remove_axis.rs","byte_start":424967,"byte_end":424970,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ `RemoveAxis` defines a larger-than relation for array shapes:","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/dimension/remove_axis.rs","byte_start":424971,"byte_end":425036,"line_start":13,"line_end":13,"column_start":1,"column_end":66}},{"value":"/ removing one axis from *Self* gives smaller dimension *Smaller*.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/dimension/remove_axis.rs","byte_start":425037,"byte_end":425105,"line_start":14,"line_end":14,"column_start":1,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":2713},"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/dimension/remove_axis.rs","byte_start":425147,"byte_end":425158,"line_start":16,"line_end":16,"column_start":8,"column_end":19},"name":"remove_axis","qualname":"::dimension::remove_axis::RemoveAxis::remove_axis","value":"pub fn remove_axis(&Self, Axis) -> Self::Smaller","parent":{"krate":0,"index":2712},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":2807},"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/prelude.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"prelude","qualname":"::prelude","value":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/prelude.rs","parent":null,"children":[{"krate":0,"index":2808},{"krate":0,"index":2809},{"krate":0,"index":2810},{"krate":0,"index":2811},{"krate":0,"index":2812},{"krate":0,"index":2813},{"krate":0,"index":2814},{"krate":0,"index":2815},{"krate":0,"index":2816},{"krate":0,"index":2817},{"krate":0,"index":2818},{"krate":0,"index":9209},{"krate":0,"index":2819},{"krate":0,"index":9211},{"krate":0,"index":2820},{"krate":0,"index":2821},{"krate":0,"index":2822},{"krate":0,"index":2823},{"krate":0,"index":2824},{"krate":0,"index":2825},{"krate":0,"index":2826},{"krate":0,"index":2827},{"krate":0,"index":2828},{"krate":0,"index":2829},{"krate":0,"index":2830},{"krate":0,"index":2831},{"krate":0,"index":2832},{"krate":0,"index":2833},{"krate":0,"index":2834},{"krate":0,"index":2835},{"krate":0,"index":2836},{"krate":0,"index":2837},{"krate":0,"index":2838},{"krate":0,"index":2839},{"krate":0,"index":2840},{"krate":0,"index":2841},{"krate":0,"index":2842},{"krate":0,"index":2843},{"krate":0,"index":2844},{"krate":0,"index":2845},{"krate":0,"index":2846},{"krate":0,"index":2847},{"krate":0,"index":2848},{"krate":0,"index":2849},{"krate":0,"index":9263},{"krate":0,"index":2850},{"krate":0,"index":9265},{"krate":0,"index":2851},{"krate":0,"index":9267},{"krate":0,"index":2852},{"krate":0,"index":9269},{"krate":0,"index":2853},{"krate":0,"index":9271},{"krate":0,"index":2854},{"krate":0,"index":9273},{"krate":0,"index":2855},{"krate":0,"index":9275},{"krate":0,"index":2856},{"krate":0,"index":9277},{"krate":0,"index":2857},{"krate":0,"index":2858},{"krate":0,"index":2859},{"krate":0,"index":2860},{"krate":0,"index":2861},{"krate":0,"index":2862},{"krate":0,"index":2863},{"krate":0,"index":2864},{"krate":0,"index":2865},{"krate":0,"index":2866},{"krate":0,"index":2867},{"krate":0,"index":2868},{"krate":0,"index":2869},{"krate":0,"index":2870},{"krate":0,"index":9301},{"krate":0,"index":2871},{"krate":0,"index":2872}],"decl_id":null,"docs":" ndarray prelude.","sig":null,"attributes":[{"value":"/ ndarray prelude.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/prelude.rs","byte_start":426726,"byte_end":426746,"line_start":9,"line_end":9,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/prelude.rs","byte_start":426747,"byte_end":426750,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ This module contains the most used types, type aliases, traits, functions,","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/prelude.rs","byte_start":426751,"byte_end":426829,"line_start":11,"line_end":11,"column_start":1,"column_end":79}},{"value":"/ and macros that you can import easily as a group.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/prelude.rs","byte_start":426830,"byte_end":426883,"line_start":12,"line_end":12,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/prelude.rs","byte_start":426884,"byte_end":426887,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/prelude.rs","byte_start":426888,"byte_end":426895,"line_start":14,"line_end":14,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/prelude.rs","byte_start":426896,"byte_end":426899,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ use ndarray::prelude::*;","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/prelude.rs","byte_start":426900,"byte_end":426928,"line_start":16,"line_end":16,"column_start":1,"column_end":29}},{"value":"/ ```","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/prelude.rs","byte_start":426929,"byte_end":426936,"line_start":17,"line_end":17,"column_start":1,"column_end":8}}]},{"kind":"Type","id":{"krate":0,"index":2873},"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":8220,"byte_end":8222,"line_start":231,"line_end":231,"column_start":10,"column_end":12},"name":"Ix","qualname":"::Ix","value":"usize","parent":null,"children":[],"decl_id":null,"docs":" Array index type\n","sig":null,"attributes":[{"value":"/ Array index type","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":8190,"byte_end":8210,"line_start":230,"line_end":230,"column_start":1,"column_end":21}}]},{"kind":"Type","id":{"krate":0,"index":2874},"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":8271,"byte_end":8274,"line_start":233,"line_end":233,"column_start":10,"column_end":13},"name":"Ixs","qualname":"::Ixs","value":"isize","parent":null,"children":[],"decl_id":null,"docs":" Array index type (signed)\n","sig":null,"attributes":[{"value":"/ Array index type (signed)","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":8232,"byte_end":8261,"line_start":232,"line_end":232,"column_start":1,"column_end":30}}]},{"kind":"Struct","id":{"krate":0,"index":2875},"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":45492,"byte_end":45501,"line_start":1276,"line_end":1276,"column_start":12,"column_end":21},"name":"ArrayBase","qualname":"::ArrayBase","value":"ArrayBase {  }","parent":null,"children":[{"krate":0,"index":2878},{"krate":0,"index":2879},{"krate":0,"index":2880},{"krate":0,"index":2881}],"decl_id":null,"docs":" An *n*-dimensional array.","sig":null,"attributes":[{"value":"/ An *n*-dimensional array.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":8285,"byte_end":8314,"line_start":235,"line_end":235,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":8315,"byte_end":8318,"line_start":236,"line_end":236,"column_start":1,"column_end":4}},{"value":"/ The array is a general container of elements. It cannot grow or shrink, but","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":8319,"byte_end":8398,"line_start":237,"line_end":237,"column_start":1,"column_end":80}},{"value":"/ can be sliced into subsets of its data.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":8399,"byte_end":8442,"line_start":238,"line_end":238,"column_start":1,"column_end":44}},{"value":"/ The array supports arithmetic operations by applying them elementwise.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":8443,"byte_end":8517,"line_start":239,"line_end":239,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":8518,"byte_end":8521,"line_start":240,"line_end":240,"column_start":1,"column_end":4}},{"value":"/ In *n*-dimensional we include for example 1-dimensional rows or columns,","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":8522,"byte_end":8598,"line_start":241,"line_end":241,"column_start":1,"column_end":77}},{"value":"/ 2-dimensional matrices, and higher dimensional arrays. If the array has *n*","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":8599,"byte_end":8678,"line_start":242,"line_end":242,"column_start":1,"column_end":80}},{"value":"/ dimensions, then an element is accessed by using that many indices.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":8679,"byte_end":8750,"line_start":243,"line_end":243,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":8751,"byte_end":8754,"line_start":244,"line_end":244,"column_start":1,"column_end":4}},{"value":"/ The `ArrayBase<S, D>` is parameterized by `S` for the data container and","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":8755,"byte_end":8831,"line_start":245,"line_end":245,"column_start":1,"column_end":77}},{"value":"/ `D` for the dimensionality.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":8832,"byte_end":8863,"line_start":246,"line_end":246,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":8864,"byte_end":8867,"line_start":247,"line_end":247,"column_start":1,"column_end":4}},{"value":"/ Type aliases [`Array`], [`ArcArray`], [`CowArray`], [`ArrayView`], and","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":8868,"byte_end":8942,"line_start":248,"line_end":248,"column_start":1,"column_end":75}},{"value":"/ [`ArrayViewMut`] refer to `ArrayBase` with different types for the data","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":8943,"byte_end":9018,"line_start":249,"line_end":249,"column_start":1,"column_end":76}},{"value":"/ container.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":9019,"byte_end":9033,"line_start":250,"line_end":250,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":9034,"byte_end":9037,"line_start":251,"line_end":251,"column_start":1,"column_end":4}},{"value":"/ [`Array`]: type.Array.html","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":9038,"byte_end":9068,"line_start":252,"line_end":252,"column_start":1,"column_end":31}},{"value":"/ [`ArcArray`]: type.ArcArray.html","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":9069,"byte_end":9105,"line_start":253,"line_end":253,"column_start":1,"column_end":37}},{"value":"/ [`ArrayView`]: type.ArrayView.html","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":9106,"byte_end":9144,"line_start":254,"line_end":254,"column_start":1,"column_end":39}},{"value":"/ [`ArrayViewMut`]: type.ArrayViewMut.html","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":9145,"byte_end":9189,"line_start":255,"line_end":255,"column_start":1,"column_end":45}},{"value":"/ [`CowArray`]: type.CowArray.html","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":9190,"byte_end":9226,"line_start":256,"line_end":256,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":9227,"byte_end":9230,"line_start":257,"line_end":257,"column_start":1,"column_end":4}},{"value":"/ ## Contents","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":9231,"byte_end":9246,"line_start":258,"line_end":258,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":9247,"byte_end":9250,"line_start":259,"line_end":259,"column_start":1,"column_end":4}},{"value":"/ + [Array](#array)","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":9251,"byte_end":9272,"line_start":260,"line_end":260,"column_start":1,"column_end":22}},{"value":"/ + [ArcArray](#arcarray)","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":9273,"byte_end":9300,"line_start":261,"line_end":261,"column_start":1,"column_end":28}},{"value":"/ + [CowArray](#cowarray)","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":9301,"byte_end":9328,"line_start":262,"line_end":262,"column_start":1,"column_end":28}},{"value":"/ + [Array Views](#array-views)","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":9329,"byte_end":9362,"line_start":263,"line_end":263,"column_start":1,"column_end":34}},{"value":"/ + [Indexing and Dimension](#indexing-and-dimension)","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":9363,"byte_end":9418,"line_start":264,"line_end":264,"column_start":1,"column_end":56}},{"value":"/ + [Loops, Producers and Iterators](#loops-producers-and-iterators)","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":9419,"byte_end":9489,"line_start":265,"line_end":265,"column_start":1,"column_end":71}},{"value":"/ + [Slicing](#slicing)","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":9490,"byte_end":9515,"line_start":266,"line_end":266,"column_start":1,"column_end":26}},{"value":"/ + [Subviews](#subviews)","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":9516,"byte_end":9543,"line_start":267,"line_end":267,"column_start":1,"column_end":28}},{"value":"/ + [Arithmetic Operations](#arithmetic-operations)","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":9544,"byte_end":9597,"line_start":268,"line_end":268,"column_start":1,"column_end":54}},{"value":"/ + [Broadcasting](#broadcasting)","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":9598,"byte_end":9633,"line_start":269,"line_end":269,"column_start":1,"column_end":36}},{"value":"/ + [Conversions](#conversions)","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":9634,"byte_end":9667,"line_start":270,"line_end":270,"column_start":1,"column_end":34}},{"value":"/ + [Constructor Methods for Owned Arrays](#constructor-methods-for-owned-arrays)","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":9668,"byte_end":9751,"line_start":271,"line_end":271,"column_start":1,"column_end":84}},{"value":"/ + [Methods For All Array Types](#methods-for-all-array-types)","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":9752,"byte_end":9817,"line_start":272,"line_end":272,"column_start":1,"column_end":66}},{"value":"/ + [Methods For 1-D Arrays](#methods-for-1-d-arrays)","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":9818,"byte_end":9873,"line_start":273,"line_end":273,"column_start":1,"column_end":56}},{"value":"/ + [Methods For 2-D Arrays](#methods-for-2-d-arrays)","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":9874,"byte_end":9929,"line_start":274,"line_end":274,"column_start":1,"column_end":56}},{"value":"/ + [Methods for Dynamic-Dimensional Arrays](#methods-for-dynamic-dimensional-arrays)","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":9930,"byte_end":10017,"line_start":275,"line_end":275,"column_start":1,"column_end":88}},{"value":"/ + [Numerical Methods for Arrays](#numerical-methods-for-arrays)","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":10018,"byte_end":10085,"line_start":276,"line_end":276,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":10086,"byte_end":10089,"line_start":277,"line_end":277,"column_start":1,"column_end":4}},{"value":"/ ## `Array`","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":10090,"byte_end":10104,"line_start":278,"line_end":278,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":10105,"byte_end":10108,"line_start":279,"line_end":279,"column_start":1,"column_end":4}},{"value":"/ [`Array`](type.Array.html) is an owned array that owns the underlying array","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":10109,"byte_end":10188,"line_start":280,"line_end":280,"column_start":1,"column_end":80}},{"value":"/ elements directly (just like a `Vec`) and it is the default way to create and","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":10189,"byte_end":10270,"line_start":281,"line_end":281,"column_start":1,"column_end":82}},{"value":"/ store n-dimensional data. `Array<A, D>` has two type parameters: `A` for","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":10271,"byte_end":10347,"line_start":282,"line_end":282,"column_start":1,"column_end":77}},{"value":"/ the element type, and `D` for the dimensionality. A particular","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":10348,"byte_end":10414,"line_start":283,"line_end":283,"column_start":1,"column_end":67}},{"value":"/ dimensionality's type alias like `Array3<A>` just has the type parameter","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":10415,"byte_end":10491,"line_start":284,"line_end":284,"column_start":1,"column_end":77}},{"value":"/ `A` for element type.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":10492,"byte_end":10517,"line_start":285,"line_end":285,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":10518,"byte_end":10521,"line_start":286,"line_end":286,"column_start":1,"column_end":4}},{"value":"/ An example:","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":10522,"byte_end":10537,"line_start":287,"line_end":287,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":10538,"byte_end":10541,"line_start":288,"line_end":288,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":10542,"byte_end":10549,"line_start":289,"line_end":289,"column_start":1,"column_end":8}},{"value":"/ // Create a three-dimensional f64 array, initialized with zeros","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":10550,"byte_end":10617,"line_start":290,"line_end":290,"column_start":1,"column_end":68}},{"value":"/ use ndarray::Array3;","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":10618,"byte_end":10642,"line_start":291,"line_end":291,"column_start":1,"column_end":25}},{"value":"/ let mut temperature = Array3::<f64>::zeros((3, 4, 5));","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":10643,"byte_end":10701,"line_start":292,"line_end":292,"column_start":1,"column_end":59}},{"value":"/ // Increase the temperature in this location","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":10702,"byte_end":10750,"line_start":293,"line_end":293,"column_start":1,"column_end":49}},{"value":"/ temperature[[2, 2, 2]] += 0.5;","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":10751,"byte_end":10785,"line_start":294,"line_end":294,"column_start":1,"column_end":35}},{"value":"/ ```","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":10786,"byte_end":10793,"line_start":295,"line_end":295,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":10794,"byte_end":10797,"line_start":296,"line_end":296,"column_start":1,"column_end":4}},{"value":"/ ## `ArcArray`","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":10798,"byte_end":10815,"line_start":297,"line_end":297,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":10816,"byte_end":10819,"line_start":298,"line_end":298,"column_start":1,"column_end":4}},{"value":"/ [`ArcArray`](type.ArcArray.html) is an owned array with reference counted","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":10820,"byte_end":10897,"line_start":299,"line_end":299,"column_start":1,"column_end":78}},{"value":"/ data (shared ownership).","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":10898,"byte_end":10926,"line_start":300,"line_end":300,"column_start":1,"column_end":29}},{"value":"/ Sharing requires that it uses copy-on-write for mutable operations.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":10927,"byte_end":10998,"line_start":301,"line_end":301,"column_start":1,"column_end":72}},{"value":"/ Calling a method for mutating elements on `ArcArray`, for example","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":10999,"byte_end":11068,"line_start":302,"line_end":302,"column_start":1,"column_end":70}},{"value":"/ [`view_mut()`](#method.view_mut) or [`get_mut()`](#method.get_mut),","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":11069,"byte_end":11140,"line_start":303,"line_end":303,"column_start":1,"column_end":72}},{"value":"/ will break sharing and require a clone of the data (if it is not uniquely held).","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":11141,"byte_end":11225,"line_start":304,"line_end":304,"column_start":1,"column_end":85}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":11226,"byte_end":11229,"line_start":305,"line_end":305,"column_start":1,"column_end":4}},{"value":"/ ## `CowArray`","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":11230,"byte_end":11247,"line_start":306,"line_end":306,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":11248,"byte_end":11251,"line_start":307,"line_end":307,"column_start":1,"column_end":4}},{"value":"/ [`CowArray`](type.CowArray.html) is analogous to","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":11252,"byte_end":11304,"line_start":308,"line_end":308,"column_start":1,"column_end":53}},{"value":"/ [`std::borrow::Cow`](https://doc.rust-lang.org/std/borrow/enum.Cow.html).","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":11305,"byte_end":11382,"line_start":309,"line_end":309,"column_start":1,"column_end":78}},{"value":"/ It can represent either an immutable view or a uniquely owned array. If a","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":11383,"byte_end":11460,"line_start":310,"line_end":310,"column_start":1,"column_end":78}},{"value":"/ `CowArray` instance is the immutable view variant, then calling a method","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":11461,"byte_end":11537,"line_start":311,"line_end":311,"column_start":1,"column_end":77}},{"value":"/ for mutating elements in the array will cause it to be converted into the","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":11538,"byte_end":11615,"line_start":312,"line_end":312,"column_start":1,"column_end":78}},{"value":"/ owned variant (by cloning all the elements) before the modification is","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":11616,"byte_end":11690,"line_start":313,"line_end":313,"column_start":1,"column_end":75}},{"value":"/ performed.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":11691,"byte_end":11705,"line_start":314,"line_end":314,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":11706,"byte_end":11709,"line_start":315,"line_end":315,"column_start":1,"column_end":4}},{"value":"/ ## Array Views","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":11710,"byte_end":11728,"line_start":316,"line_end":316,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":11729,"byte_end":11732,"line_start":317,"line_end":317,"column_start":1,"column_end":4}},{"value":"/ [`ArrayView`] and [`ArrayViewMut`] are read-only and read-write array views","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":11733,"byte_end":11812,"line_start":318,"line_end":318,"column_start":1,"column_end":80}},{"value":"/ respectively. They use dimensionality, indexing, and almost all other","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":11813,"byte_end":11886,"line_start":319,"line_end":319,"column_start":1,"column_end":74}},{"value":"/ methods the same way as the other array types.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":11887,"byte_end":11937,"line_start":320,"line_end":320,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":11938,"byte_end":11941,"line_start":321,"line_end":321,"column_start":1,"column_end":4}},{"value":"/ Methods for `ArrayBase` apply to array views too, when the trait bounds","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":11942,"byte_end":12017,"line_start":322,"line_end":322,"column_start":1,"column_end":76}},{"value":"/ allow.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":12018,"byte_end":12028,"line_start":323,"line_end":323,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":12029,"byte_end":12032,"line_start":324,"line_end":324,"column_start":1,"column_end":4}},{"value":"/ Please see the documentation for the respective array view for an overview","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":12033,"byte_end":12111,"line_start":325,"line_end":325,"column_start":1,"column_end":79}},{"value":"/ of methods specific to array views: [`ArrayView`], [`ArrayViewMut`].","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":12112,"byte_end":12184,"line_start":326,"line_end":326,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":12185,"byte_end":12188,"line_start":327,"line_end":327,"column_start":1,"column_end":4}},{"value":"/ A view is created from an array using [`.view()`](ArrayBase::view),","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":12189,"byte_end":12260,"line_start":328,"line_end":328,"column_start":1,"column_end":72}},{"value":"/ [`.view_mut()`](ArrayBase::view_mut), using","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":12261,"byte_end":12308,"line_start":329,"line_end":329,"column_start":1,"column_end":48}},{"value":"/ slicing ([`.slice()`](ArrayBase::slice), [`.slice_mut()`](ArrayBase::slice_mut)) or from one of","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":12309,"byte_end":12408,"line_start":330,"line_end":330,"column_start":1,"column_end":100}},{"value":"/ the many iterators that yield array views.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":12409,"byte_end":12455,"line_start":331,"line_end":331,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":12456,"byte_end":12459,"line_start":332,"line_end":332,"column_start":1,"column_end":4}},{"value":"/ You can also create an array view from a regular slice of data not","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":12460,"byte_end":12530,"line_start":333,"line_end":333,"column_start":1,"column_end":71}},{"value":"/ allocated with `Array` — see array view methods or their `From` impls.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":12531,"byte_end":12607,"line_start":334,"line_end":334,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":12608,"byte_end":12611,"line_start":335,"line_end":335,"column_start":1,"column_end":4}},{"value":"/ Note that all `ArrayBase` variants can change their view (slicing) of the","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":12612,"byte_end":12689,"line_start":336,"line_end":336,"column_start":1,"column_end":78}},{"value":"/ data freely, even when their data can’t be mutated.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":12690,"byte_end":12747,"line_start":337,"line_end":337,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":12748,"byte_end":12751,"line_start":338,"line_end":338,"column_start":1,"column_end":4}},{"value":"/ ## Indexing and Dimension","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":12752,"byte_end":12781,"line_start":339,"line_end":339,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":12782,"byte_end":12785,"line_start":340,"line_end":340,"column_start":1,"column_end":4}},{"value":"/ The dimensionality of the array determines the number of *axes*, for example","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":12786,"byte_end":12866,"line_start":341,"line_end":341,"column_start":1,"column_end":81}},{"value":"/ a 2D array has two axes. These are listed in “big endian” order, so that","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":12867,"byte_end":12947,"line_start":342,"line_end":342,"column_start":1,"column_end":77}},{"value":"/ the greatest dimension is listed first, the lowest dimension with the most","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":12948,"byte_end":13026,"line_start":343,"line_end":343,"column_start":1,"column_end":79}},{"value":"/ rapidly varying index is the last.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":13027,"byte_end":13065,"line_start":344,"line_end":344,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":13066,"byte_end":13069,"line_start":345,"line_end":345,"column_start":1,"column_end":4}},{"value":"/ In a 2D array the index of each element is `[row, column]` as seen in this","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":13070,"byte_end":13148,"line_start":346,"line_end":346,"column_start":1,"column_end":79}},{"value":"/ 4 × 3 example:","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":13149,"byte_end":13168,"line_start":347,"line_end":347,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":13169,"byte_end":13172,"line_start":348,"line_end":348,"column_start":1,"column_end":4}},{"value":"/ ```ignore","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":13173,"byte_end":13186,"line_start":349,"line_end":349,"column_start":1,"column_end":14}},{"value":"/ [[ [0, 0], [0, 1], [0, 2] ],  // row 0","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":13187,"byte_end":13229,"line_start":350,"line_end":350,"column_start":1,"column_end":43}},{"value":"/  [ [1, 0], [1, 1], [1, 2] ],  // row 1","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":13230,"byte_end":13272,"line_start":351,"line_end":351,"column_start":1,"column_end":43}},{"value":"/  [ [2, 0], [2, 1], [2, 2] ],  // row 2","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":13273,"byte_end":13315,"line_start":352,"line_end":352,"column_start":1,"column_end":43}},{"value":"/  [ [3, 0], [3, 1], [3, 2] ]]  // row 3","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":13316,"byte_end":13358,"line_start":353,"line_end":353,"column_start":1,"column_end":43}},{"value":"/ //    \\       \\       \\","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":13359,"byte_end":13386,"line_start":354,"line_end":354,"column_start":1,"column_end":28}},{"value":"/ //   column 0  \\     column 2","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":13387,"byte_end":13420,"line_start":355,"line_end":355,"column_start":1,"column_end":34}},{"value":"/ //            column 1","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":13421,"byte_end":13447,"line_start":356,"line_end":356,"column_start":1,"column_end":27}},{"value":"/ ```","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":13448,"byte_end":13455,"line_start":357,"line_end":357,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":13456,"byte_end":13459,"line_start":358,"line_end":358,"column_start":1,"column_end":4}},{"value":"/ The number of axes for an array is fixed by its `D` type parameter: `Ix1`","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":13460,"byte_end":13537,"line_start":359,"line_end":359,"column_start":1,"column_end":78}},{"value":"/ for a 1D array, `Ix2` for a 2D array etc. The dimension type `IxDyn` allows","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":13538,"byte_end":13617,"line_start":360,"line_end":360,"column_start":1,"column_end":80}},{"value":"/ a dynamic number of axes.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":13618,"byte_end":13647,"line_start":361,"line_end":361,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":13648,"byte_end":13651,"line_start":362,"line_end":362,"column_start":1,"column_end":4}},{"value":"/ A fixed size array (`[usize; N]`) of the corresponding dimensionality is","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":13652,"byte_end":13728,"line_start":363,"line_end":363,"column_start":1,"column_end":77}},{"value":"/ used to index the `Array`, making the syntax `array[[` i, j,  ...`]]`","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":13729,"byte_end":13802,"line_start":364,"line_end":364,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":13803,"byte_end":13806,"line_start":365,"line_end":365,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":13807,"byte_end":13814,"line_start":366,"line_end":366,"column_start":1,"column_end":8}},{"value":"/ use ndarray::Array2;","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":13815,"byte_end":13839,"line_start":367,"line_end":367,"column_start":1,"column_end":25}},{"value":"/ let mut array = Array2::zeros((4, 3));","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":13840,"byte_end":13882,"line_start":368,"line_end":368,"column_start":1,"column_end":43}},{"value":"/ array[[1, 1]] = 7;","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":13883,"byte_end":13905,"line_start":369,"line_end":369,"column_start":1,"column_end":23}},{"value":"/ ```","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":13906,"byte_end":13913,"line_start":370,"line_end":370,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":13914,"byte_end":13917,"line_start":371,"line_end":371,"column_start":1,"column_end":4}},{"value":"/ Important traits and types for dimension and indexing:","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":13918,"byte_end":13976,"line_start":372,"line_end":372,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":13977,"byte_end":13980,"line_start":373,"line_end":373,"column_start":1,"column_end":4}},{"value":"/ - A [`Dim`](struct.Dim.html) value represents a dimensionality or index.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":13981,"byte_end":14057,"line_start":374,"line_end":374,"column_start":1,"column_end":77}},{"value":"/ - Trait [`Dimension`](trait.Dimension.html) is implemented by all","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":14058,"byte_end":14127,"line_start":375,"line_end":375,"column_start":1,"column_end":70}},{"value":"/ dimensionalities. It defines many operations for dimensions and indices.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":14128,"byte_end":14204,"line_start":376,"line_end":376,"column_start":1,"column_end":77}},{"value":"/ - Trait [`IntoDimension`](trait.IntoDimension.html) is used to convert into a","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":14205,"byte_end":14286,"line_start":377,"line_end":377,"column_start":1,"column_end":82}},{"value":"/ `Dim` value.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":14287,"byte_end":14303,"line_start":378,"line_end":378,"column_start":1,"column_end":17}},{"value":"/ - Trait [`ShapeBuilder`](trait.ShapeBuilder.html) is an extension of","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":14304,"byte_end":14376,"line_start":379,"line_end":379,"column_start":1,"column_end":73}},{"value":"/ `IntoDimension` and is used when constructing an array. A shape describes","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":14377,"byte_end":14454,"line_start":380,"line_end":380,"column_start":1,"column_end":78}},{"value":"/ not just the extent of each axis but also their strides.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":14455,"byte_end":14515,"line_start":381,"line_end":381,"column_start":1,"column_end":61}},{"value":"/ - Trait [`NdIndex`](trait.NdIndex.html) is an extension of `Dimension` and is","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":14516,"byte_end":14597,"line_start":382,"line_end":382,"column_start":1,"column_end":82}},{"value":"/ for values that can be used with indexing syntax.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":14598,"byte_end":14651,"line_start":383,"line_end":383,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":14652,"byte_end":14655,"line_start":384,"line_end":384,"column_start":1,"column_end":4}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":14656,"byte_end":14659,"line_start":385,"line_end":385,"column_start":1,"column_end":4}},{"value":"/ The default memory order of an array is *row major* order (a.k.a “c” order),","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":14660,"byte_end":14744,"line_start":386,"line_end":386,"column_start":1,"column_end":81}},{"value":"/ where each row is contiguous in memory.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":14745,"byte_end":14788,"line_start":387,"line_end":387,"column_start":1,"column_end":44}},{"value":"/ A *column major* (a.k.a. “f” or fortran) memory order array has","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":14789,"byte_end":14860,"line_start":388,"line_end":388,"column_start":1,"column_end":68}},{"value":"/ columns (or, in general, the outermost axis) with contiguous elements.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":14861,"byte_end":14935,"line_start":389,"line_end":389,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":14936,"byte_end":14939,"line_start":390,"line_end":390,"column_start":1,"column_end":4}},{"value":"/ The logical order of any array’s elements is the row major order","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":14940,"byte_end":15010,"line_start":391,"line_end":391,"column_start":1,"column_end":69}},{"value":"/ (the rightmost index is varying the fastest).","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":15011,"byte_end":15060,"line_start":392,"line_end":392,"column_start":1,"column_end":50}},{"value":"/ The iterators `.iter(), .iter_mut()` always adhere to this order, for example.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":15061,"byte_end":15143,"line_start":393,"line_end":393,"column_start":1,"column_end":83}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":15144,"byte_end":15147,"line_start":394,"line_end":394,"column_start":1,"column_end":4}},{"value":"/ ## Loops, Producers and Iterators","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":15148,"byte_end":15185,"line_start":395,"line_end":395,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":15186,"byte_end":15189,"line_start":396,"line_end":396,"column_start":1,"column_end":4}},{"value":"/ Using [`Zip`](struct.Zip.html) is the most general way to apply a procedure","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":15190,"byte_end":15269,"line_start":397,"line_end":397,"column_start":1,"column_end":80}},{"value":"/ across one or several arrays or *producers*.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":15270,"byte_end":15318,"line_start":398,"line_end":398,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":15319,"byte_end":15322,"line_start":399,"line_end":399,"column_start":1,"column_end":4}},{"value":"/ [`NdProducer`](trait.NdProducer.html) is like an iterable but for","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":15323,"byte_end":15392,"line_start":400,"line_end":400,"column_start":1,"column_end":70}},{"value":"/ multidimensional data. All producers have dimensions and axes, like an","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":15393,"byte_end":15467,"line_start":401,"line_end":401,"column_start":1,"column_end":75}},{"value":"/ array view, and they can be split and used with parallelization using `Zip`.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":15468,"byte_end":15548,"line_start":402,"line_end":402,"column_start":1,"column_end":81}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":15549,"byte_end":15552,"line_start":403,"line_end":403,"column_start":1,"column_end":4}},{"value":"/ For example, `ArrayView<A, D>` is a producer, it has the same dimensions","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":15553,"byte_end":15629,"line_start":404,"line_end":404,"column_start":1,"column_end":77}},{"value":"/ as the array view and for each iteration it produces a reference to","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":15630,"byte_end":15701,"line_start":405,"line_end":405,"column_start":1,"column_end":72}},{"value":"/ the array element (`&A` in this case).","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":15702,"byte_end":15744,"line_start":406,"line_end":406,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":15745,"byte_end":15748,"line_start":407,"line_end":407,"column_start":1,"column_end":4}},{"value":"/ Another example, if we have a 10 × 10 array and use `.exact_chunks((2, 2))`","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":15749,"byte_end":15829,"line_start":408,"line_end":408,"column_start":1,"column_end":80}},{"value":"/ we get a producer of chunks which has the dimensions 5 × 5 (because","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":15830,"byte_end":15902,"line_start":409,"line_end":409,"column_start":1,"column_end":72}},{"value":"/ there are *10 / 2 = 5* chunks in either direction). The 5 × 5 chunks producer","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":15903,"byte_end":15985,"line_start":410,"line_end":410,"column_start":1,"column_end":82}},{"value":"/ can be paired with any other producers of the same dimension with `Zip`, for","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":15986,"byte_end":16066,"line_start":411,"line_end":411,"column_start":1,"column_end":81}},{"value":"/ example 5 × 5 arrays.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":16067,"byte_end":16093,"line_start":412,"line_end":412,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":16094,"byte_end":16097,"line_start":413,"line_end":413,"column_start":1,"column_end":4}},{"value":"/ ### `.iter()` and `.iter_mut()`","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":16098,"byte_end":16133,"line_start":414,"line_end":414,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":16134,"byte_end":16137,"line_start":415,"line_end":415,"column_start":1,"column_end":4}},{"value":"/ These are the element iterators of arrays and they produce an element","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":16138,"byte_end":16211,"line_start":416,"line_end":416,"column_start":1,"column_end":74}},{"value":"/ sequence in the logical order of the array, that means that the elements","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":16212,"byte_end":16288,"line_start":417,"line_end":417,"column_start":1,"column_end":77}},{"value":"/ will be visited in the sequence that corresponds to increasing the","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":16289,"byte_end":16359,"line_start":418,"line_end":418,"column_start":1,"column_end":71}},{"value":"/ last index first: *0, ..., 0,  0*; *0, ..., 0, 1*; *0, ...0, 2* and so on.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":16360,"byte_end":16438,"line_start":419,"line_end":419,"column_start":1,"column_end":79}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":16439,"byte_end":16442,"line_start":420,"line_end":420,"column_start":1,"column_end":4}},{"value":"/ ### `.outer_iter()` and `.axis_iter()`","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":16443,"byte_end":16485,"line_start":421,"line_end":421,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":16486,"byte_end":16489,"line_start":422,"line_end":422,"column_start":1,"column_end":4}},{"value":"/ These iterators produce array views of one smaller dimension.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":16490,"byte_end":16555,"line_start":423,"line_end":423,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":16556,"byte_end":16559,"line_start":424,"line_end":424,"column_start":1,"column_end":4}},{"value":"/ For example, for a 2D array, `.outer_iter()` will produce the 1D rows.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":16560,"byte_end":16634,"line_start":425,"line_end":425,"column_start":1,"column_end":75}},{"value":"/ For a 3D array, `.outer_iter()` produces 2D subviews.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":16635,"byte_end":16692,"line_start":426,"line_end":426,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":16693,"byte_end":16696,"line_start":427,"line_end":427,"column_start":1,"column_end":4}},{"value":"/ `.axis_iter()` is like `outer_iter()` but allows you to pick which","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":16697,"byte_end":16767,"line_start":428,"line_end":428,"column_start":1,"column_end":71}},{"value":"/ axis to traverse.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":16768,"byte_end":16789,"line_start":429,"line_end":429,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":16790,"byte_end":16793,"line_start":430,"line_end":430,"column_start":1,"column_end":4}},{"value":"/ The `outer_iter` and `axis_iter` are one dimensional producers.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":16794,"byte_end":16861,"line_start":431,"line_end":431,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":16862,"byte_end":16865,"line_start":432,"line_end":432,"column_start":1,"column_end":4}},{"value":"/ ## `.rows()`, `.columns()` and `.lanes()`","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":16866,"byte_end":16911,"line_start":433,"line_end":433,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":16912,"byte_end":16915,"line_start":434,"line_end":434,"column_start":1,"column_end":4}},{"value":"/ [`.rows()`][gr] is a producer (and iterable) of all rows in an array.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":16916,"byte_end":16989,"line_start":435,"line_end":435,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":16990,"byte_end":16993,"line_start":436,"line_end":436,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":16994,"byte_end":17001,"line_start":437,"line_end":437,"column_start":1,"column_end":8}},{"value":"/ use ndarray::Array;","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":17002,"byte_end":17025,"line_start":438,"line_end":438,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":17026,"byte_end":17029,"line_start":439,"line_end":439,"column_start":1,"column_end":4}},{"value":"/ // 1. Loop over the rows of a 2D array","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":17030,"byte_end":17072,"line_start":440,"line_end":440,"column_start":1,"column_end":43}},{"value":"/ let mut a = Array::zeros((10, 10));","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":17073,"byte_end":17112,"line_start":441,"line_end":441,"column_start":1,"column_end":40}},{"value":"/ for mut row in a.rows_mut() {","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":17113,"byte_end":17146,"line_start":442,"line_end":442,"column_start":1,"column_end":34}},{"value":"/     row.fill(1.);","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":17147,"byte_end":17168,"line_start":443,"line_end":443,"column_start":1,"column_end":22}},{"value":"/ }","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":17169,"byte_end":17174,"line_start":444,"line_end":444,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":17175,"byte_end":17178,"line_start":445,"line_end":445,"column_start":1,"column_end":4}},{"value":"/ // 2. Use Zip to pair each row in 2D `a` with elements in 1D `b`","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":17179,"byte_end":17247,"line_start":446,"line_end":446,"column_start":1,"column_end":69}},{"value":"/ use ndarray::Zip;","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":17248,"byte_end":17269,"line_start":447,"line_end":447,"column_start":1,"column_end":22}},{"value":"/ let mut b = Array::zeros(a.nrows());","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":17270,"byte_end":17310,"line_start":448,"line_end":448,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":17311,"byte_end":17314,"line_start":449,"line_end":449,"column_start":1,"column_end":4}},{"value":"/ Zip::from(a.rows())","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":17315,"byte_end":17338,"line_start":450,"line_end":450,"column_start":1,"column_end":24}},{"value":"/     .and(&mut b)","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":17339,"byte_end":17359,"line_start":451,"line_end":451,"column_start":1,"column_end":21}},{"value":"/     .for_each(|a_row, b_elt| {","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":17360,"byte_end":17394,"line_start":452,"line_end":452,"column_start":1,"column_end":35}},{"value":"/         *b_elt = a_row[a.ncols() - 1] - a_row[0];","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":17395,"byte_end":17448,"line_start":453,"line_end":453,"column_start":1,"column_end":54}},{"value":"/     });","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":17449,"byte_end":17460,"line_start":454,"line_end":454,"column_start":1,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":17461,"byte_end":17468,"line_start":455,"line_end":455,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":17469,"byte_end":17472,"line_start":456,"line_end":456,"column_start":1,"column_end":4}},{"value":"/ The *lanes* of an array are 1D segments along an axis and when pointed","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":17473,"byte_end":17547,"line_start":457,"line_end":457,"column_start":1,"column_end":75}},{"value":"/ along the last axis they are *rows*, when pointed along the first axis","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":17548,"byte_end":17622,"line_start":458,"line_end":458,"column_start":1,"column_end":75}},{"value":"/ they are *columns*.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":17623,"byte_end":17646,"line_start":459,"line_end":459,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":17647,"byte_end":17650,"line_start":460,"line_end":460,"column_start":1,"column_end":4}},{"value":"/ A *m* × *n* array has *m* rows each of length *n* and conversely","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":17651,"byte_end":17720,"line_start":461,"line_end":461,"column_start":1,"column_end":69}},{"value":"/ *n* columns each of length *m*.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":17721,"byte_end":17756,"line_start":462,"line_end":462,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":17757,"byte_end":17760,"line_start":463,"line_end":463,"column_start":1,"column_end":4}},{"value":"/ To generalize this, we say that an array of dimension *a* × *m* × *n*","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":17761,"byte_end":17836,"line_start":464,"line_end":464,"column_start":1,"column_end":74}},{"value":"/ has *a m* rows. It's composed of *a* times the previous array, so it","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":17837,"byte_end":17909,"line_start":465,"line_end":465,"column_start":1,"column_end":73}},{"value":"/ has *a* times as many rows.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":17910,"byte_end":17941,"line_start":466,"line_end":466,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":17942,"byte_end":17945,"line_start":467,"line_end":467,"column_start":1,"column_end":4}},{"value":"/ All methods: [`.rows()`][gr], [`.rows_mut()`][grm],","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":17946,"byte_end":18001,"line_start":468,"line_end":468,"column_start":1,"column_end":56}},{"value":"/ [`.columns()`][gc], [`.columns_mut()`][gcm],","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":18002,"byte_end":18050,"line_start":469,"line_end":469,"column_start":1,"column_end":49}},{"value":"/ [`.lanes(axis)`][l], [`.lanes_mut(axis)`][lm].","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":18051,"byte_end":18101,"line_start":470,"line_end":470,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":18102,"byte_end":18105,"line_start":471,"line_end":471,"column_start":1,"column_end":4}},{"value":"/ [gr]: #method.rows","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":18106,"byte_end":18128,"line_start":472,"line_end":472,"column_start":1,"column_end":23}},{"value":"/ [grm]: #method.rows_mut","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":18129,"byte_end":18156,"line_start":473,"line_end":473,"column_start":1,"column_end":28}},{"value":"/ [gc]: #method.columns","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":18157,"byte_end":18182,"line_start":474,"line_end":474,"column_start":1,"column_end":26}},{"value":"/ [gcm]: #method.columns_mut","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":18183,"byte_end":18213,"line_start":475,"line_end":475,"column_start":1,"column_end":31}},{"value":"/ [l]: #method.lanes","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":18214,"byte_end":18236,"line_start":476,"line_end":476,"column_start":1,"column_end":23}},{"value":"/ [lm]: #method.lanes_mut","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":18237,"byte_end":18264,"line_start":477,"line_end":477,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":18265,"byte_end":18268,"line_start":478,"line_end":478,"column_start":1,"column_end":4}},{"value":"/ Yes, for 2D arrays `.rows()` and `.outer_iter()` have about the same","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":18269,"byte_end":18341,"line_start":479,"line_end":479,"column_start":1,"column_end":73}},{"value":"/ effect:","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":18342,"byte_end":18353,"line_start":480,"line_end":480,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":18354,"byte_end":18357,"line_start":481,"line_end":481,"column_start":1,"column_end":4}},{"value":"/  + `rows()` is a producer with *n* - 1 dimensions of 1 dimensional items","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":18358,"byte_end":18434,"line_start":482,"line_end":482,"column_start":1,"column_end":77}},{"value":"/  + `outer_iter()` is a producer with 1 dimension of *n* - 1 dimensional items","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":18435,"byte_end":18516,"line_start":483,"line_end":483,"column_start":1,"column_end":82}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":18517,"byte_end":18520,"line_start":484,"line_end":484,"column_start":1,"column_end":4}},{"value":"/ ## Slicing","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":18521,"byte_end":18535,"line_start":485,"line_end":485,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":18536,"byte_end":18539,"line_start":486,"line_end":486,"column_start":1,"column_end":4}},{"value":"/ You can use slicing to create a view of a subset of the data in","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":18540,"byte_end":18607,"line_start":487,"line_end":487,"column_start":1,"column_end":68}},{"value":"/ the array. Slicing methods include [`.slice()`], [`.slice_mut()`],","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":18608,"byte_end":18678,"line_start":488,"line_end":488,"column_start":1,"column_end":71}},{"value":"/ [`.slice_move()`], and [`.slice_collapse()`].","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":18679,"byte_end":18728,"line_start":489,"line_end":489,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":18729,"byte_end":18732,"line_start":490,"line_end":490,"column_start":1,"column_end":4}},{"value":"/ The slicing argument can be passed using the macro [`s![]`](macro.s!.html),","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":18733,"byte_end":18812,"line_start":491,"line_end":491,"column_start":1,"column_end":80}},{"value":"/ which will be used in all examples. (The explicit form is an instance of","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":18813,"byte_end":18889,"line_start":492,"line_end":492,"column_start":1,"column_end":77}},{"value":"/ [`SliceInfo`] or another type which implements [`SliceArg`]; see their docs","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":18890,"byte_end":18969,"line_start":493,"line_end":493,"column_start":1,"column_end":80}},{"value":"/ for more information.)","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":18970,"byte_end":18996,"line_start":494,"line_end":494,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":18997,"byte_end":19000,"line_start":495,"line_end":495,"column_start":1,"column_end":4}},{"value":"/ If a range is used, the axis is preserved. If an index is used, that index","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":19001,"byte_end":19079,"line_start":496,"line_end":496,"column_start":1,"column_end":79}},{"value":"/ is selected and the axis is removed; this selects a subview. See","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":19080,"byte_end":19148,"line_start":497,"line_end":497,"column_start":1,"column_end":69}},{"value":"/ [*Subviews*](#subviews) for more information about subviews. If a","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":19149,"byte_end":19218,"line_start":498,"line_end":498,"column_start":1,"column_end":70}},{"value":"/ [`NewAxis`] instance is used, a new axis is inserted. Note that","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":19219,"byte_end":19286,"line_start":499,"line_end":499,"column_start":1,"column_end":68}},{"value":"/ [`.slice_collapse()`] panics on `NewAxis` elements and behaves like","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":19287,"byte_end":19358,"line_start":500,"line_end":500,"column_start":1,"column_end":72}},{"value":"/ [`.collapse_axis()`] by preserving the number of dimensions.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":19359,"byte_end":19423,"line_start":501,"line_end":501,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":19424,"byte_end":19427,"line_start":502,"line_end":502,"column_start":1,"column_end":4}},{"value":"/ [`.slice()`]: #method.slice","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":19428,"byte_end":19459,"line_start":503,"line_end":503,"column_start":1,"column_end":32}},{"value":"/ [`.slice_mut()`]: #method.slice_mut","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":19460,"byte_end":19499,"line_start":504,"line_end":504,"column_start":1,"column_end":40}},{"value":"/ [`.slice_move()`]: #method.slice_move","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":19500,"byte_end":19541,"line_start":505,"line_end":505,"column_start":1,"column_end":42}},{"value":"/ [`.slice_collapse()`]: #method.slice_collapse","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":19542,"byte_end":19591,"line_start":506,"line_end":506,"column_start":1,"column_end":50}},{"value":"/ [`NewAxis`]: struct.NewAxis.html","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":19592,"byte_end":19628,"line_start":507,"line_end":507,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":19629,"byte_end":19632,"line_start":508,"line_end":508,"column_start":1,"column_end":4}},{"value":"/ When slicing arrays with generic dimensionality, creating an instance of","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":19633,"byte_end":19709,"line_start":509,"line_end":509,"column_start":1,"column_end":77}},{"value":"/ [`SliceInfo`] to pass to the multi-axis slicing methods like [`.slice()`]","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":19710,"byte_end":19787,"line_start":510,"line_end":510,"column_start":1,"column_end":78}},{"value":"/ is awkward. In these cases, it's usually more convenient to use","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":19788,"byte_end":19855,"line_start":511,"line_end":511,"column_start":1,"column_end":68}},{"value":"/ [`.slice_each_axis()`]/[`.slice_each_axis_mut()`]/[`.slice_each_axis_inplace()`]","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":19856,"byte_end":19940,"line_start":512,"line_end":512,"column_start":1,"column_end":85}},{"value":"/ or to create a view and then slice individual axes of the view using","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":19941,"byte_end":20013,"line_start":513,"line_end":513,"column_start":1,"column_end":73}},{"value":"/ methods such as [`.slice_axis_inplace()`] and [`.collapse_axis()`].","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":20014,"byte_end":20085,"line_start":514,"line_end":514,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":20086,"byte_end":20089,"line_start":515,"line_end":515,"column_start":1,"column_end":4}},{"value":"/ [`.slice_each_axis()`]: #method.slice_each_axis","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":20090,"byte_end":20141,"line_start":516,"line_end":516,"column_start":1,"column_end":52}},{"value":"/ [`.slice_each_axis_mut()`]: #method.slice_each_axis_mut","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":20142,"byte_end":20201,"line_start":517,"line_end":517,"column_start":1,"column_end":60}},{"value":"/ [`.slice_each_axis_inplace()`]: #method.slice_each_axis_inplace","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":20202,"byte_end":20269,"line_start":518,"line_end":518,"column_start":1,"column_end":68}},{"value":"/ [`.slice_axis_inplace()`]: #method.slice_axis_inplace","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":20270,"byte_end":20327,"line_start":519,"line_end":519,"column_start":1,"column_end":58}},{"value":"/ [`.collapse_axis()`]: #method.collapse_axis","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":20328,"byte_end":20375,"line_start":520,"line_end":520,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":20376,"byte_end":20379,"line_start":521,"line_end":521,"column_start":1,"column_end":4}},{"value":"/ It's possible to take multiple simultaneous *mutable* slices with","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":20380,"byte_end":20449,"line_start":522,"line_end":522,"column_start":1,"column_end":70}},{"value":"/ [`.multi_slice_mut()`] or (for [`ArrayViewMut`] only)","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":20450,"byte_end":20507,"line_start":523,"line_end":523,"column_start":1,"column_end":58}},{"value":"/ [`.multi_slice_move()`].","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":20508,"byte_end":20536,"line_start":524,"line_end":524,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":20537,"byte_end":20540,"line_start":525,"line_end":525,"column_start":1,"column_end":4}},{"value":"/ [`.multi_slice_mut()`]: #method.multi_slice_mut","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":20541,"byte_end":20592,"line_start":526,"line_end":526,"column_start":1,"column_end":52}},{"value":"/ [`.multi_slice_move()`]: type.ArrayViewMut.html#method.multi_slice_move","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":20593,"byte_end":20668,"line_start":527,"line_end":527,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":20669,"byte_end":20672,"line_start":528,"line_end":528,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":20673,"byte_end":20680,"line_start":529,"line_end":529,"column_start":1,"column_end":8}},{"value":"/ use ndarray::{arr2, arr3, s, ArrayBase, DataMut, Dimension, NewAxis, Slice};","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":20681,"byte_end":20761,"line_start":530,"line_end":530,"column_start":1,"column_end":81}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":20762,"byte_end":20765,"line_start":531,"line_end":531,"column_start":1,"column_end":4}},{"value":"/ // 2 submatrices of 2 rows with 3 elements per row, means a shape of `[2, 2, 3]`.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":20766,"byte_end":20851,"line_start":532,"line_end":532,"column_start":1,"column_end":86}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":20852,"byte_end":20855,"line_start":533,"line_end":533,"column_start":1,"column_end":4}},{"value":"/ let a = arr3(&[[[ 1,  2,  3],     // -- 2 rows  \\_","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":20856,"byte_end":20910,"line_start":534,"line_end":534,"column_start":1,"column_end":55}},{"value":"/                 [ 4,  5,  6]],    // --         /","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":20911,"byte_end":20964,"line_start":535,"line_end":535,"column_start":1,"column_end":54}},{"value":"/                [[ 7,  8,  9],     //            \\_ 2 submatrices","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":20965,"byte_end":21033,"line_start":536,"line_end":536,"column_start":1,"column_end":69}},{"value":"/                 [10, 11, 12]]]);  //            /","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":21034,"byte_end":21087,"line_start":537,"line_end":537,"column_start":1,"column_end":54}},{"value":"/ //  3 columns ..../.../.../","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":21088,"byte_end":21119,"line_start":538,"line_end":538,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":21120,"byte_end":21123,"line_start":539,"line_end":539,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(a.shape(), &[2, 2, 3]);","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":21124,"byte_end":21162,"line_start":540,"line_end":540,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":21163,"byte_end":21166,"line_start":541,"line_end":541,"column_start":1,"column_end":4}},{"value":"/ // Let’s create a slice with","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":21167,"byte_end":21201,"line_start":542,"line_end":542,"column_start":1,"column_end":33}},{"value":"/ //","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":21202,"byte_end":21208,"line_start":543,"line_end":543,"column_start":1,"column_end":7}},{"value":"/ // - Both of the submatrices of the greatest dimension: `..`","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":21209,"byte_end":21273,"line_start":544,"line_end":544,"column_start":1,"column_end":65}},{"value":"/ // - Only the first row in each submatrix: `0..1`","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":21274,"byte_end":21327,"line_start":545,"line_end":545,"column_start":1,"column_end":54}},{"value":"/ // - Every element in each row: `..`","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":21328,"byte_end":21368,"line_start":546,"line_end":546,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":21369,"byte_end":21372,"line_start":547,"line_end":547,"column_start":1,"column_end":4}},{"value":"/ let b = a.slice(s![.., 0..1, ..]);","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":21373,"byte_end":21411,"line_start":548,"line_end":548,"column_start":1,"column_end":39}},{"value":"/ let c = arr3(&[[[ 1,  2,  3]],","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":21412,"byte_end":21446,"line_start":549,"line_end":549,"column_start":1,"column_end":35}},{"value":"/                [[ 7,  8,  9]]]);","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":21447,"byte_end":21483,"line_start":550,"line_end":550,"column_start":1,"column_end":37}},{"value":"/ assert_eq!(b, c);","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":21484,"byte_end":21505,"line_start":551,"line_end":551,"column_start":1,"column_end":22}},{"value":"/ assert_eq!(b.shape(), &[2, 1, 3]);","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":21506,"byte_end":21544,"line_start":552,"line_end":552,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":21545,"byte_end":21548,"line_start":553,"line_end":553,"column_start":1,"column_end":4}},{"value":"/ // Let’s create a slice with","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":21549,"byte_end":21583,"line_start":554,"line_end":554,"column_start":1,"column_end":33}},{"value":"/ //","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":21584,"byte_end":21590,"line_start":555,"line_end":555,"column_start":1,"column_end":7}},{"value":"/ // - Both submatrices of the greatest dimension: `..`","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":21591,"byte_end":21648,"line_start":556,"line_end":556,"column_start":1,"column_end":58}},{"value":"/ // - The last row in each submatrix: `-1..`","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":21649,"byte_end":21696,"line_start":557,"line_end":557,"column_start":1,"column_end":48}},{"value":"/ // - Row elements in reverse order: `..;-1`","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":21697,"byte_end":21744,"line_start":558,"line_end":558,"column_start":1,"column_end":48}},{"value":"/ let d = a.slice(s![.., -1.., ..;-1]);","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":21745,"byte_end":21786,"line_start":559,"line_end":559,"column_start":1,"column_end":42}},{"value":"/ let e = arr3(&[[[ 6,  5,  4]],","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":21787,"byte_end":21821,"line_start":560,"line_end":560,"column_start":1,"column_end":35}},{"value":"/                [[12, 11, 10]]]);","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":21822,"byte_end":21858,"line_start":561,"line_end":561,"column_start":1,"column_end":37}},{"value":"/ assert_eq!(d, e);","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":21859,"byte_end":21880,"line_start":562,"line_end":562,"column_start":1,"column_end":22}},{"value":"/ assert_eq!(d.shape(), &[2, 1, 3]);","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":21881,"byte_end":21919,"line_start":563,"line_end":563,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":21920,"byte_end":21923,"line_start":564,"line_end":564,"column_start":1,"column_end":4}},{"value":"/ // Let’s create a slice while selecting a subview and inserting a new axis with","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":21924,"byte_end":22009,"line_start":565,"line_end":565,"column_start":1,"column_end":84}},{"value":"/ //","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":22010,"byte_end":22016,"line_start":566,"line_end":566,"column_start":1,"column_end":7}},{"value":"/ // - Both submatrices of the greatest dimension: `..`","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":22017,"byte_end":22074,"line_start":567,"line_end":567,"column_start":1,"column_end":58}},{"value":"/ // - The last row in each submatrix, removing that axis: `-1`","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":22075,"byte_end":22140,"line_start":568,"line_end":568,"column_start":1,"column_end":66}},{"value":"/ // - Row elements in reverse order: `..;-1`","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":22141,"byte_end":22188,"line_start":569,"line_end":569,"column_start":1,"column_end":48}},{"value":"/ // - A new axis at the end.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":22189,"byte_end":22220,"line_start":570,"line_end":570,"column_start":1,"column_end":32}},{"value":"/ let f = a.slice(s![.., -1, ..;-1, NewAxis]);","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":22221,"byte_end":22269,"line_start":571,"line_end":571,"column_start":1,"column_end":49}},{"value":"/ let g = arr3(&[[ [6],  [5],  [4]],","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":22270,"byte_end":22308,"line_start":572,"line_end":572,"column_start":1,"column_end":39}},{"value":"/                [[12], [11], [10]]]);","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":22309,"byte_end":22349,"line_start":573,"line_end":573,"column_start":1,"column_end":41}},{"value":"/ assert_eq!(f, g);","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":22350,"byte_end":22371,"line_start":574,"line_end":574,"column_start":1,"column_end":22}},{"value":"/ assert_eq!(f.shape(), &[2, 3, 1]);","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":22372,"byte_end":22410,"line_start":575,"line_end":575,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":22411,"byte_end":22414,"line_start":576,"line_end":576,"column_start":1,"column_end":4}},{"value":"/ // Let's take two disjoint, mutable slices of a matrix with","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":22415,"byte_end":22478,"line_start":577,"line_end":577,"column_start":1,"column_end":64}},{"value":"/ //","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":22479,"byte_end":22485,"line_start":578,"line_end":578,"column_start":1,"column_end":7}},{"value":"/ // - One containing all the even-index columns in the matrix","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":22486,"byte_end":22550,"line_start":579,"line_end":579,"column_start":1,"column_end":65}},{"value":"/ // - One containing all the odd-index columns in the matrix","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":22551,"byte_end":22614,"line_start":580,"line_end":580,"column_start":1,"column_end":64}},{"value":"/ let mut h = arr2(&[[0, 1, 2, 3],","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":22615,"byte_end":22651,"line_start":581,"line_end":581,"column_start":1,"column_end":37}},{"value":"/                    [4, 5, 6, 7]]);","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":22652,"byte_end":22690,"line_start":582,"line_end":582,"column_start":1,"column_end":39}},{"value":"/ let (s0, s1) = h.multi_slice_mut((s![.., ..;2], s![.., 1..;2]));","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":22691,"byte_end":22759,"line_start":583,"line_end":583,"column_start":1,"column_end":69}},{"value":"/ let i = arr2(&[[0, 2],","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":22760,"byte_end":22786,"line_start":584,"line_end":584,"column_start":1,"column_end":27}},{"value":"/                [4, 6]]);","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":22787,"byte_end":22815,"line_start":585,"line_end":585,"column_start":1,"column_end":29}},{"value":"/ let j = arr2(&[[1, 3],","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":22816,"byte_end":22842,"line_start":586,"line_end":586,"column_start":1,"column_end":27}},{"value":"/                [5, 7]]);","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":22843,"byte_end":22871,"line_start":587,"line_end":587,"column_start":1,"column_end":29}},{"value":"/ assert_eq!(s0, i);","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":22872,"byte_end":22894,"line_start":588,"line_end":588,"column_start":1,"column_end":23}},{"value":"/ assert_eq!(s1, j);","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":22895,"byte_end":22917,"line_start":589,"line_end":589,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":22918,"byte_end":22921,"line_start":590,"line_end":590,"column_start":1,"column_end":4}},{"value":"/ // Generic function which assigns the specified value to the elements which","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":22922,"byte_end":23001,"line_start":591,"line_end":591,"column_start":1,"column_end":80}},{"value":"/ // have indices in the lower half along all axes.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":23002,"byte_end":23055,"line_start":592,"line_end":592,"column_start":1,"column_end":54}},{"value":"/ fn fill_lower<S, D>(arr: &mut ArrayBase<S, D>, x: S::Elem)","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":23056,"byte_end":23118,"line_start":593,"line_end":593,"column_start":1,"column_end":63}},{"value":"/ where","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":23119,"byte_end":23128,"line_start":594,"line_end":594,"column_start":1,"column_end":10}},{"value":"/     S: DataMut,","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":23129,"byte_end":23148,"line_start":595,"line_end":595,"column_start":1,"column_end":20}},{"value":"/     S::Elem: Clone,","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":23149,"byte_end":23172,"line_start":596,"line_end":596,"column_start":1,"column_end":24}},{"value":"/     D: Dimension,","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":23173,"byte_end":23194,"line_start":597,"line_end":597,"column_start":1,"column_end":22}},{"value":"/ {","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":23195,"byte_end":23200,"line_start":598,"line_end":598,"column_start":1,"column_end":6}},{"value":"/     arr.slice_each_axis_mut(|ax| Slice::from(0..ax.len / 2)).fill(x);","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":23201,"byte_end":23274,"line_start":599,"line_end":599,"column_start":1,"column_end":74}},{"value":"/ }","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":23275,"byte_end":23280,"line_start":600,"line_end":600,"column_start":1,"column_end":6}},{"value":"/ fill_lower(&mut h, 9);","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":23281,"byte_end":23307,"line_start":601,"line_end":601,"column_start":1,"column_end":27}},{"value":"/ let k = arr2(&[[9, 9, 2, 3],","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":23308,"byte_end":23340,"line_start":602,"line_end":602,"column_start":1,"column_end":33}},{"value":"/                [4, 5, 6, 7]]);","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":23341,"byte_end":23375,"line_start":603,"line_end":603,"column_start":1,"column_end":35}},{"value":"/ assert_eq!(h, k);","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":23376,"byte_end":23397,"line_start":604,"line_end":604,"column_start":1,"column_end":22}},{"value":"/ ```","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":23398,"byte_end":23405,"line_start":605,"line_end":605,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":23406,"byte_end":23409,"line_start":606,"line_end":606,"column_start":1,"column_end":4}},{"value":"/ ## Subviews","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":23410,"byte_end":23425,"line_start":607,"line_end":607,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":23426,"byte_end":23429,"line_start":608,"line_end":608,"column_start":1,"column_end":4}},{"value":"/ Subview methods allow you to restrict the array view while removing one","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":23430,"byte_end":23505,"line_start":609,"line_end":609,"column_start":1,"column_end":76}},{"value":"/ axis from the array. Methods for selecting individual subviews include","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":23506,"byte_end":23580,"line_start":610,"line_end":610,"column_start":1,"column_end":75}},{"value":"/ [`.index_axis()`], [`.index_axis_mut()`], [`.index_axis_move()`], and","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":23581,"byte_end":23654,"line_start":611,"line_end":611,"column_start":1,"column_end":74}},{"value":"/ [`.index_axis_inplace()`]. You can also select a subview by using a single","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":23655,"byte_end":23733,"line_start":612,"line_end":612,"column_start":1,"column_end":79}},{"value":"/ index instead of a range when slicing. Some other methods, such as","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":23734,"byte_end":23804,"line_start":613,"line_end":613,"column_start":1,"column_end":71}},{"value":"/ [`.fold_axis()`], [`.axis_iter()`], [`.axis_iter_mut()`],","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":23805,"byte_end":23866,"line_start":614,"line_end":614,"column_start":1,"column_end":62}},{"value":"/ [`.outer_iter()`], and [`.outer_iter_mut()`] operate on all the subviews","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":23867,"byte_end":23943,"line_start":615,"line_end":615,"column_start":1,"column_end":77}},{"value":"/ along an axis.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":23944,"byte_end":23962,"line_start":616,"line_end":616,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":23963,"byte_end":23966,"line_start":617,"line_end":617,"column_start":1,"column_end":4}},{"value":"/ A related method is [`.collapse_axis()`], which modifies the view in the","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":23967,"byte_end":24043,"line_start":618,"line_end":618,"column_start":1,"column_end":77}},{"value":"/ same way as [`.index_axis()`] except for removing the collapsed axis, since","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":24044,"byte_end":24123,"line_start":619,"line_end":619,"column_start":1,"column_end":80}},{"value":"/ it operates *in place*. The length of the axis becomes 1.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":24124,"byte_end":24185,"line_start":620,"line_end":620,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":24186,"byte_end":24189,"line_start":621,"line_end":621,"column_start":1,"column_end":4}},{"value":"/ Methods for selecting an individual subview take two arguments: `axis` and","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":24190,"byte_end":24268,"line_start":622,"line_end":622,"column_start":1,"column_end":79}},{"value":"/ `index`.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":24269,"byte_end":24281,"line_start":623,"line_end":623,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":24282,"byte_end":24285,"line_start":624,"line_end":624,"column_start":1,"column_end":4}},{"value":"/ [`.axis_iter()`]: #method.axis_iter","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":24286,"byte_end":24325,"line_start":625,"line_end":625,"column_start":1,"column_end":40}},{"value":"/ [`.axis_iter_mut()`]: #method.axis_iter_mut","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":24326,"byte_end":24373,"line_start":626,"line_end":626,"column_start":1,"column_end":48}},{"value":"/ [`.fold_axis()`]: #method.fold_axis","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":24374,"byte_end":24413,"line_start":627,"line_end":627,"column_start":1,"column_end":40}},{"value":"/ [`.index_axis()`]: #method.index_axis","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":24414,"byte_end":24455,"line_start":628,"line_end":628,"column_start":1,"column_end":42}},{"value":"/ [`.index_axis_inplace()`]: #method.index_axis_inplace","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":24456,"byte_end":24513,"line_start":629,"line_end":629,"column_start":1,"column_end":58}},{"value":"/ [`.index_axis_mut()`]: #method.index_axis_mut","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":24514,"byte_end":24563,"line_start":630,"line_end":630,"column_start":1,"column_end":50}},{"value":"/ [`.index_axis_move()`]: #method.index_axis_move","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":24564,"byte_end":24615,"line_start":631,"line_end":631,"column_start":1,"column_end":52}},{"value":"/ [`.collapse_axis()`]: #method.collapse_axis","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":24616,"byte_end":24663,"line_start":632,"line_end":632,"column_start":1,"column_end":48}},{"value":"/ [`.outer_iter()`]: #method.outer_iter","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":24664,"byte_end":24705,"line_start":633,"line_end":633,"column_start":1,"column_end":42}},{"value":"/ [`.outer_iter_mut()`]: #method.outer_iter_mut","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":24706,"byte_end":24755,"line_start":634,"line_end":634,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":24756,"byte_end":24759,"line_start":635,"line_end":635,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":24760,"byte_end":24767,"line_start":636,"line_end":636,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":24768,"byte_end":24771,"line_start":637,"line_end":637,"column_start":1,"column_end":4}},{"value":"/ use ndarray::{arr3, aview1, aview2, s, Axis};","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":24772,"byte_end":24821,"line_start":638,"line_end":638,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":24822,"byte_end":24825,"line_start":639,"line_end":639,"column_start":1,"column_end":4}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":24826,"byte_end":24829,"line_start":640,"line_end":640,"column_start":1,"column_end":4}},{"value":"/ // 2 submatrices of 2 rows with 3 elements per row, means a shape of `[2, 2, 3]`.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":24830,"byte_end":24915,"line_start":641,"line_end":641,"column_start":1,"column_end":86}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":24916,"byte_end":24919,"line_start":642,"line_end":642,"column_start":1,"column_end":4}},{"value":"/ let a = arr3(&[[[ 1,  2,  3],    // \\ axis 0, submatrix 0","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":24920,"byte_end":24981,"line_start":643,"line_end":643,"column_start":1,"column_end":62}},{"value":"/                 [ 4,  5,  6]],   // /","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":24982,"byte_end":25023,"line_start":644,"line_end":644,"column_start":1,"column_end":42}},{"value":"/                [[ 7,  8,  9],    // \\ axis 0, submatrix 1","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":25024,"byte_end":25085,"line_start":645,"line_end":645,"column_start":1,"column_end":62}},{"value":"/                 [10, 11, 12]]]); // /","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":25086,"byte_end":25127,"line_start":646,"line_end":646,"column_start":1,"column_end":42}},{"value":"/         //        \\","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":25128,"byte_end":25151,"line_start":647,"line_end":647,"column_start":1,"column_end":24}},{"value":"/         //         axis 2, column 0","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":25152,"byte_end":25191,"line_start":648,"line_end":648,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":25192,"byte_end":25195,"line_start":649,"line_end":649,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(a.shape(), &[2, 2, 3]);","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":25196,"byte_end":25234,"line_start":650,"line_end":650,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":25235,"byte_end":25238,"line_start":651,"line_end":651,"column_start":1,"column_end":4}},{"value":"/ // Let’s take a subview along the greatest dimension (axis 0),","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":25239,"byte_end":25307,"line_start":652,"line_end":652,"column_start":1,"column_end":67}},{"value":"/ // taking submatrix 0, then submatrix 1","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":25308,"byte_end":25351,"line_start":653,"line_end":653,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":25352,"byte_end":25355,"line_start":654,"line_end":654,"column_start":1,"column_end":4}},{"value":"/ let sub_0 = a.index_axis(Axis(0), 0);","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":25356,"byte_end":25397,"line_start":655,"line_end":655,"column_start":1,"column_end":42}},{"value":"/ let sub_1 = a.index_axis(Axis(0), 1);","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":25398,"byte_end":25439,"line_start":656,"line_end":656,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":25440,"byte_end":25443,"line_start":657,"line_end":657,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(sub_0, aview2(&[[ 1,  2,  3],","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":25444,"byte_end":25488,"line_start":658,"line_end":658,"column_start":1,"column_end":45}},{"value":"/                            [ 4,  5,  6]]));","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":25489,"byte_end":25536,"line_start":659,"line_end":659,"column_start":1,"column_end":48}},{"value":"/ assert_eq!(sub_1, aview2(&[[ 7,  8,  9],","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":25537,"byte_end":25581,"line_start":660,"line_end":660,"column_start":1,"column_end":45}},{"value":"/                            [10, 11, 12]]));","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":25582,"byte_end":25629,"line_start":661,"line_end":661,"column_start":1,"column_end":48}},{"value":"/ assert_eq!(sub_0.shape(), &[2, 3]);","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":25630,"byte_end":25669,"line_start":662,"line_end":662,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":25670,"byte_end":25673,"line_start":663,"line_end":663,"column_start":1,"column_end":4}},{"value":"/ // This is the subview picking only axis 2, column 0","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":25674,"byte_end":25730,"line_start":664,"line_end":664,"column_start":1,"column_end":57}},{"value":"/ let sub_col = a.index_axis(Axis(2), 0);","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":25731,"byte_end":25774,"line_start":665,"line_end":665,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":25775,"byte_end":25778,"line_start":666,"line_end":666,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(sub_col, aview2(&[[ 1,  4],","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":25779,"byte_end":25821,"line_start":667,"line_end":667,"column_start":1,"column_end":43}},{"value":"/                              [ 7, 10]]));","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":25822,"byte_end":25867,"line_start":668,"line_end":668,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":25868,"byte_end":25871,"line_start":669,"line_end":669,"column_start":1,"column_end":4}},{"value":"/ // You can take multiple subviews at once (and slice at the same time)","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":25872,"byte_end":25946,"line_start":670,"line_end":670,"column_start":1,"column_end":75}},{"value":"/ let double_sub = a.slice(s![1, .., 0]);","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":25947,"byte_end":25990,"line_start":671,"line_end":671,"column_start":1,"column_end":44}},{"value":"/ assert_eq!(double_sub, aview1(&[7, 10]));","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":25991,"byte_end":26036,"line_start":672,"line_end":672,"column_start":1,"column_end":46}},{"value":"/ ```","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":26037,"byte_end":26044,"line_start":673,"line_end":673,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":26045,"byte_end":26048,"line_start":674,"line_end":674,"column_start":1,"column_end":4}},{"value":"/ ## Arithmetic Operations","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":26049,"byte_end":26077,"line_start":675,"line_end":675,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":26078,"byte_end":26081,"line_start":676,"line_end":676,"column_start":1,"column_end":4}},{"value":"/ Arrays support all arithmetic operations the same way: they apply elementwise.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":26082,"byte_end":26164,"line_start":677,"line_end":677,"column_start":1,"column_end":83}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":26165,"byte_end":26168,"line_start":678,"line_end":678,"column_start":1,"column_end":4}},{"value":"/ Since the trait implementations are hard to overview, here is a summary.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":26169,"byte_end":26245,"line_start":679,"line_end":679,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":26246,"byte_end":26249,"line_start":680,"line_end":680,"column_start":1,"column_end":4}},{"value":"/ ### Binary Operators with Two Arrays","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":26250,"byte_end":26290,"line_start":681,"line_end":681,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":26291,"byte_end":26294,"line_start":682,"line_end":682,"column_start":1,"column_end":4}},{"value":"/ Let `A` be an array or view of any kind. Let `B` be an array","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":26295,"byte_end":26359,"line_start":683,"line_end":683,"column_start":1,"column_end":65}},{"value":"/ with owned storage (either `Array` or `ArcArray`).","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":26360,"byte_end":26414,"line_start":684,"line_end":684,"column_start":1,"column_end":55}},{"value":"/ Let `C` be an array with mutable data (either `Array`, `ArcArray`","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":26415,"byte_end":26484,"line_start":685,"line_end":685,"column_start":1,"column_end":70}},{"value":"/ or `ArrayViewMut`).","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":26485,"byte_end":26508,"line_start":686,"line_end":686,"column_start":1,"column_end":24}},{"value":"/ The following combinations of operands","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":26509,"byte_end":26551,"line_start":687,"line_end":687,"column_start":1,"column_end":43}},{"value":"/ are supported for an arbitrary binary operator denoted by `@` (it can be","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":26552,"byte_end":26628,"line_start":688,"line_end":688,"column_start":1,"column_end":77}},{"value":"/ `+`, `-`, `*`, `/` and so on).","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":26629,"byte_end":26663,"line_start":689,"line_end":689,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":26664,"byte_end":26667,"line_start":690,"line_end":690,"column_start":1,"column_end":4}},{"value":"/ - `&A @ &A` which produces a new `Array`","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":26668,"byte_end":26712,"line_start":691,"line_end":691,"column_start":1,"column_end":45}},{"value":"/ - `B @ A` which consumes `B`, updates it with the result, and returns it","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":26713,"byte_end":26789,"line_start":692,"line_end":692,"column_start":1,"column_end":77}},{"value":"/ - `B @ &A` which consumes `B`, updates it with the result, and returns it","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":26790,"byte_end":26867,"line_start":693,"line_end":693,"column_start":1,"column_end":78}},{"value":"/ - `C @= &A` which performs an arithmetic operation in place","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":26868,"byte_end":26931,"line_start":694,"line_end":694,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":26932,"byte_end":26935,"line_start":695,"line_end":695,"column_start":1,"column_end":4}},{"value":"/ Note that the element type needs to implement the operator trait and the","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":26936,"byte_end":27012,"line_start":696,"line_end":696,"column_start":1,"column_end":77}},{"value":"/ `Clone` trait.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":27013,"byte_end":27031,"line_start":697,"line_end":697,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":27032,"byte_end":27035,"line_start":698,"line_end":698,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":27036,"byte_end":27043,"line_start":699,"line_end":699,"column_start":1,"column_end":8}},{"value":"/ use ndarray::{array, ArrayView1};","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":27044,"byte_end":27081,"line_start":700,"line_end":700,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":27082,"byte_end":27085,"line_start":701,"line_end":701,"column_start":1,"column_end":4}},{"value":"/ let owned1 = array![1, 2];","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":27086,"byte_end":27116,"line_start":702,"line_end":702,"column_start":1,"column_end":31}},{"value":"/ let owned2 = array![3, 4];","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":27117,"byte_end":27147,"line_start":703,"line_end":703,"column_start":1,"column_end":31}},{"value":"/ let view1 = ArrayView1::from(&[5, 6]);","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":27148,"byte_end":27190,"line_start":704,"line_end":704,"column_start":1,"column_end":43}},{"value":"/ let view2 = ArrayView1::from(&[7, 8]);","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":27191,"byte_end":27233,"line_start":705,"line_end":705,"column_start":1,"column_end":43}},{"value":"/ let mut mutable = array![9, 10];","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":27234,"byte_end":27270,"line_start":706,"line_end":706,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":27271,"byte_end":27274,"line_start":707,"line_end":707,"column_start":1,"column_end":4}},{"value":"/ let sum1 = &view1 + &view2;   // Allocates a new array. Note the explicit `&`.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":27275,"byte_end":27357,"line_start":708,"line_end":708,"column_start":1,"column_end":83}},{"value":"/ // let sum2 = view1 + &view2; // This doesn't work because `view1` is not an owned array.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":27358,"byte_end":27451,"line_start":709,"line_end":709,"column_start":1,"column_end":94}},{"value":"/ let sum3 = owned1 + view1;    // Consumes `owned1`, updates it, and returns it.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":27452,"byte_end":27535,"line_start":710,"line_end":710,"column_start":1,"column_end":84}},{"value":"/ let sum4 = owned2 + &view2;   // Consumes `owned2`, updates it, and returns it.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":27536,"byte_end":27619,"line_start":711,"line_end":711,"column_start":1,"column_end":84}},{"value":"/ mutable += &view2;            // Updates `mutable` in-place.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":27620,"byte_end":27684,"line_start":712,"line_end":712,"column_start":1,"column_end":65}},{"value":"/ ```","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":27685,"byte_end":27692,"line_start":713,"line_end":713,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":27693,"byte_end":27696,"line_start":714,"line_end":714,"column_start":1,"column_end":4}},{"value":"/ ### Binary Operators with Array and Scalar","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":27697,"byte_end":27743,"line_start":715,"line_end":715,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":27744,"byte_end":27747,"line_start":716,"line_end":716,"column_start":1,"column_end":4}},{"value":"/ The trait [`ScalarOperand`](trait.ScalarOperand.html) marks types that can be used in arithmetic","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":27748,"byte_end":27848,"line_start":717,"line_end":717,"column_start":1,"column_end":101}},{"value":"/ with arrays directly. For a scalar `K` the following combinations of operands","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":27849,"byte_end":27930,"line_start":718,"line_end":718,"column_start":1,"column_end":82}},{"value":"/ are supported (scalar can be on either the left or right side, but","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":27931,"byte_end":28001,"line_start":719,"line_end":719,"column_start":1,"column_end":71}},{"value":"/ `ScalarOperand` docs has the detailed condtions).","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":28002,"byte_end":28055,"line_start":720,"line_end":720,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":28056,"byte_end":28059,"line_start":721,"line_end":721,"column_start":1,"column_end":4}},{"value":"/ - `&A @ K` or `K @ &A` which produces a new `Array`","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":28060,"byte_end":28115,"line_start":722,"line_end":722,"column_start":1,"column_end":56}},{"value":"/ - `B @ K` or `K @ B` which consumes `B`, updates it with the result and returns it","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":28116,"byte_end":28202,"line_start":723,"line_end":723,"column_start":1,"column_end":87}},{"value":"/ - `C @= K` which performs an arithmetic operation in place","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":28203,"byte_end":28265,"line_start":724,"line_end":724,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":28266,"byte_end":28269,"line_start":725,"line_end":725,"column_start":1,"column_end":4}},{"value":"/ ### Unary Operators","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":28270,"byte_end":28293,"line_start":726,"line_end":726,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":28294,"byte_end":28297,"line_start":727,"line_end":727,"column_start":1,"column_end":4}},{"value":"/ Let `A` be an array or view of any kind. Let `B` be an array with owned","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":28298,"byte_end":28373,"line_start":728,"line_end":728,"column_start":1,"column_end":76}},{"value":"/ storage (either `Array` or `ArcArray`). The following operands are supported","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":28374,"byte_end":28454,"line_start":729,"line_end":729,"column_start":1,"column_end":81}},{"value":"/ for an arbitrary unary operator denoted by `@` (it can be `-` or `!`).","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":28455,"byte_end":28529,"line_start":730,"line_end":730,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":28530,"byte_end":28533,"line_start":731,"line_end":731,"column_start":1,"column_end":4}},{"value":"/ - `@&A` which produces a new `Array`","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":28534,"byte_end":28574,"line_start":732,"line_end":732,"column_start":1,"column_end":41}},{"value":"/ - `@B` which consumes `B`, updates it with the result, and returns it","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":28575,"byte_end":28648,"line_start":733,"line_end":733,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":28649,"byte_end":28652,"line_start":734,"line_end":734,"column_start":1,"column_end":4}},{"value":"/ ## Broadcasting","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":28653,"byte_end":28672,"line_start":735,"line_end":735,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":28673,"byte_end":28676,"line_start":736,"line_end":736,"column_start":1,"column_end":4}},{"value":"/ Arrays support limited *broadcasting*, where arithmetic operations with","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":28677,"byte_end":28752,"line_start":737,"line_end":737,"column_start":1,"column_end":76}},{"value":"/ array operands of different sizes can be carried out by repeating the","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":28753,"byte_end":28826,"line_start":738,"line_end":738,"column_start":1,"column_end":74}},{"value":"/ elements of the smaller dimension array. See","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":28827,"byte_end":28875,"line_start":739,"line_end":739,"column_start":1,"column_end":49}},{"value":"/ [`.broadcast()`](#method.broadcast) for a more detailed","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":28876,"byte_end":28935,"line_start":740,"line_end":740,"column_start":1,"column_end":60}},{"value":"/ description.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":28936,"byte_end":28952,"line_start":741,"line_end":741,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":28953,"byte_end":28956,"line_start":742,"line_end":742,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":28957,"byte_end":28964,"line_start":743,"line_end":743,"column_start":1,"column_end":8}},{"value":"/ use ndarray::arr2;","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":28965,"byte_end":28987,"line_start":744,"line_end":744,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":28988,"byte_end":28991,"line_start":745,"line_end":745,"column_start":1,"column_end":4}},{"value":"/ let a = arr2(&[[1., 1.],","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":28992,"byte_end":29020,"line_start":746,"line_end":746,"column_start":1,"column_end":29}},{"value":"/                [1., 2.],","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":29021,"byte_end":29049,"line_start":747,"line_end":747,"column_start":1,"column_end":29}},{"value":"/                [0., 3.],","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":29050,"byte_end":29078,"line_start":748,"line_end":748,"column_start":1,"column_end":29}},{"value":"/                [0., 4.]]);","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":29079,"byte_end":29109,"line_start":749,"line_end":749,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":29110,"byte_end":29113,"line_start":750,"line_end":750,"column_start":1,"column_end":4}},{"value":"/ let b = arr2(&[[0., 1.]]);","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":29114,"byte_end":29144,"line_start":751,"line_end":751,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":29145,"byte_end":29148,"line_start":752,"line_end":752,"column_start":1,"column_end":4}},{"value":"/ let c = arr2(&[[1., 2.],","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":29149,"byte_end":29177,"line_start":753,"line_end":753,"column_start":1,"column_end":29}},{"value":"/                [1., 3.],","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":29178,"byte_end":29206,"line_start":754,"line_end":754,"column_start":1,"column_end":29}},{"value":"/                [0., 4.],","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":29207,"byte_end":29235,"line_start":755,"line_end":755,"column_start":1,"column_end":29}},{"value":"/                [0., 5.]]);","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":29236,"byte_end":29266,"line_start":756,"line_end":756,"column_start":1,"column_end":31}},{"value":"/ // We can add because the shapes are compatible even if not equal.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":29267,"byte_end":29337,"line_start":757,"line_end":757,"column_start":1,"column_end":71}},{"value":"/ // The `b` array is shape 1 × 2 but acts like a 4 × 2 array.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":29338,"byte_end":29404,"line_start":758,"line_end":758,"column_start":1,"column_end":65}},{"value":"/ assert!(","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":29405,"byte_end":29417,"line_start":759,"line_end":759,"column_start":1,"column_end":13}},{"value":"/     c == a + b","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":29418,"byte_end":29436,"line_start":760,"line_end":760,"column_start":1,"column_end":19}},{"value":"/ );","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":29437,"byte_end":29443,"line_start":761,"line_end":761,"column_start":1,"column_end":7}},{"value":"/ ```","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":29444,"byte_end":29451,"line_start":762,"line_end":762,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":29452,"byte_end":29455,"line_start":763,"line_end":763,"column_start":1,"column_end":4}},{"value":"/ ## Conversions","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":29456,"byte_end":29474,"line_start":764,"line_end":764,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":29475,"byte_end":29478,"line_start":765,"line_end":765,"column_start":1,"column_end":4}},{"value":"/ ### Conversions Between Array Types","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":29479,"byte_end":29518,"line_start":766,"line_end":766,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":29519,"byte_end":29522,"line_start":767,"line_end":767,"column_start":1,"column_end":4}},{"value":"/ This table is a summary of the conversions between arrays of different","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":29523,"byte_end":29597,"line_start":768,"line_end":768,"column_start":1,"column_end":75}},{"value":"/ ownership, dimensionality, and element type. All of the conversions in this","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":29598,"byte_end":29677,"line_start":769,"line_end":769,"column_start":1,"column_end":80}},{"value":"/ table preserve the shape of the array.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":29678,"byte_end":29720,"line_start":770,"line_end":770,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":29721,"byte_end":29724,"line_start":771,"line_end":771,"column_start":1,"column_end":4}},{"value":"/ <table>","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":29725,"byte_end":29736,"line_start":772,"line_end":772,"column_start":1,"column_end":12}},{"value":"/ <tr>","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":29737,"byte_end":29745,"line_start":773,"line_end":773,"column_start":1,"column_end":9}},{"value":"/ <th rowspan=\"2\">Output</th>","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":29746,"byte_end":29777,"line_start":774,"line_end":774,"column_start":1,"column_end":32}},{"value":"/ <th colspan=\"5\">Input</th>","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":29778,"byte_end":29808,"line_start":775,"line_end":775,"column_start":1,"column_end":31}},{"value":"/ </tr>","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":29809,"byte_end":29818,"line_start":776,"line_end":776,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":29819,"byte_end":29822,"line_start":777,"line_end":777,"column_start":1,"column_end":4}},{"value":"/ <tr>","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":29823,"byte_end":29831,"line_start":778,"line_end":778,"column_start":1,"column_end":9}},{"value":"/ <td>","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":29832,"byte_end":29840,"line_start":779,"line_end":779,"column_start":1,"column_end":9}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":29841,"byte_end":29844,"line_start":780,"line_end":780,"column_start":1,"column_end":4}},{"value":"/ `Array<A, D>`","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":29845,"byte_end":29862,"line_start":781,"line_end":781,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":29863,"byte_end":29866,"line_start":782,"line_end":782,"column_start":1,"column_end":4}},{"value":"/ </td>","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":29867,"byte_end":29876,"line_start":783,"line_end":783,"column_start":1,"column_end":10}},{"value":"/ <td>","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":29877,"byte_end":29885,"line_start":784,"line_end":784,"column_start":1,"column_end":9}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":29886,"byte_end":29889,"line_start":785,"line_end":785,"column_start":1,"column_end":4}},{"value":"/ `ArcArray<A, D>`","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":29890,"byte_end":29910,"line_start":786,"line_end":786,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":29911,"byte_end":29914,"line_start":787,"line_end":787,"column_start":1,"column_end":4}},{"value":"/ </td>","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":29915,"byte_end":29924,"line_start":788,"line_end":788,"column_start":1,"column_end":10}},{"value":"/ <td>","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":29925,"byte_end":29933,"line_start":789,"line_end":789,"column_start":1,"column_end":9}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":29934,"byte_end":29937,"line_start":790,"line_end":790,"column_start":1,"column_end":4}},{"value":"/ `CowArray<'a, A, D>`","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":29938,"byte_end":29962,"line_start":791,"line_end":791,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":29963,"byte_end":29966,"line_start":792,"line_end":792,"column_start":1,"column_end":4}},{"value":"/ </td>","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":29967,"byte_end":29976,"line_start":793,"line_end":793,"column_start":1,"column_end":10}},{"value":"/ <td>","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":29977,"byte_end":29985,"line_start":794,"line_end":794,"column_start":1,"column_end":9}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":29986,"byte_end":29989,"line_start":795,"line_end":795,"column_start":1,"column_end":4}},{"value":"/ `ArrayView<'a, A, D>`","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":29990,"byte_end":30015,"line_start":796,"line_end":796,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":30016,"byte_end":30019,"line_start":797,"line_end":797,"column_start":1,"column_end":4}},{"value":"/ </td>","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":30020,"byte_end":30029,"line_start":798,"line_end":798,"column_start":1,"column_end":10}},{"value":"/ <td>","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":30030,"byte_end":30038,"line_start":799,"line_end":799,"column_start":1,"column_end":9}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":30039,"byte_end":30042,"line_start":800,"line_end":800,"column_start":1,"column_end":4}},{"value":"/ `ArrayViewMut<'a, A, D>`","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":30043,"byte_end":30071,"line_start":801,"line_end":801,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":30072,"byte_end":30075,"line_start":802,"line_end":802,"column_start":1,"column_end":4}},{"value":"/ </td>","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":30076,"byte_end":30085,"line_start":803,"line_end":803,"column_start":1,"column_end":10}},{"value":"/ </tr>","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":30086,"byte_end":30095,"line_start":804,"line_end":804,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":30096,"byte_end":30099,"line_start":805,"line_end":805,"column_start":1,"column_end":4}},{"value":"/ <!--Conversions to `Array<A, D>`-->","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":30100,"byte_end":30139,"line_start":806,"line_end":806,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":30140,"byte_end":30143,"line_start":807,"line_end":807,"column_start":1,"column_end":4}},{"value":"/ <tr>","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":30144,"byte_end":30152,"line_start":808,"line_end":808,"column_start":1,"column_end":9}},{"value":"/ <td>","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":30153,"byte_end":30161,"line_start":809,"line_end":809,"column_start":1,"column_end":9}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":30162,"byte_end":30165,"line_start":810,"line_end":810,"column_start":1,"column_end":4}},{"value":"/ `Array<A, D>`","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":30166,"byte_end":30183,"line_start":811,"line_end":811,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":30184,"byte_end":30187,"line_start":812,"line_end":812,"column_start":1,"column_end":4}},{"value":"/ </td>","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":30188,"byte_end":30197,"line_start":813,"line_end":813,"column_start":1,"column_end":10}},{"value":"/ <td>","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":30198,"byte_end":30206,"line_start":814,"line_end":814,"column_start":1,"column_end":9}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":30207,"byte_end":30210,"line_start":815,"line_end":815,"column_start":1,"column_end":4}},{"value":"/ no-op","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":30211,"byte_end":30220,"line_start":816,"line_end":816,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":30221,"byte_end":30224,"line_start":817,"line_end":817,"column_start":1,"column_end":4}},{"value":"/ </td>","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":30225,"byte_end":30234,"line_start":818,"line_end":818,"column_start":1,"column_end":10}},{"value":"/ <td>","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":30235,"byte_end":30243,"line_start":819,"line_end":819,"column_start":1,"column_end":9}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":30244,"byte_end":30247,"line_start":820,"line_end":820,"column_start":1,"column_end":4}},{"value":"/ [`a.into_owned()`][.into_owned()]","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":30248,"byte_end":30285,"line_start":821,"line_end":821,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":30286,"byte_end":30289,"line_start":822,"line_end":822,"column_start":1,"column_end":4}},{"value":"/ </td>","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":30290,"byte_end":30299,"line_start":823,"line_end":823,"column_start":1,"column_end":10}},{"value":"/ <td>","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":30300,"byte_end":30308,"line_start":824,"line_end":824,"column_start":1,"column_end":9}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":30309,"byte_end":30312,"line_start":825,"line_end":825,"column_start":1,"column_end":4}},{"value":"/ [`a.into_owned()`][.into_owned()]","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":30313,"byte_end":30350,"line_start":826,"line_end":826,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":30351,"byte_end":30354,"line_start":827,"line_end":827,"column_start":1,"column_end":4}},{"value":"/ </td>","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":30355,"byte_end":30364,"line_start":828,"line_end":828,"column_start":1,"column_end":10}},{"value":"/ <td>","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":30365,"byte_end":30373,"line_start":829,"line_end":829,"column_start":1,"column_end":9}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":30374,"byte_end":30377,"line_start":830,"line_end":830,"column_start":1,"column_end":4}},{"value":"/ [`a.to_owned()`][.to_owned()]","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":30378,"byte_end":30411,"line_start":831,"line_end":831,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":30412,"byte_end":30415,"line_start":832,"line_end":832,"column_start":1,"column_end":4}},{"value":"/ </td>","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":30416,"byte_end":30425,"line_start":833,"line_end":833,"column_start":1,"column_end":10}},{"value":"/ <td>","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":30426,"byte_end":30434,"line_start":834,"line_end":834,"column_start":1,"column_end":9}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":30435,"byte_end":30438,"line_start":835,"line_end":835,"column_start":1,"column_end":4}},{"value":"/ [`a.to_owned()`][.to_owned()]","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":30439,"byte_end":30472,"line_start":836,"line_end":836,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":30473,"byte_end":30476,"line_start":837,"line_end":837,"column_start":1,"column_end":4}},{"value":"/ </td>","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":30477,"byte_end":30486,"line_start":838,"line_end":838,"column_start":1,"column_end":10}},{"value":"/ </tr>","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":30487,"byte_end":30496,"line_start":839,"line_end":839,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":30497,"byte_end":30500,"line_start":840,"line_end":840,"column_start":1,"column_end":4}},{"value":"/ <!--Conversions to `ArcArray<A, D>`-->","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":30501,"byte_end":30543,"line_start":841,"line_end":841,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":30544,"byte_end":30547,"line_start":842,"line_end":842,"column_start":1,"column_end":4}},{"value":"/ <tr>","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":30548,"byte_end":30556,"line_start":843,"line_end":843,"column_start":1,"column_end":9}},{"value":"/ <td>","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":30557,"byte_end":30565,"line_start":844,"line_end":844,"column_start":1,"column_end":9}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":30566,"byte_end":30569,"line_start":845,"line_end":845,"column_start":1,"column_end":4}},{"value":"/ `ArcArray<A, D>`","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":30570,"byte_end":30590,"line_start":846,"line_end":846,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":30591,"byte_end":30594,"line_start":847,"line_end":847,"column_start":1,"column_end":4}},{"value":"/ </td>","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":30595,"byte_end":30604,"line_start":848,"line_end":848,"column_start":1,"column_end":10}},{"value":"/ <td>","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":30605,"byte_end":30613,"line_start":849,"line_end":849,"column_start":1,"column_end":9}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":30614,"byte_end":30617,"line_start":850,"line_end":850,"column_start":1,"column_end":4}},{"value":"/ [`a.into_shared()`][.into_shared()]","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":30618,"byte_end":30657,"line_start":851,"line_end":851,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":30658,"byte_end":30661,"line_start":852,"line_end":852,"column_start":1,"column_end":4}},{"value":"/ </td>","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":30662,"byte_end":30671,"line_start":853,"line_end":853,"column_start":1,"column_end":10}},{"value":"/ <td>","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":30672,"byte_end":30680,"line_start":854,"line_end":854,"column_start":1,"column_end":9}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":30681,"byte_end":30684,"line_start":855,"line_end":855,"column_start":1,"column_end":4}},{"value":"/ no-op","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":30685,"byte_end":30694,"line_start":856,"line_end":856,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":30695,"byte_end":30698,"line_start":857,"line_end":857,"column_start":1,"column_end":4}},{"value":"/ </td>","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":30699,"byte_end":30708,"line_start":858,"line_end":858,"column_start":1,"column_end":10}},{"value":"/ <td>","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":30709,"byte_end":30717,"line_start":859,"line_end":859,"column_start":1,"column_end":9}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":30718,"byte_end":30721,"line_start":860,"line_end":860,"column_start":1,"column_end":4}},{"value":"/ [`a.into_owned().into_shared()`][.into_shared()]","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":30722,"byte_end":30774,"line_start":861,"line_end":861,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":30775,"byte_end":30778,"line_start":862,"line_end":862,"column_start":1,"column_end":4}},{"value":"/ </td>","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":30779,"byte_end":30788,"line_start":863,"line_end":863,"column_start":1,"column_end":10}},{"value":"/ <td>","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":30789,"byte_end":30797,"line_start":864,"line_end":864,"column_start":1,"column_end":9}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":30798,"byte_end":30801,"line_start":865,"line_end":865,"column_start":1,"column_end":4}},{"value":"/ [`a.to_owned().into_shared()`][.into_shared()]","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":30802,"byte_end":30852,"line_start":866,"line_end":866,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":30853,"byte_end":30856,"line_start":867,"line_end":867,"column_start":1,"column_end":4}},{"value":"/ </td>","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":30857,"byte_end":30866,"line_start":868,"line_end":868,"column_start":1,"column_end":10}},{"value":"/ <td>","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":30867,"byte_end":30875,"line_start":869,"line_end":869,"column_start":1,"column_end":9}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":30876,"byte_end":30879,"line_start":870,"line_end":870,"column_start":1,"column_end":4}},{"value":"/ [`a.to_owned().into_shared()`][.into_shared()]","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":30880,"byte_end":30930,"line_start":871,"line_end":871,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":30931,"byte_end":30934,"line_start":872,"line_end":872,"column_start":1,"column_end":4}},{"value":"/ </td>","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":30935,"byte_end":30944,"line_start":873,"line_end":873,"column_start":1,"column_end":10}},{"value":"/ </tr>","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":30945,"byte_end":30954,"line_start":874,"line_end":874,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":30955,"byte_end":30958,"line_start":875,"line_end":875,"column_start":1,"column_end":4}},{"value":"/ <!--Conversions to `CowArray<'a, A, D>`-->","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":30959,"byte_end":31005,"line_start":876,"line_end":876,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":31006,"byte_end":31009,"line_start":877,"line_end":877,"column_start":1,"column_end":4}},{"value":"/ <tr>","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":31010,"byte_end":31018,"line_start":878,"line_end":878,"column_start":1,"column_end":9}},{"value":"/ <td>","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":31019,"byte_end":31027,"line_start":879,"line_end":879,"column_start":1,"column_end":9}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":31028,"byte_end":31031,"line_start":880,"line_end":880,"column_start":1,"column_end":4}},{"value":"/ `CowArray<'a, A, D>`","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":31032,"byte_end":31056,"line_start":881,"line_end":881,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":31057,"byte_end":31060,"line_start":882,"line_end":882,"column_start":1,"column_end":4}},{"value":"/ </td>","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":31061,"byte_end":31070,"line_start":883,"line_end":883,"column_start":1,"column_end":10}},{"value":"/ <td>","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":31071,"byte_end":31079,"line_start":884,"line_end":884,"column_start":1,"column_end":9}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":31080,"byte_end":31083,"line_start":885,"line_end":885,"column_start":1,"column_end":4}},{"value":"/ [`CowArray::from(a)`](type.CowArray.html#impl-From<ArrayBase<OwnedRepr<A>%2C%20D>>)","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":31084,"byte_end":31171,"line_start":886,"line_end":886,"column_start":1,"column_end":88}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":31172,"byte_end":31175,"line_start":887,"line_end":887,"column_start":1,"column_end":4}},{"value":"/ </td>","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":31176,"byte_end":31185,"line_start":888,"line_end":888,"column_start":1,"column_end":10}},{"value":"/ <td>","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":31186,"byte_end":31194,"line_start":889,"line_end":889,"column_start":1,"column_end":9}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":31195,"byte_end":31198,"line_start":890,"line_end":890,"column_start":1,"column_end":4}},{"value":"/ [`CowArray::from(a.into_owned())`](type.CowArray.html#impl-From<ArrayBase<OwnedRepr<A>%2C%20D>>)","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":31199,"byte_end":31299,"line_start":891,"line_end":891,"column_start":1,"column_end":101}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":31300,"byte_end":31303,"line_start":892,"line_end":892,"column_start":1,"column_end":4}},{"value":"/ </td>","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":31304,"byte_end":31313,"line_start":893,"line_end":893,"column_start":1,"column_end":10}},{"value":"/ <td>","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":31314,"byte_end":31322,"line_start":894,"line_end":894,"column_start":1,"column_end":9}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":31323,"byte_end":31326,"line_start":895,"line_end":895,"column_start":1,"column_end":4}},{"value":"/ no-op","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":31327,"byte_end":31336,"line_start":896,"line_end":896,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":31337,"byte_end":31340,"line_start":897,"line_end":897,"column_start":1,"column_end":4}},{"value":"/ </td>","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":31341,"byte_end":31350,"line_start":898,"line_end":898,"column_start":1,"column_end":10}},{"value":"/ <td>","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":31351,"byte_end":31359,"line_start":899,"line_end":899,"column_start":1,"column_end":9}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":31360,"byte_end":31363,"line_start":900,"line_end":900,"column_start":1,"column_end":4}},{"value":"/ [`CowArray::from(a)`](type.CowArray.html#impl-From<ArrayBase<ViewRepr<%26%27a%20A>%2C%20D>>)","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":31364,"byte_end":31460,"line_start":901,"line_end":901,"column_start":1,"column_end":97}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":31461,"byte_end":31464,"line_start":902,"line_end":902,"column_start":1,"column_end":4}},{"value":"/ </td>","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":31465,"byte_end":31474,"line_start":903,"line_end":903,"column_start":1,"column_end":10}},{"value":"/ <td>","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":31475,"byte_end":31483,"line_start":904,"line_end":904,"column_start":1,"column_end":9}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":31484,"byte_end":31487,"line_start":905,"line_end":905,"column_start":1,"column_end":4}},{"value":"/ [`CowArray::from(a.view())`](type.CowArray.html#impl-From<ArrayBase<ViewRepr<%26%27a%20A>%2C%20D>>)","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":31488,"byte_end":31591,"line_start":906,"line_end":906,"column_start":1,"column_end":104}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":31592,"byte_end":31595,"line_start":907,"line_end":907,"column_start":1,"column_end":4}},{"value":"/ </td>","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":31596,"byte_end":31605,"line_start":908,"line_end":908,"column_start":1,"column_end":10}},{"value":"/ </tr>","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":31606,"byte_end":31615,"line_start":909,"line_end":909,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":31616,"byte_end":31619,"line_start":910,"line_end":910,"column_start":1,"column_end":4}},{"value":"/ <!--Conversions to `ArrayView<'b, A, D>`-->","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":31620,"byte_end":31667,"line_start":911,"line_end":911,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":31668,"byte_end":31671,"line_start":912,"line_end":912,"column_start":1,"column_end":4}},{"value":"/ <tr>","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":31672,"byte_end":31680,"line_start":913,"line_end":913,"column_start":1,"column_end":9}},{"value":"/ <td>","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":31681,"byte_end":31689,"line_start":914,"line_end":914,"column_start":1,"column_end":9}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":31690,"byte_end":31693,"line_start":915,"line_end":915,"column_start":1,"column_end":4}},{"value":"/ `ArrayView<'b, A, D>`","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":31694,"byte_end":31719,"line_start":916,"line_end":916,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":31720,"byte_end":31723,"line_start":917,"line_end":917,"column_start":1,"column_end":4}},{"value":"/ </td>","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":31724,"byte_end":31733,"line_start":918,"line_end":918,"column_start":1,"column_end":10}},{"value":"/ <td>","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":31734,"byte_end":31742,"line_start":919,"line_end":919,"column_start":1,"column_end":9}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":31743,"byte_end":31746,"line_start":920,"line_end":920,"column_start":1,"column_end":4}},{"value":"/ [`a.view()`][.view()]","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":31747,"byte_end":31772,"line_start":921,"line_end":921,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":31773,"byte_end":31776,"line_start":922,"line_end":922,"column_start":1,"column_end":4}},{"value":"/ </td>","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":31777,"byte_end":31786,"line_start":923,"line_end":923,"column_start":1,"column_end":10}},{"value":"/ <td>","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":31787,"byte_end":31795,"line_start":924,"line_end":924,"column_start":1,"column_end":9}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":31796,"byte_end":31799,"line_start":925,"line_end":925,"column_start":1,"column_end":4}},{"value":"/ [`a.view()`][.view()]","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":31800,"byte_end":31825,"line_start":926,"line_end":926,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":31826,"byte_end":31829,"line_start":927,"line_end":927,"column_start":1,"column_end":4}},{"value":"/ </td>","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":31830,"byte_end":31839,"line_start":928,"line_end":928,"column_start":1,"column_end":10}},{"value":"/ <td>","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":31840,"byte_end":31848,"line_start":929,"line_end":929,"column_start":1,"column_end":9}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":31849,"byte_end":31852,"line_start":930,"line_end":930,"column_start":1,"column_end":4}},{"value":"/ [`a.view()`][.view()]","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":31853,"byte_end":31878,"line_start":931,"line_end":931,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":31879,"byte_end":31882,"line_start":932,"line_end":932,"column_start":1,"column_end":4}},{"value":"/ </td>","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":31883,"byte_end":31892,"line_start":933,"line_end":933,"column_start":1,"column_end":10}},{"value":"/ <td>","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":31893,"byte_end":31901,"line_start":934,"line_end":934,"column_start":1,"column_end":9}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":31902,"byte_end":31905,"line_start":935,"line_end":935,"column_start":1,"column_end":4}},{"value":"/ [`a.view()`][.view()] or [`a.reborrow()`][ArrayView::reborrow()]","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":31906,"byte_end":31974,"line_start":936,"line_end":936,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":31975,"byte_end":31978,"line_start":937,"line_end":937,"column_start":1,"column_end":4}},{"value":"/ </td>","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":31979,"byte_end":31988,"line_start":938,"line_end":938,"column_start":1,"column_end":10}},{"value":"/ <td>","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":31989,"byte_end":31997,"line_start":939,"line_end":939,"column_start":1,"column_end":9}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":31998,"byte_end":32001,"line_start":940,"line_end":940,"column_start":1,"column_end":4}},{"value":"/ [`a.view()`][.view()]","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":32002,"byte_end":32027,"line_start":941,"line_end":941,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":32028,"byte_end":32031,"line_start":942,"line_end":942,"column_start":1,"column_end":4}},{"value":"/ </td>","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":32032,"byte_end":32041,"line_start":943,"line_end":943,"column_start":1,"column_end":10}},{"value":"/ </tr>","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":32042,"byte_end":32051,"line_start":944,"line_end":944,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":32052,"byte_end":32055,"line_start":945,"line_end":945,"column_start":1,"column_end":4}},{"value":"/ <!--Conversions to `ArrayViewMut<'b, A, D>`-->","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":32056,"byte_end":32106,"line_start":946,"line_end":946,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":32107,"byte_end":32110,"line_start":947,"line_end":947,"column_start":1,"column_end":4}},{"value":"/ <tr>","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":32111,"byte_end":32119,"line_start":948,"line_end":948,"column_start":1,"column_end":9}},{"value":"/ <td>","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":32120,"byte_end":32128,"line_start":949,"line_end":949,"column_start":1,"column_end":9}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":32129,"byte_end":32132,"line_start":950,"line_end":950,"column_start":1,"column_end":4}},{"value":"/ `ArrayViewMut<'b, A, D>`","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":32133,"byte_end":32161,"line_start":951,"line_end":951,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":32162,"byte_end":32165,"line_start":952,"line_end":952,"column_start":1,"column_end":4}},{"value":"/ </td>","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":32166,"byte_end":32175,"line_start":953,"line_end":953,"column_start":1,"column_end":10}},{"value":"/ <td>","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":32176,"byte_end":32184,"line_start":954,"line_end":954,"column_start":1,"column_end":9}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":32185,"byte_end":32188,"line_start":955,"line_end":955,"column_start":1,"column_end":4}},{"value":"/ [`a.view_mut()`][.view_mut()]","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":32189,"byte_end":32222,"line_start":956,"line_end":956,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":32223,"byte_end":32226,"line_start":957,"line_end":957,"column_start":1,"column_end":4}},{"value":"/ </td>","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":32227,"byte_end":32236,"line_start":958,"line_end":958,"column_start":1,"column_end":10}},{"value":"/ <td>","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":32237,"byte_end":32245,"line_start":959,"line_end":959,"column_start":1,"column_end":9}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":32246,"byte_end":32249,"line_start":960,"line_end":960,"column_start":1,"column_end":4}},{"value":"/ [`a.view_mut()`][.view_mut()]","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":32250,"byte_end":32283,"line_start":961,"line_end":961,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":32284,"byte_end":32287,"line_start":962,"line_end":962,"column_start":1,"column_end":4}},{"value":"/ </td>","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":32288,"byte_end":32297,"line_start":963,"line_end":963,"column_start":1,"column_end":10}},{"value":"/ <td>","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":32298,"byte_end":32306,"line_start":964,"line_end":964,"column_start":1,"column_end":9}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":32307,"byte_end":32310,"line_start":965,"line_end":965,"column_start":1,"column_end":4}},{"value":"/ [`a.view_mut()`][.view_mut()]","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":32311,"byte_end":32344,"line_start":966,"line_end":966,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":32345,"byte_end":32348,"line_start":967,"line_end":967,"column_start":1,"column_end":4}},{"value":"/ </td>","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":32349,"byte_end":32358,"line_start":968,"line_end":968,"column_start":1,"column_end":10}},{"value":"/ <td>","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":32359,"byte_end":32367,"line_start":969,"line_end":969,"column_start":1,"column_end":9}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":32368,"byte_end":32371,"line_start":970,"line_end":970,"column_start":1,"column_end":4}},{"value":"/ illegal","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":32372,"byte_end":32383,"line_start":971,"line_end":971,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":32384,"byte_end":32387,"line_start":972,"line_end":972,"column_start":1,"column_end":4}},{"value":"/ </td>","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":32388,"byte_end":32397,"line_start":973,"line_end":973,"column_start":1,"column_end":10}},{"value":"/ <td>","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":32398,"byte_end":32406,"line_start":974,"line_end":974,"column_start":1,"column_end":9}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":32407,"byte_end":32410,"line_start":975,"line_end":975,"column_start":1,"column_end":4}},{"value":"/ [`a.view_mut()`][.view_mut()] or [`a.reborrow()`][ArrayViewMut::reborrow()]","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":32411,"byte_end":32490,"line_start":976,"line_end":976,"column_start":1,"column_end":80}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":32491,"byte_end":32494,"line_start":977,"line_end":977,"column_start":1,"column_end":4}},{"value":"/ </td>","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":32495,"byte_end":32504,"line_start":978,"line_end":978,"column_start":1,"column_end":10}},{"value":"/ </tr>","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":32505,"byte_end":32514,"line_start":979,"line_end":979,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":32515,"byte_end":32518,"line_start":980,"line_end":980,"column_start":1,"column_end":4}},{"value":"/ <!--Conversions to equivalent with dim `D2`-->","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":32519,"byte_end":32569,"line_start":981,"line_end":981,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":32570,"byte_end":32573,"line_start":982,"line_end":982,"column_start":1,"column_end":4}},{"value":"/ <tr>","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":32574,"byte_end":32582,"line_start":983,"line_end":983,"column_start":1,"column_end":9}},{"value":"/ <td>","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":32583,"byte_end":32591,"line_start":984,"line_end":984,"column_start":1,"column_end":9}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":32592,"byte_end":32595,"line_start":985,"line_end":985,"column_start":1,"column_end":4}},{"value":"/ equivalent with dim `D2` (e.g. converting from dynamic dim to const dim)","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":32596,"byte_end":32672,"line_start":986,"line_end":986,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":32673,"byte_end":32676,"line_start":987,"line_end":987,"column_start":1,"column_end":4}},{"value":"/ </td>","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":32677,"byte_end":32686,"line_start":988,"line_end":988,"column_start":1,"column_end":10}},{"value":"/ <td colspan=\"5\">","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":32687,"byte_end":32707,"line_start":989,"line_end":989,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":32708,"byte_end":32711,"line_start":990,"line_end":990,"column_start":1,"column_end":4}},{"value":"/ [`a.into_dimensionality::<D2>()`][.into_dimensionality()]","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":32712,"byte_end":32773,"line_start":991,"line_end":991,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":32774,"byte_end":32777,"line_start":992,"line_end":992,"column_start":1,"column_end":4}},{"value":"/ </td>","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":32778,"byte_end":32787,"line_start":993,"line_end":993,"column_start":1,"column_end":10}},{"value":"/ </tr>","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":32788,"byte_end":32797,"line_start":994,"line_end":994,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":32798,"byte_end":32801,"line_start":995,"line_end":995,"column_start":1,"column_end":4}},{"value":"/ <!--Conversions to equivalent with dim `IxDyn`-->","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":32802,"byte_end":32855,"line_start":996,"line_end":996,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":32856,"byte_end":32859,"line_start":997,"line_end":997,"column_start":1,"column_end":4}},{"value":"/ <tr>","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":32860,"byte_end":32868,"line_start":998,"line_end":998,"column_start":1,"column_end":9}},{"value":"/ <td>","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":32869,"byte_end":32877,"line_start":999,"line_end":999,"column_start":1,"column_end":9}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":32878,"byte_end":32881,"line_start":1000,"line_end":1000,"column_start":1,"column_end":4}},{"value":"/ equivalent with dim `IxDyn`","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":32882,"byte_end":32913,"line_start":1001,"line_end":1001,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":32914,"byte_end":32917,"line_start":1002,"line_end":1002,"column_start":1,"column_end":4}},{"value":"/ </td>","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":32918,"byte_end":32927,"line_start":1003,"line_end":1003,"column_start":1,"column_end":10}},{"value":"/ <td colspan=\"5\">","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":32928,"byte_end":32948,"line_start":1004,"line_end":1004,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":32949,"byte_end":32952,"line_start":1005,"line_end":1005,"column_start":1,"column_end":4}},{"value":"/ [`a.into_dyn()`][.into_dyn()]","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":32953,"byte_end":32986,"line_start":1006,"line_end":1006,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":32987,"byte_end":32990,"line_start":1007,"line_end":1007,"column_start":1,"column_end":4}},{"value":"/ </td>","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":32991,"byte_end":33000,"line_start":1008,"line_end":1008,"column_start":1,"column_end":10}},{"value":"/ </tr>","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":33001,"byte_end":33010,"line_start":1009,"line_end":1009,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":33011,"byte_end":33014,"line_start":1010,"line_end":1010,"column_start":1,"column_end":4}},{"value":"/ <!--Conversions to `Array<B, D>`-->","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":33015,"byte_end":33054,"line_start":1011,"line_end":1011,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":33055,"byte_end":33058,"line_start":1012,"line_end":1012,"column_start":1,"column_end":4}},{"value":"/ <tr>","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":33059,"byte_end":33067,"line_start":1013,"line_end":1013,"column_start":1,"column_end":9}},{"value":"/ <td>","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":33068,"byte_end":33076,"line_start":1014,"line_end":1014,"column_start":1,"column_end":9}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":33077,"byte_end":33080,"line_start":1015,"line_end":1015,"column_start":1,"column_end":4}},{"value":"/ `Array<B, D>` (new element type)","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":33081,"byte_end":33117,"line_start":1016,"line_end":1016,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":33118,"byte_end":33121,"line_start":1017,"line_end":1017,"column_start":1,"column_end":4}},{"value":"/ </td>","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":33122,"byte_end":33131,"line_start":1018,"line_end":1018,"column_start":1,"column_end":10}},{"value":"/ <td colspan=\"5\">","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":33132,"byte_end":33152,"line_start":1019,"line_end":1019,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":33153,"byte_end":33156,"line_start":1020,"line_end":1020,"column_start":1,"column_end":4}},{"value":"/ [`a.map(|x| x.do_your_conversion())`][.map()]","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":33157,"byte_end":33206,"line_start":1021,"line_end":1021,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":33207,"byte_end":33210,"line_start":1022,"line_end":1022,"column_start":1,"column_end":4}},{"value":"/ </td>","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":33211,"byte_end":33220,"line_start":1023,"line_end":1023,"column_start":1,"column_end":10}},{"value":"/ </tr>","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":33221,"byte_end":33230,"line_start":1024,"line_end":1024,"column_start":1,"column_end":10}},{"value":"/ </table>","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":33231,"byte_end":33243,"line_start":1025,"line_end":1025,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":33244,"byte_end":33247,"line_start":1026,"line_end":1026,"column_start":1,"column_end":4}},{"value":"/ ### Conversions Between Arrays and `Vec`s/Slices/Scalars","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":33248,"byte_end":33308,"line_start":1027,"line_end":1027,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":33309,"byte_end":33312,"line_start":1028,"line_end":1028,"column_start":1,"column_end":4}},{"value":"/ This is a table of the safe conversions between arrays and","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":33313,"byte_end":33375,"line_start":1029,"line_end":1029,"column_start":1,"column_end":63}},{"value":"/ `Vec`s/slices/scalars. Note that some of the return values are actually","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":33376,"byte_end":33451,"line_start":1030,"line_end":1030,"column_start":1,"column_end":76}},{"value":"/ `Result`/`Option` wrappers around the indicated output types.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":33452,"byte_end":33517,"line_start":1031,"line_end":1031,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":33518,"byte_end":33521,"line_start":1032,"line_end":1032,"column_start":1,"column_end":4}},{"value":"/ Input | Output | Methods","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":33522,"byte_end":33550,"line_start":1033,"line_end":1033,"column_start":1,"column_end":29}},{"value":"/ ------|--------|--------","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":33551,"byte_end":33579,"line_start":1034,"line_end":1034,"column_start":1,"column_end":29}},{"value":"/ `Vec<A>` | `ArrayBase<S: DataOwned, Ix1>` | [`::from_vec()`](#method.from_vec)","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":33580,"byte_end":33662,"line_start":1035,"line_end":1035,"column_start":1,"column_end":83}},{"value":"/ `Vec<A>` | `ArrayBase<S: DataOwned, D>` | [`::from_shape_vec()`](#method.from_shape_vec)","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":33663,"byte_end":33755,"line_start":1036,"line_end":1036,"column_start":1,"column_end":93}},{"value":"/ `&[A]` | `ArrayView1<A>` | [`::from()`](type.ArrayView.html#method.from)","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":33756,"byte_end":33832,"line_start":1037,"line_end":1037,"column_start":1,"column_end":77}},{"value":"/ `&[A]` | `ArrayView<A, D>` | [`::from_shape()`](type.ArrayView.html#method.from_shape)","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":33833,"byte_end":33923,"line_start":1038,"line_end":1038,"column_start":1,"column_end":91}},{"value":"/ `&mut [A]` | `ArrayViewMut1<A>` | [`::from()`](type.ArrayViewMut.html#method.from)","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":33924,"byte_end":34010,"line_start":1039,"line_end":1039,"column_start":1,"column_end":87}},{"value":"/ `&mut [A]` | `ArrayViewMut<A, D>` | [`::from_shape()`](type.ArrayViewMut.html#method.from_shape)","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":34011,"byte_end":34111,"line_start":1040,"line_end":1040,"column_start":1,"column_end":101}},{"value":"/ `&ArrayBase<S, Ix1>` | `Vec<A>` | [`.to_vec()`](#method.to_vec)","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":34112,"byte_end":34179,"line_start":1041,"line_end":1041,"column_start":1,"column_end":68}},{"value":"/ `Array<A, D>` | `Vec<A>` | [`.into_raw_vec()`](type.Array.html#method.into_raw_vec)<sup>[1](#into_raw_vec)</sup>","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":34180,"byte_end":34296,"line_start":1042,"line_end":1042,"column_start":1,"column_end":117}},{"value":"/ `&ArrayBase<S, D>` | `&[A]` | [`.as_slice()`](#method.as_slice)<sup>[2](#req_contig_std)</sup>, [`.as_slice_memory_order()`](#method.as_slice_memory_order)<sup>[3](#req_contig)</sup>","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":34297,"byte_end":34483,"line_start":1043,"line_end":1043,"column_start":1,"column_end":187}},{"value":"/ `&mut ArrayBase<S: DataMut, D>` | `&mut [A]` | [`.as_slice_mut()`](#method.as_slice_mut)<sup>[2](#req_contig_std)</sup>, [`.as_slice_memory_order_mut()`](#method.as_slice_memory_order_mut)<sup>[3](#req_contig)</sup>","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":34484,"byte_end":34703,"line_start":1044,"line_end":1044,"column_start":1,"column_end":220}},{"value":"/ `ArrayView<A, D>` | `&[A]` | [`.to_slice()`](type.ArrayView.html#method.to_slice)<sup>[2](#req_contig_std)</sup>","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":34704,"byte_end":34820,"line_start":1045,"line_end":1045,"column_start":1,"column_end":117}},{"value":"/ `ArrayViewMut<A, D>` | `&mut [A]` | [`.into_slice()`](type.ArrayViewMut.html#method.into_slice)<sup>[2](#req_contig_std)</sup>","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":34821,"byte_end":34951,"line_start":1046,"line_end":1046,"column_start":1,"column_end":131}},{"value":"/ `Array0<A>` | `A` | [`.into_scalar()`](type.Array.html#method.into_scalar)","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":34952,"byte_end":35030,"line_start":1047,"line_end":1047,"column_start":1,"column_end":79}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":35031,"byte_end":35034,"line_start":1048,"line_end":1048,"column_start":1,"column_end":4}},{"value":"/ <sup><a name=\"into_raw_vec\">1</a></sup>Returns the data in memory order.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":35035,"byte_end":35111,"line_start":1049,"line_end":1049,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":35112,"byte_end":35115,"line_start":1050,"line_end":1050,"column_start":1,"column_end":4}},{"value":"/ <sup><a name=\"req_contig_std\">2</a></sup>Works only if the array is","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":35116,"byte_end":35187,"line_start":1051,"line_end":1051,"column_start":1,"column_end":72}},{"value":"/ contiguous and in standard order.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":35188,"byte_end":35225,"line_start":1052,"line_end":1052,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":35226,"byte_end":35229,"line_start":1053,"line_end":1053,"column_start":1,"column_end":4}},{"value":"/ <sup><a name=\"req_contig\">3</a></sup>Works only if the array is contiguous.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":35230,"byte_end":35309,"line_start":1054,"line_end":1054,"column_start":1,"column_end":80}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":35310,"byte_end":35313,"line_start":1055,"line_end":1055,"column_start":1,"column_end":4}},{"value":"/ The table above does not include all the constructors; it only shows","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":35314,"byte_end":35386,"line_start":1056,"line_end":1056,"column_start":1,"column_end":73}},{"value":"/ conversions to/from `Vec`s/slices. See","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":35387,"byte_end":35429,"line_start":1057,"line_end":1057,"column_start":1,"column_end":43}},{"value":"/ [below](#constructor-methods-for-owned-arrays) for more constructors.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":35430,"byte_end":35503,"line_start":1058,"line_end":1058,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":35504,"byte_end":35507,"line_start":1059,"line_end":1059,"column_start":1,"column_end":4}},{"value":"/ [ArrayView::reborrow()]: type.ArrayView.html#method.reborrow","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":35508,"byte_end":35572,"line_start":1060,"line_end":1060,"column_start":1,"column_end":65}},{"value":"/ [ArrayViewMut::reborrow()]: type.ArrayViewMut.html#method.reborrow","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":35573,"byte_end":35643,"line_start":1061,"line_end":1061,"column_start":1,"column_end":71}},{"value":"/ [.into_dimensionality()]: #method.into_dimensionality","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":35644,"byte_end":35701,"line_start":1062,"line_end":1062,"column_start":1,"column_end":58}},{"value":"/ [.into_dyn()]: #method.into_dyn","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":35702,"byte_end":35737,"line_start":1063,"line_end":1063,"column_start":1,"column_end":36}},{"value":"/ [.into_owned()]: #method.into_owned","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":35738,"byte_end":35777,"line_start":1064,"line_end":1064,"column_start":1,"column_end":40}},{"value":"/ [.into_shared()]: #method.into_shared","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":35778,"byte_end":35819,"line_start":1065,"line_end":1065,"column_start":1,"column_end":42}},{"value":"/ [.to_owned()]: #method.to_owned","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":35820,"byte_end":35855,"line_start":1066,"line_end":1066,"column_start":1,"column_end":36}},{"value":"/ [.map()]: #method.map","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":35856,"byte_end":35881,"line_start":1067,"line_end":1067,"column_start":1,"column_end":26}},{"value":"/ [.view()]: #method.view","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":35882,"byte_end":35909,"line_start":1068,"line_end":1068,"column_start":1,"column_end":28}},{"value":"/ [.view_mut()]: #method.view_mut","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":35910,"byte_end":35945,"line_start":1069,"line_end":1069,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":35946,"byte_end":35949,"line_start":1070,"line_end":1070,"column_start":1,"column_end":4}},{"value":"/ ### Conversions from Nested `Vec`s/`Array`s","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":35950,"byte_end":35997,"line_start":1071,"line_end":1071,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":35998,"byte_end":36001,"line_start":1072,"line_end":1072,"column_start":1,"column_end":4}},{"value":"/ It's generally a good idea to avoid nested `Vec`/`Array` types, such as","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":36002,"byte_end":36077,"line_start":1073,"line_end":1073,"column_start":1,"column_end":76}},{"value":"/ `Vec<Vec<A>>` or `Vec<Array2<A>>` because:","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":36078,"byte_end":36124,"line_start":1074,"line_end":1074,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":36125,"byte_end":36128,"line_start":1075,"line_end":1075,"column_start":1,"column_end":4}},{"value":"/ * they require extra heap allocations compared to a single `Array`,","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":36129,"byte_end":36200,"line_start":1076,"line_end":1076,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":36201,"byte_end":36204,"line_start":1077,"line_end":1077,"column_start":1,"column_end":4}},{"value":"/ * they can scatter data all over memory (because of multiple allocations),","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":36205,"byte_end":36283,"line_start":1078,"line_end":1078,"column_start":1,"column_end":79}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":36284,"byte_end":36287,"line_start":1079,"line_end":1079,"column_start":1,"column_end":4}},{"value":"/ * they cause unnecessary indirection (traversing multiple pointers to reach","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":36288,"byte_end":36367,"line_start":1080,"line_end":1080,"column_start":1,"column_end":80}},{"value":"/   the data),","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":36368,"byte_end":36384,"line_start":1081,"line_end":1081,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":36385,"byte_end":36388,"line_start":1082,"line_end":1082,"column_start":1,"column_end":4}},{"value":"/ * they don't enforce consistent shape within the nested","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":36389,"byte_end":36448,"line_start":1083,"line_end":1083,"column_start":1,"column_end":60}},{"value":"/   `Vec`s/`ArrayBase`s, and","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":36449,"byte_end":36479,"line_start":1084,"line_end":1084,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":36480,"byte_end":36483,"line_start":1085,"line_end":1085,"column_start":1,"column_end":4}},{"value":"/ * they are generally more difficult to work with.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":36484,"byte_end":36537,"line_start":1086,"line_end":1086,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":36538,"byte_end":36541,"line_start":1087,"line_end":1087,"column_start":1,"column_end":4}},{"value":"/ The most common case where users might consider using nested","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":36542,"byte_end":36606,"line_start":1088,"line_end":1088,"column_start":1,"column_end":65}},{"value":"/ `Vec`s/`Array`s is when creating an array by appending rows/subviews in a","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":36607,"byte_end":36684,"line_start":1089,"line_end":1089,"column_start":1,"column_end":78}},{"value":"/ loop, where the rows/subviews are computed within the loop. However, there","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":36685,"byte_end":36763,"line_start":1090,"line_end":1090,"column_start":1,"column_end":79}},{"value":"/ are better ways than using nested `Vec`s/`Array`s.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":36764,"byte_end":36818,"line_start":1091,"line_end":1091,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":36819,"byte_end":36822,"line_start":1092,"line_end":1092,"column_start":1,"column_end":4}},{"value":"/ If you know ahead-of-time the shape of the final array, the cleanest","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":36823,"byte_end":36895,"line_start":1093,"line_end":1093,"column_start":1,"column_end":73}},{"value":"/ solution is to allocate the final array before the loop, and then assign","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":36896,"byte_end":36972,"line_start":1094,"line_end":1094,"column_start":1,"column_end":77}},{"value":"/ the data to it within the loop, like this:","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":36973,"byte_end":37019,"line_start":1095,"line_end":1095,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":37020,"byte_end":37023,"line_start":1096,"line_end":1096,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":37024,"byte_end":37035,"line_start":1097,"line_end":1097,"column_start":1,"column_end":12}},{"value":"/ use ndarray::{array, Array2, Axis};","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":37036,"byte_end":37075,"line_start":1098,"line_end":1098,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":37076,"byte_end":37079,"line_start":1099,"line_end":1099,"column_start":1,"column_end":4}},{"value":"/ let mut arr = Array2::zeros((2, 3));","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":37080,"byte_end":37120,"line_start":1100,"line_end":1100,"column_start":1,"column_end":41}},{"value":"/ for (i, mut row) in arr.axis_iter_mut(Axis(0)).enumerate() {","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":37121,"byte_end":37185,"line_start":1101,"line_end":1101,"column_start":1,"column_end":65}},{"value":"/     // Perform calculations and assign to `row`; this is a trivial example:","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":37186,"byte_end":37265,"line_start":1102,"line_end":1102,"column_start":1,"column_end":80}},{"value":"/     row.fill(i);","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":37266,"byte_end":37286,"line_start":1103,"line_end":1103,"column_start":1,"column_end":21}},{"value":"/ }","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":37287,"byte_end":37292,"line_start":1104,"line_end":1104,"column_start":1,"column_end":6}},{"value":"/ assert_eq!(arr, array![[0, 0, 0], [1, 1, 1]]);","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":37293,"byte_end":37343,"line_start":1105,"line_end":1105,"column_start":1,"column_end":51}},{"value":"/ ```","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":37344,"byte_end":37351,"line_start":1106,"line_end":1106,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":37352,"byte_end":37355,"line_start":1107,"line_end":1107,"column_start":1,"column_end":4}},{"value":"/ If you don't know ahead-of-time the shape of the final array, then the","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":37356,"byte_end":37430,"line_start":1108,"line_end":1108,"column_start":1,"column_end":75}},{"value":"/ cleanest solution is generally to append the data to a flat `Vec`, and then","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":37431,"byte_end":37510,"line_start":1109,"line_end":1109,"column_start":1,"column_end":80}},{"value":"/ convert it to an `Array` at the end with","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":37511,"byte_end":37555,"line_start":1110,"line_end":1110,"column_start":1,"column_end":45}},{"value":"/ [`::from_shape_vec()`](#method.from_shape_vec). You just have to be careful","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":37556,"byte_end":37635,"line_start":1111,"line_end":1111,"column_start":1,"column_end":80}},{"value":"/ that the layout of the data (the order of the elements in the flat `Vec`)","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":37636,"byte_end":37713,"line_start":1112,"line_end":1112,"column_start":1,"column_end":78}},{"value":"/ is correct.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":37714,"byte_end":37729,"line_start":1113,"line_end":1113,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":37730,"byte_end":37733,"line_start":1114,"line_end":1114,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":37734,"byte_end":37745,"line_start":1115,"line_end":1115,"column_start":1,"column_end":12}},{"value":"/ use ndarray::{array, Array2};","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":37746,"byte_end":37779,"line_start":1116,"line_end":1116,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":37780,"byte_end":37783,"line_start":1117,"line_end":1117,"column_start":1,"column_end":4}},{"value":"/ let ncols = 3;","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":37784,"byte_end":37802,"line_start":1118,"line_end":1118,"column_start":1,"column_end":19}},{"value":"/ let mut data = Vec::new();","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":37803,"byte_end":37833,"line_start":1119,"line_end":1119,"column_start":1,"column_end":31}},{"value":"/ let mut nrows = 0;","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":37834,"byte_end":37856,"line_start":1120,"line_end":1120,"column_start":1,"column_end":23}},{"value":"/ for i in 0..2 {","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":37857,"byte_end":37876,"line_start":1121,"line_end":1121,"column_start":1,"column_end":20}},{"value":"/     // Compute `row` and append it to `data`; this is a trivial example:","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":37877,"byte_end":37953,"line_start":1122,"line_end":1122,"column_start":1,"column_end":77}},{"value":"/     let row = vec![i; ncols];","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":37954,"byte_end":37987,"line_start":1123,"line_end":1123,"column_start":1,"column_end":34}},{"value":"/     data.extend_from_slice(&row);","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":37988,"byte_end":38025,"line_start":1124,"line_end":1124,"column_start":1,"column_end":38}},{"value":"/     nrows += 1;","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":38026,"byte_end":38045,"line_start":1125,"line_end":1125,"column_start":1,"column_end":20}},{"value":"/ }","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":38046,"byte_end":38051,"line_start":1126,"line_end":1126,"column_start":1,"column_end":6}},{"value":"/ let arr = Array2::from_shape_vec((nrows, ncols), data)?;","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":38052,"byte_end":38112,"line_start":1127,"line_end":1127,"column_start":1,"column_end":61}},{"value":"/ assert_eq!(arr, array![[0, 0, 0], [1, 1, 1]]);","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":38113,"byte_end":38163,"line_start":1128,"line_end":1128,"column_start":1,"column_end":51}},{"value":"/ # Ok::<(), ndarray::ShapeError>(())","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":38164,"byte_end":38203,"line_start":1129,"line_end":1129,"column_start":1,"column_end":40}},{"value":"/ ```","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":38204,"byte_end":38211,"line_start":1130,"line_end":1130,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":38212,"byte_end":38215,"line_start":1131,"line_end":1131,"column_start":1,"column_end":4}},{"value":"/ If neither of these options works for you, and you really need to convert","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":38216,"byte_end":38293,"line_start":1132,"line_end":1132,"column_start":1,"column_end":78}},{"value":"/ nested `Vec`/`Array` instances to an `Array`, the cleanest solution is","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":38294,"byte_end":38368,"line_start":1133,"line_end":1133,"column_start":1,"column_end":75}},{"value":"/ generally to use","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":38369,"byte_end":38389,"line_start":1134,"line_end":1134,"column_start":1,"column_end":21}},{"value":"/ [`Iterator::flatten()`](https://doc.rust-lang.org/std/iter/trait.Iterator.html#method.flatten)","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":38390,"byte_end":38488,"line_start":1135,"line_end":1135,"column_start":1,"column_end":99}},{"value":"/ to get a flat `Vec`, and then convert the `Vec` to an `Array` with","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":38489,"byte_end":38559,"line_start":1136,"line_end":1136,"column_start":1,"column_end":71}},{"value":"/ [`::from_shape_vec()`](#method.from_shape_vec), like this:","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":38560,"byte_end":38622,"line_start":1137,"line_end":1137,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":38623,"byte_end":38626,"line_start":1138,"line_end":1138,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":38627,"byte_end":38638,"line_start":1139,"line_end":1139,"column_start":1,"column_end":12}},{"value":"/ use ndarray::{array, Array2, Array3};","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":38639,"byte_end":38680,"line_start":1140,"line_end":1140,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":38681,"byte_end":38684,"line_start":1141,"line_end":1141,"column_start":1,"column_end":4}},{"value":"/ let nested: Vec<Array2<i32>> = vec![","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":38685,"byte_end":38725,"line_start":1142,"line_end":1142,"column_start":1,"column_end":41}},{"value":"/     array![[1, 2, 3], [4, 5, 6]],","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":38726,"byte_end":38763,"line_start":1143,"line_end":1143,"column_start":1,"column_end":38}},{"value":"/     array![[7, 8, 9], [10, 11, 12]],","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":38764,"byte_end":38804,"line_start":1144,"line_end":1144,"column_start":1,"column_end":41}},{"value":"/ ];","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":38805,"byte_end":38811,"line_start":1145,"line_end":1145,"column_start":1,"column_end":7}},{"value":"/ let inner_shape = nested[0].dim();","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":38812,"byte_end":38850,"line_start":1146,"line_end":1146,"column_start":1,"column_end":39}},{"value":"/ let shape = (nested.len(), inner_shape.0, inner_shape.1);","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":38851,"byte_end":38912,"line_start":1147,"line_end":1147,"column_start":1,"column_end":62}},{"value":"/ let flat: Vec<i32> = nested.iter().flatten().cloned().collect();","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":38913,"byte_end":38981,"line_start":1148,"line_end":1148,"column_start":1,"column_end":69}},{"value":"/ let arr = Array3::from_shape_vec(shape, flat)?;","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":38982,"byte_end":39033,"line_start":1149,"line_end":1149,"column_start":1,"column_end":52}},{"value":"/ assert_eq!(arr, array![","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":39034,"byte_end":39061,"line_start":1150,"line_end":1150,"column_start":1,"column_end":28}},{"value":"/     [[1, 2, 3], [4, 5, 6]],","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":39062,"byte_end":39093,"line_start":1151,"line_end":1151,"column_start":1,"column_end":32}},{"value":"/     [[7, 8, 9], [10, 11, 12]],","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":39094,"byte_end":39128,"line_start":1152,"line_end":1152,"column_start":1,"column_end":35}},{"value":"/ ]);","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":39129,"byte_end":39136,"line_start":1153,"line_end":1153,"column_start":1,"column_end":8}},{"value":"/ # Ok::<(), ndarray::ShapeError>(())","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":39137,"byte_end":39176,"line_start":1154,"line_end":1154,"column_start":1,"column_end":40}},{"value":"/ ```","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":39177,"byte_end":39184,"line_start":1155,"line_end":1155,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":39185,"byte_end":39188,"line_start":1156,"line_end":1156,"column_start":1,"column_end":4}},{"value":"/ Note that this implementation assumes that the nested `Vec`s are all the","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":39189,"byte_end":39265,"line_start":1157,"line_end":1157,"column_start":1,"column_end":77}},{"value":"/ same shape and that the `Vec` is non-empty. Depending on your application,","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":39266,"byte_end":39344,"line_start":1158,"line_end":1158,"column_start":1,"column_end":79}},{"value":"/ it may be a good idea to add checks for these assumptions and possibly","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":39345,"byte_end":39419,"line_start":1159,"line_end":1159,"column_start":1,"column_end":75}},{"value":"/ choose a different way to handle the empty case.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":39420,"byte_end":39472,"line_start":1160,"line_end":1160,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":39473,"byte_end":39476,"line_start":1161,"line_end":1161,"column_start":1,"column_end":4}}]},{"kind":"Type","id":{"krate":0,"index":2882},"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":47081,"byte_end":47089,"line_start":1314,"line_end":1314,"column_start":10,"column_end":18},"name":"ArcArray","qualname":"::ArcArray","value":"ArrayBase<OwnedArcRepr<A>, D>","parent":null,"children":[],"decl_id":null,"docs":" An array where the data has shared ownership and is copy on write.","sig":null,"attributes":[{"value":"/ An array where the data has shared ownership and is copy on write.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":46000,"byte_end":46070,"line_start":1292,"line_end":1292,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":46071,"byte_end":46074,"line_start":1293,"line_end":1293,"column_start":1,"column_end":4}},{"value":"/ The `ArcArray<A, D>` is parameterized by `A` for the element type and `D` for","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":46075,"byte_end":46156,"line_start":1294,"line_end":1294,"column_start":1,"column_end":82}},{"value":"/ the dimensionality.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":46157,"byte_end":46180,"line_start":1295,"line_end":1295,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":46181,"byte_end":46184,"line_start":1296,"line_end":1296,"column_start":1,"column_end":4}},{"value":"/ It can act as both an owner as the data as well as a shared reference (view","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":46185,"byte_end":46264,"line_start":1297,"line_end":1297,"column_start":1,"column_end":80}},{"value":"/ like).","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":46265,"byte_end":46275,"line_start":1298,"line_end":1298,"column_start":1,"column_end":11}},{"value":"/ Calling a method for mutating elements on `ArcArray`, for example","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":46276,"byte_end":46345,"line_start":1299,"line_end":1299,"column_start":1,"column_end":70}},{"value":"/ [`view_mut()`](struct.ArrayBase.html#method.view_mut) or","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":46346,"byte_end":46406,"line_start":1300,"line_end":1300,"column_start":1,"column_end":61}},{"value":"/ [`get_mut()`](struct.ArrayBase.html#method.get_mut), will break sharing and","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":46407,"byte_end":46486,"line_start":1301,"line_end":1301,"column_start":1,"column_end":80}},{"value":"/ require a clone of the data (if it is not uniquely held).","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":46487,"byte_end":46548,"line_start":1302,"line_end":1302,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":46549,"byte_end":46552,"line_start":1303,"line_end":1303,"column_start":1,"column_end":4}},{"value":"/ `ArcArray` uses atomic reference counting like `Arc`, so it is `Send` and","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":46553,"byte_end":46630,"line_start":1304,"line_end":1304,"column_start":1,"column_end":78}},{"value":"/ `Sync` (when allowed by the element type of the array too).","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":46631,"byte_end":46694,"line_start":1305,"line_end":1305,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":46695,"byte_end":46698,"line_start":1306,"line_end":1306,"column_start":1,"column_end":4}},{"value":"/ [**`ArrayBase`**](struct.ArrayBase.html) is used to implement both the owned","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":46699,"byte_end":46779,"line_start":1307,"line_end":1307,"column_start":1,"column_end":81}},{"value":"/ arrays and the views; see its docs for an overview of all array features.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":46780,"byte_end":46857,"line_start":1308,"line_end":1308,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":46858,"byte_end":46861,"line_start":1309,"line_end":1309,"column_start":1,"column_end":4}},{"value":"/ See also:","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":46862,"byte_end":46875,"line_start":1310,"line_end":1310,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":46876,"byte_end":46879,"line_start":1311,"line_end":1311,"column_start":1,"column_end":4}},{"value":"/ + [Constructor Methods for Owned Arrays](struct.ArrayBase.html#constructor-methods-for-owned-arrays)","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":46880,"byte_end":46984,"line_start":1312,"line_end":1312,"column_start":1,"column_end":105}},{"value":"/ + [Methods For All Array Types](struct.ArrayBase.html#methods-for-all-array-types)","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":46985,"byte_end":47071,"line_start":1313,"line_end":1313,"column_start":1,"column_end":87}}]},{"kind":"Type","id":{"krate":0,"index":2885},"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":47957,"byte_end":47962,"line_start":1337,"line_end":1337,"column_start":10,"column_end":15},"name":"Array","qualname":"::Array","value":"ArrayBase<OwnedRepr<A>, D>","parent":null,"children":[],"decl_id":null,"docs":" An array that owns its data uniquely.","sig":null,"attributes":[{"value":"/ An array that owns its data uniquely.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":47130,"byte_end":47171,"line_start":1316,"line_end":1316,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":47172,"byte_end":47175,"line_start":1317,"line_end":1317,"column_start":1,"column_end":4}},{"value":"/ `Array` is the main n-dimensional array type, and it owns all its array","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":47176,"byte_end":47251,"line_start":1318,"line_end":1318,"column_start":1,"column_end":76}},{"value":"/ elements.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":47252,"byte_end":47265,"line_start":1319,"line_end":1319,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":47266,"byte_end":47269,"line_start":1320,"line_end":1320,"column_start":1,"column_end":4}},{"value":"/ The `Array<A, D>` is parameterized by `A` for the element type and `D` for","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":47270,"byte_end":47348,"line_start":1321,"line_end":1321,"column_start":1,"column_end":79}},{"value":"/ the dimensionality.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":47349,"byte_end":47372,"line_start":1322,"line_end":1322,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":47373,"byte_end":47376,"line_start":1323,"line_end":1323,"column_start":1,"column_end":4}},{"value":"/ [**`ArrayBase`**](struct.ArrayBase.html) is used to implement both the owned","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":47377,"byte_end":47457,"line_start":1324,"line_end":1324,"column_start":1,"column_end":81}},{"value":"/ arrays and the views; see its docs for an overview of all array features.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":47458,"byte_end":47535,"line_start":1325,"line_end":1325,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":47536,"byte_end":47539,"line_start":1326,"line_end":1326,"column_start":1,"column_end":4}},{"value":"/ See also:","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":47540,"byte_end":47553,"line_start":1327,"line_end":1327,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":47554,"byte_end":47557,"line_start":1328,"line_end":1328,"column_start":1,"column_end":4}},{"value":"/ + [Constructor Methods for Owned Arrays](struct.ArrayBase.html#constructor-methods-for-owned-arrays)","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":47558,"byte_end":47662,"line_start":1329,"line_end":1329,"column_start":1,"column_end":105}},{"value":"/ + [Methods For All Array Types](struct.ArrayBase.html#methods-for-all-array-types)","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":47663,"byte_end":47749,"line_start":1330,"line_end":1330,"column_start":1,"column_end":87}},{"value":"/ + Dimensionality-specific type alises","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":47750,"byte_end":47791,"line_start":1331,"line_end":1331,"column_start":1,"column_end":42}},{"value":"/ [`Array1`](type.Array1.html),","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":47792,"byte_end":47825,"line_start":1332,"line_end":1332,"column_start":1,"column_end":34}},{"value":"/ [`Array2`](type.Array2.html),","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":47826,"byte_end":47859,"line_start":1333,"line_end":1333,"column_start":1,"column_end":34}},{"value":"/ [`Array3`](type.Array3.html), ...,","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":47860,"byte_end":47898,"line_start":1334,"line_end":1334,"column_start":1,"column_end":39}},{"value":"/ [`ArrayD`](type.ArrayD.html),","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":47899,"byte_end":47932,"line_start":1335,"line_end":1335,"column_start":1,"column_end":34}},{"value":"/ and so on.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":47933,"byte_end":47947,"line_start":1336,"line_end":1336,"column_start":1,"column_end":15}}]},{"kind":"Type","id":{"krate":0,"index":2888},"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":48876,"byte_end":48884,"line_start":1358,"line_end":1358,"column_start":10,"column_end":18},"name":"CowArray","qualname":"::CowArray","value":"ArrayBase<CowRepr, D>","parent":null,"children":[],"decl_id":null,"docs":" An array with copy-on-write behavior.","sig":null,"attributes":[{"value":"/ An array with copy-on-write behavior.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":48000,"byte_end":48041,"line_start":1339,"line_end":1339,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":48042,"byte_end":48045,"line_start":1340,"line_end":1340,"column_start":1,"column_end":4}},{"value":"/ An `CowArray` represents either a uniquely owned array or a view of an","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":48046,"byte_end":48120,"line_start":1341,"line_end":1341,"column_start":1,"column_end":75}},{"value":"/ array. The `'a` corresponds to the lifetime of the view variant.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":48121,"byte_end":48189,"line_start":1342,"line_end":1342,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":48190,"byte_end":48193,"line_start":1343,"line_end":1343,"column_start":1,"column_end":4}},{"value":"/ This type is analogous to","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":48194,"byte_end":48223,"line_start":1344,"line_end":1344,"column_start":1,"column_end":30}},{"value":"/ [`std::borrow::Cow`](https://doc.rust-lang.org/std/borrow/enum.Cow.html).","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":48224,"byte_end":48301,"line_start":1345,"line_end":1345,"column_start":1,"column_end":78}},{"value":"/ If a `CowArray` instance is the immutable view variant, then calling a","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":48302,"byte_end":48376,"line_start":1346,"line_end":1346,"column_start":1,"column_end":75}},{"value":"/ method for mutating elements in the array will cause it to be converted","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":48377,"byte_end":48452,"line_start":1347,"line_end":1347,"column_start":1,"column_end":76}},{"value":"/ into the owned variant (by cloning all the elements) before the","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":48453,"byte_end":48520,"line_start":1348,"line_end":1348,"column_start":1,"column_end":68}},{"value":"/ modification is performed.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":48521,"byte_end":48551,"line_start":1349,"line_end":1349,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":48552,"byte_end":48555,"line_start":1350,"line_end":1350,"column_start":1,"column_end":4}},{"value":"/ Array views have all the methods of an array (see [`ArrayBase`][ab]).","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":48556,"byte_end":48629,"line_start":1351,"line_end":1351,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":48630,"byte_end":48633,"line_start":1352,"line_end":1352,"column_start":1,"column_end":4}},{"value":"/ See also [`ArcArray`](type.ArcArray.html), which also provides","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":48634,"byte_end":48700,"line_start":1353,"line_end":1353,"column_start":1,"column_end":67}},{"value":"/ copy-on-write behavior but has a reference-counted pointer to the data","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":48701,"byte_end":48775,"line_start":1354,"line_end":1354,"column_start":1,"column_end":75}},{"value":"/ instead of either a view or a uniquely owned copy.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":48776,"byte_end":48830,"line_start":1355,"line_end":1355,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":48831,"byte_end":48834,"line_start":1356,"line_end":1356,"column_start":1,"column_end":4}},{"value":"/ [ab]: struct.ArrayBase.html","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":48835,"byte_end":48866,"line_start":1357,"line_end":1357,"column_start":1,"column_end":32}}]},{"kind":"Type","id":{"krate":0,"index":2892},"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":49406,"byte_end":49415,"line_start":1373,"line_end":1373,"column_start":10,"column_end":19},"name":"ArrayView","qualname":"::ArrayView","value":"ArrayBase<ViewRepr<&'a A>, D>","parent":null,"children":[],"decl_id":null,"docs":" A read-only array view.","sig":null,"attributes":[{"value":"/ A read-only array view.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":48928,"byte_end":48955,"line_start":1360,"line_end":1360,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":48956,"byte_end":48959,"line_start":1361,"line_end":1361,"column_start":1,"column_end":4}},{"value":"/ An array view represents an array or a part of it, created from","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":48960,"byte_end":49027,"line_start":1362,"line_end":1362,"column_start":1,"column_end":68}},{"value":"/ an iterator, subview or slice of an array.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":49028,"byte_end":49074,"line_start":1363,"line_end":1363,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":49075,"byte_end":49078,"line_start":1364,"line_end":1364,"column_start":1,"column_end":4}},{"value":"/ The `ArrayView<'a, A, D>` is parameterized by `'a` for the scope of the","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":49079,"byte_end":49154,"line_start":1365,"line_end":1365,"column_start":1,"column_end":76}},{"value":"/ borrow, `A` for the element type and `D` for the dimensionality.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":49155,"byte_end":49223,"line_start":1366,"line_end":1366,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":49224,"byte_end":49227,"line_start":1367,"line_end":1367,"column_start":1,"column_end":4}},{"value":"/ Array views have all the methods of an array (see [`ArrayBase`][ab]).","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":49228,"byte_end":49301,"line_start":1368,"line_end":1368,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":49302,"byte_end":49305,"line_start":1369,"line_end":1369,"column_start":1,"column_end":4}},{"value":"/ See also [`ArrayViewMut`](type.ArrayViewMut.html).","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":49306,"byte_end":49360,"line_start":1370,"line_end":1370,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":49361,"byte_end":49364,"line_start":1371,"line_end":1371,"column_start":1,"column_end":4}},{"value":"/ [ab]: struct.ArrayBase.html","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":49365,"byte_end":49396,"line_start":1372,"line_end":1372,"column_start":1,"column_end":32}}]},{"kind":"Type","id":{"krate":0,"index":2896},"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":49936,"byte_end":49948,"line_start":1388,"line_end":1388,"column_start":10,"column_end":22},"name":"ArrayViewMut","qualname":"::ArrayViewMut","value":"ArrayBase<ViewRepr<&'a mut A>, D>","parent":null,"children":[],"decl_id":null,"docs":" A read-write array view.","sig":null,"attributes":[{"value":"/ A read-write array view.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":49460,"byte_end":49488,"line_start":1375,"line_end":1375,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":49489,"byte_end":49492,"line_start":1376,"line_end":1376,"column_start":1,"column_end":4}},{"value":"/ An array view represents an array or a part of it, created from","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":49493,"byte_end":49560,"line_start":1377,"line_end":1377,"column_start":1,"column_end":68}},{"value":"/ an iterator, subview or slice of an array.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":49561,"byte_end":49607,"line_start":1378,"line_end":1378,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":49608,"byte_end":49611,"line_start":1379,"line_end":1379,"column_start":1,"column_end":4}},{"value":"/ The `ArrayViewMut<'a, A, D>` is parameterized by `'a` for the scope of the","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":49612,"byte_end":49690,"line_start":1380,"line_end":1380,"column_start":1,"column_end":79}},{"value":"/ borrow, `A` for the element type and `D` for the dimensionality.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":49691,"byte_end":49759,"line_start":1381,"line_end":1381,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":49760,"byte_end":49763,"line_start":1382,"line_end":1382,"column_start":1,"column_end":4}},{"value":"/ Array views have all the methods of an array (see [`ArrayBase`][ab]).","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":49764,"byte_end":49837,"line_start":1383,"line_end":1383,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":49838,"byte_end":49841,"line_start":1384,"line_end":1384,"column_start":1,"column_end":4}},{"value":"/ See also [`ArrayView`](type.ArrayView.html).","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":49842,"byte_end":49890,"line_start":1385,"line_end":1385,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":49891,"byte_end":49894,"line_start":1386,"line_end":1386,"column_start":1,"column_end":4}},{"value":"/ [ab]: struct.ArrayBase.html","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":49895,"byte_end":49926,"line_start":1387,"line_end":1387,"column_start":1,"column_end":32}}]},{"kind":"Type","id":{"krate":0,"index":2900},"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":50948,"byte_end":50960,"line_start":1413,"line_end":1413,"column_start":10,"column_end":22},"name":"RawArrayView","qualname":"::RawArrayView","value":"ArrayBase<RawViewRepr<*const A>, D>","parent":null,"children":[],"decl_id":null,"docs":" A read-only array view without a lifetime.","sig":null,"attributes":[{"value":"/ A read-only array view without a lifetime.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":49997,"byte_end":50043,"line_start":1390,"line_end":1390,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":50044,"byte_end":50047,"line_start":1391,"line_end":1391,"column_start":1,"column_end":4}},{"value":"/ This is similar to [`ArrayView`] but does not carry any lifetime or","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":50048,"byte_end":50119,"line_start":1392,"line_end":1392,"column_start":1,"column_end":72}},{"value":"/ ownership information, and its data cannot be read without an unsafe","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":50120,"byte_end":50192,"line_start":1393,"line_end":1393,"column_start":1,"column_end":73}},{"value":"/ conversion into an [`ArrayView`]. The relationship between `RawArrayView`","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":50193,"byte_end":50270,"line_start":1394,"line_end":1394,"column_start":1,"column_end":78}},{"value":"/ and [`ArrayView`] is somewhat analogous to the relationship between `*const","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":50271,"byte_end":50350,"line_start":1395,"line_end":1395,"column_start":1,"column_end":80}},{"value":"/ T` and `&T`, but `RawArrayView` has additional requirements that `*const T`","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":50351,"byte_end":50430,"line_start":1396,"line_end":1396,"column_start":1,"column_end":80}},{"value":"/ does not, such as non-nullness.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":50431,"byte_end":50466,"line_start":1397,"line_end":1397,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":50467,"byte_end":50470,"line_start":1398,"line_end":1398,"column_start":1,"column_end":4}},{"value":"/ [`ArrayView`]: type.ArrayView.html","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":50471,"byte_end":50509,"line_start":1399,"line_end":1399,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":50510,"byte_end":50513,"line_start":1400,"line_end":1400,"column_start":1,"column_end":4}},{"value":"/ The `RawArrayView<A, D>` is parameterized by `A` for the element type and","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":50514,"byte_end":50591,"line_start":1401,"line_end":1401,"column_start":1,"column_end":78}},{"value":"/ `D` for the dimensionality.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":50592,"byte_end":50623,"line_start":1402,"line_end":1402,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":50624,"byte_end":50627,"line_start":1403,"line_end":1403,"column_start":1,"column_end":4}},{"value":"/ Raw array views have all the methods of an array (see","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":50628,"byte_end":50685,"line_start":1404,"line_end":1404,"column_start":1,"column_end":58}},{"value":"/ [`ArrayBase`](struct.ArrayBase.html)).","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":50686,"byte_end":50728,"line_start":1405,"line_end":1405,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":50729,"byte_end":50732,"line_start":1406,"line_end":1406,"column_start":1,"column_end":4}},{"value":"/ See also [`RawArrayViewMut`](type.RawArrayViewMut.html).","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":50733,"byte_end":50793,"line_start":1407,"line_end":1407,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":50794,"byte_end":50797,"line_start":1408,"line_end":1408,"column_start":1,"column_end":4}},{"value":"/ # Warning","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":50798,"byte_end":50811,"line_start":1409,"line_end":1409,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":50812,"byte_end":50815,"line_start":1410,"line_end":1410,"column_start":1,"column_end":4}},{"value":"/ You can't use this type with an arbitrary raw pointer; see","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":50816,"byte_end":50878,"line_start":1411,"line_end":1411,"column_start":1,"column_end":63}},{"value":"/ [`from_shape_ptr`](#method.from_shape_ptr) for details.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":50879,"byte_end":50938,"line_start":1412,"line_end":1412,"column_start":1,"column_end":60}}]},{"kind":"Type","id":{"krate":0,"index":2903},"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":51982,"byte_end":51997,"line_start":1438,"line_end":1438,"column_start":10,"column_end":25},"name":"RawArrayViewMut","qualname":"::RawArrayViewMut","value":"ArrayBase<RawViewRepr<*mut A>, D>","parent":null,"children":[],"decl_id":null,"docs":" A mutable array view without a lifetime.","sig":null,"attributes":[{"value":"/ A mutable array view without a lifetime.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":51007,"byte_end":51051,"line_start":1415,"line_end":1415,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":51052,"byte_end":51055,"line_start":1416,"line_end":1416,"column_start":1,"column_end":4}},{"value":"/ This is similar to [`ArrayViewMut`] but does not carry any lifetime or","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":51056,"byte_end":51130,"line_start":1417,"line_end":1417,"column_start":1,"column_end":75}},{"value":"/ ownership information, and its data cannot be read/written without an","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":51131,"byte_end":51204,"line_start":1418,"line_end":1418,"column_start":1,"column_end":74}},{"value":"/ unsafe conversion into an [`ArrayViewMut`]. The relationship between","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":51205,"byte_end":51277,"line_start":1419,"line_end":1419,"column_start":1,"column_end":73}},{"value":"/ `RawArrayViewMut` and [`ArrayViewMut`] is somewhat analogous to the","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":51278,"byte_end":51349,"line_start":1420,"line_end":1420,"column_start":1,"column_end":72}},{"value":"/ relationship between `*mut T` and `&mut T`, but `RawArrayViewMut` has","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":51350,"byte_end":51423,"line_start":1421,"line_end":1421,"column_start":1,"column_end":74}},{"value":"/ additional requirements that `*mut T` does not, such as non-nullness.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":51424,"byte_end":51497,"line_start":1422,"line_end":1422,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":51498,"byte_end":51501,"line_start":1423,"line_end":1423,"column_start":1,"column_end":4}},{"value":"/ [`ArrayViewMut`]: type.ArrayViewMut.html","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":51502,"byte_end":51546,"line_start":1424,"line_end":1424,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":51547,"byte_end":51550,"line_start":1425,"line_end":1425,"column_start":1,"column_end":4}},{"value":"/ The `RawArrayViewMut<A, D>` is parameterized by `A` for the element type","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":51551,"byte_end":51627,"line_start":1426,"line_end":1426,"column_start":1,"column_end":77}},{"value":"/ and `D` for the dimensionality.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":51628,"byte_end":51663,"line_start":1427,"line_end":1427,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":51664,"byte_end":51667,"line_start":1428,"line_end":1428,"column_start":1,"column_end":4}},{"value":"/ Raw array views have all the methods of an array (see","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":51668,"byte_end":51725,"line_start":1429,"line_end":1429,"column_start":1,"column_end":58}},{"value":"/ [`ArrayBase`](struct.ArrayBase.html)).","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":51726,"byte_end":51768,"line_start":1430,"line_end":1430,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":51769,"byte_end":51772,"line_start":1431,"line_end":1431,"column_start":1,"column_end":4}},{"value":"/ See also [`RawArrayView`](type.RawArrayView.html).","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":51773,"byte_end":51827,"line_start":1432,"line_end":1432,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":51828,"byte_end":51831,"line_start":1433,"line_end":1433,"column_start":1,"column_end":4}},{"value":"/ # Warning","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":51832,"byte_end":51845,"line_start":1434,"line_end":1434,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":51846,"byte_end":51849,"line_start":1435,"line_end":1435,"column_start":1,"column_end":4}},{"value":"/ You can't use this type with an arbitrary raw pointer; see","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":51850,"byte_end":51912,"line_start":1436,"line_end":1436,"column_start":1,"column_end":63}},{"value":"/ [`from_shape_ptr`](#method.from_shape_ptr) for details.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":51913,"byte_end":51972,"line_start":1437,"line_end":1437,"column_start":1,"column_end":60}}]},{"kind":"Struct","id":{"krate":0,"index":6183},"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":52251,"byte_end":52263,"line_start":1447,"line_end":1447,"column_start":12,"column_end":24},"name":"OwnedArcRepr","qualname":"::OwnedArcRepr","value":"","parent":null,"children":[],"decl_id":null,"docs":" ArcArray's representation.","sig":null,"attributes":[{"value":"/ ArcArray's representation.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":52073,"byte_end":52103,"line_start":1442,"line_end":1442,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":52104,"byte_end":52107,"line_start":1443,"line_end":1443,"column_start":1,"column_end":4}},{"value":"/ *Don’t use this type directly—use the type alias","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":52108,"byte_end":52164,"line_start":1444,"line_end":1444,"column_start":1,"column_end":53}},{"value":"/ [`ArcArray`](type.ArcArray.html) for the array type!*","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":52165,"byte_end":52222,"line_start":1445,"line_end":1445,"column_start":1,"column_end":58}}]},{"kind":"Struct","id":{"krate":0,"index":6190},"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":52727,"byte_end":52738,"line_start":1462,"line_end":1462,"column_start":12,"column_end":23},"name":"RawViewRepr","qualname":"::RawViewRepr","value":"RawViewRepr {  }","parent":null,"children":[{"krate":0,"index":6192}],"decl_id":null,"docs":" Array pointer’s representation.","sig":null,"attributes":[{"value":"/ Array pointer’s representation.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":52400,"byte_end":52437,"line_start":1455,"line_end":1455,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":52438,"byte_end":52441,"line_start":1456,"line_end":1456,"column_start":1,"column_end":4}},{"value":"/ *Don’t use this type directly—use the type aliases","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":52442,"byte_end":52500,"line_start":1457,"line_end":1457,"column_start":1,"column_end":55}},{"value":"/ [`RawArrayView`](type.RawArrayView.html) /","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":52501,"byte_end":52547,"line_start":1458,"line_end":1458,"column_start":1,"column_end":47}},{"value":"/ [`RawArrayViewMut`](type.RawArrayViewMut.html) for the array type!*","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":52548,"byte_end":52619,"line_start":1459,"line_end":1459,"column_start":1,"column_end":72}}]},{"kind":"Struct","id":{"krate":0,"index":6198},"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":53195,"byte_end":53203,"line_start":1480,"line_end":1480,"column_start":12,"column_end":20},"name":"ViewRepr","qualname":"::ViewRepr","value":"ViewRepr {  }","parent":null,"children":[{"krate":0,"index":6200}],"decl_id":null,"docs":" Array view’s representation.","sig":null,"attributes":[{"value":"/ Array view’s representation.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":52892,"byte_end":52926,"line_start":1473,"line_end":1473,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":52927,"byte_end":52930,"line_start":1474,"line_end":1474,"column_start":1,"column_end":4}},{"value":"/ *Don’t use this type directly—use the type aliases","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":52931,"byte_end":52989,"line_start":1475,"line_end":1475,"column_start":1,"column_end":55}},{"value":"/ [`ArrayView`](type.ArrayView.html)","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":52990,"byte_end":53028,"line_start":1476,"line_end":1476,"column_start":1,"column_end":39}},{"value":"/ / [`ArrayViewMut`](type.ArrayViewMut.html) for the array type!*","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":53029,"byte_end":53096,"line_start":1477,"line_end":1477,"column_start":1,"column_end":68}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2919},"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":53554,"byte_end":53558,"line_start":1497,"line_end":1497,"column_start":5,"column_end":9},"name":"View","qualname":"::CowRepr::View","value":"CowRepr::View(ViewRepr<&'a A>)","parent":{"krate":0,"index":2916},"children":[],"decl_id":null,"docs":" Borrowed data.\n","sig":null,"attributes":[{"value":"/ Borrowed data.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":53531,"byte_end":53549,"line_start":1496,"line_end":1496,"column_start":5,"column_end":23}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2922},"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":53601,"byte_end":53606,"line_start":1499,"line_end":1499,"column_start":5,"column_end":10},"name":"Owned","qualname":"::CowRepr::Owned","value":"CowRepr::Owned(OwnedRepr<A>)","parent":{"krate":0,"index":2916},"children":[],"decl_id":null,"docs":" Owned data.\n","sig":null,"attributes":[{"value":"/ Owned data.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":53581,"byte_end":53596,"line_start":1498,"line_end":1498,"column_start":5,"column_end":20}}]},{"kind":"Enum","id":{"krate":0,"index":2916},"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":53510,"byte_end":53517,"line_start":1495,"line_end":1495,"column_start":10,"column_end":17},"name":"CowRepr","qualname":"::CowRepr","value":"pub enum CowRepr<'a, A> {\n\n    /// Borrowed data.\n    View(ViewRepr<&'a A>),\n\n    /// Owned data.\n    Owned(OwnedRepr<A>),\n}","parent":null,"children":[{"krate":0,"index":2919},{"krate":0,"index":2922}],"decl_id":null,"docs":" CowArray's representation.","sig":null,"attributes":[{"value":"/ CowArray's representation.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":53353,"byte_end":53383,"line_start":1491,"line_end":1491,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":53384,"byte_end":53387,"line_start":1492,"line_end":1492,"column_start":1,"column_end":4}},{"value":"/ *Don't use this type directly—use the type alias","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":53388,"byte_end":53442,"line_start":1493,"line_end":1493,"column_start":1,"column_end":53}},{"value":"/ [`CowArray`](type.CowArray.html) for the array type!*","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":53443,"byte_end":53500,"line_start":1494,"line_end":1494,"column_start":1,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":2928},"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":53724,"byte_end":53731,"line_start":1504,"line_end":1504,"column_start":12,"column_end":19},"name":"is_view","qualname":"<CowRepr>::is_view","value":"pub fn is_view(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` iff the data is the `View` variant.\n","sig":null,"attributes":[{"value":"/ Returns `true` iff the data is the `View` variant.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":53658,"byte_end":53712,"line_start":1503,"line_end":1503,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":2929},"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":53936,"byte_end":53944,"line_start":1512,"line_end":1512,"column_start":12,"column_end":20},"name":"is_owned","qualname":"<CowRepr>::is_owned","value":"pub fn is_owned(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` iff the data is the `Owned` variant.\n","sig":null,"attributes":[{"value":"/ Returns `true` iff the data is the `Owned` variant.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":53869,"byte_end":53924,"line_start":1511,"line_end":1511,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":2983},"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_constructors.rs","byte_start":432812,"byte_end":432820,"line_start":57,"line_end":57,"column_start":12,"column_end":20},"name":"from_vec","qualname":"<ArrayBase<S, Ix1>>::from_vec","value":"pub fn from_vec(Vec<A>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a one-dimensional array from a vector (no copying needed).","sig":null,"attributes":[{"value":"/ Create a one-dimensional array from a vector (no copying needed).","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_constructors.rs","byte_start":432529,"byte_end":432598,"line_start":48,"line_end":48,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_constructors.rs","byte_start":432603,"byte_end":432606,"line_start":49,"line_end":49,"column_start":5,"column_end":8}},{"value":"/ **Panics** if the length is greater than `isize::MAX`.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_constructors.rs","byte_start":432611,"byte_end":432669,"line_start":50,"line_end":50,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_constructors.rs","byte_start":432674,"byte_end":432677,"line_start":51,"line_end":51,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_constructors.rs","byte_start":432682,"byte_end":432693,"line_start":52,"line_end":52,"column_start":5,"column_end":16}},{"value":"/ use ndarray::Array;","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_constructors.rs","byte_start":432698,"byte_end":432721,"line_start":53,"line_end":53,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_constructors.rs","byte_start":432726,"byte_end":432729,"line_start":54,"line_end":54,"column_start":5,"column_end":8}},{"value":"/ let array = Array::from_vec(vec![1., 2., 3., 4.]);","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_constructors.rs","byte_start":432734,"byte_end":432788,"line_start":55,"line_end":55,"column_start":5,"column_end":59}},{"value":"/ ```","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_constructors.rs","byte_start":432793,"byte_end":432800,"line_start":56,"line_end":56,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2984},"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_constructors.rs","byte_start":433409,"byte_end":433418,"line_start":77,"line_end":77,"column_start":12,"column_end":21},"name":"from_iter","qualname":"<ArrayBase<S, Ix1>>::from_iter","value":"pub fn from_iter<I: IntoIterator<Item = A>>(I) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a one-dimensional array from an iterator or iterable.","sig":null,"attributes":[{"value":"/ Create a one-dimensional array from an iterator or iterable.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_constructors.rs","byte_start":433100,"byte_end":433164,"line_start":67,"line_end":67,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_constructors.rs","byte_start":433169,"byte_end":433172,"line_start":68,"line_end":68,"column_start":5,"column_end":8}},{"value":"/ **Panics** if the length is greater than `isize::MAX`.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_constructors.rs","byte_start":433177,"byte_end":433235,"line_start":69,"line_end":69,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_constructors.rs","byte_start":433240,"byte_end":433243,"line_start":70,"line_end":70,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_constructors.rs","byte_start":433248,"byte_end":433259,"line_start":71,"line_end":71,"column_start":5,"column_end":16}},{"value":"/ use ndarray::Array;","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_constructors.rs","byte_start":433264,"byte_end":433287,"line_start":72,"line_end":72,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_constructors.rs","byte_start":433292,"byte_end":433295,"line_start":73,"line_end":73,"column_start":5,"column_end":8}},{"value":"/ let array = Array::from_iter(0..10);","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_constructors.rs","byte_start":433300,"byte_end":433340,"line_start":74,"line_end":74,"column_start":5,"column_end":45}},{"value":"/ ```","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_constructors.rs","byte_start":433345,"byte_end":433352,"line_start":75,"line_end":75,"column_start":5,"column_end":12}},{"value":"allow(clippy :: should_implement_trait)","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_constructors.rs","byte_start":433357,"byte_end":433397,"line_start":76,"line_end":76,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":2986},"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_constructors.rs","byte_start":434310,"byte_end":434318,"line_start":99,"line_end":99,"column_start":12,"column_end":20},"name":"linspace","qualname":"<ArrayBase<S, Ix1>>::linspace","value":"pub fn linspace(A, A, usize) -> Self where A: Float","parent":null,"children":[],"decl_id":null,"docs":" Create a one-dimensional array with `n` evenly spaced elements from\n `start` to `end` (inclusive). `A` must be a floating point type.","sig":null,"attributes":[{"value":"/ Create a one-dimensional array with `n` evenly spaced elements from","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_constructors.rs","byte_start":433535,"byte_end":433606,"line_start":81,"line_end":81,"column_start":5,"column_end":76}},{"value":"/ `start` to `end` (inclusive). `A` must be a floating point type.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_constructors.rs","byte_start":433611,"byte_end":433679,"line_start":82,"line_end":82,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_constructors.rs","byte_start":433684,"byte_end":433687,"line_start":83,"line_end":83,"column_start":5,"column_end":8}},{"value":"/ Note that if `start > end`, the first element will still be `start`,","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_constructors.rs","byte_start":433692,"byte_end":433764,"line_start":84,"line_end":84,"column_start":5,"column_end":77}},{"value":"/ and the following elements will be decreasing. This is different from","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_constructors.rs","byte_start":433769,"byte_end":433842,"line_start":85,"line_end":85,"column_start":5,"column_end":78}},{"value":"/ the behavior of `std::ops::RangeInclusive`, which interprets `start >","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_constructors.rs","byte_start":433847,"byte_end":433920,"line_start":86,"line_end":86,"column_start":5,"column_end":78}},{"value":"/ end` to mean that the range is empty.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_constructors.rs","byte_start":433925,"byte_end":433966,"line_start":87,"line_end":87,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_constructors.rs","byte_start":433971,"byte_end":433974,"line_start":88,"line_end":88,"column_start":5,"column_end":8}},{"value":"/ **Panics** if `n` is greater than `isize::MAX` or if converting `n - 1`","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_constructors.rs","byte_start":433979,"byte_end":434054,"line_start":89,"line_end":89,"column_start":5,"column_end":80}},{"value":"/ to type `A` fails.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_constructors.rs","byte_start":434059,"byte_end":434081,"line_start":90,"line_end":90,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_constructors.rs","byte_start":434086,"byte_end":434089,"line_start":91,"line_end":91,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_constructors.rs","byte_start":434094,"byte_end":434105,"line_start":92,"line_end":92,"column_start":5,"column_end":16}},{"value":"/ use ndarray::{Array, arr1};","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_constructors.rs","byte_start":434110,"byte_end":434141,"line_start":93,"line_end":93,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_constructors.rs","byte_start":434146,"byte_end":434149,"line_start":94,"line_end":94,"column_start":5,"column_end":8}},{"value":"/ let array = Array::linspace(0., 1., 5);","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_constructors.rs","byte_start":434154,"byte_end":434197,"line_start":95,"line_end":95,"column_start":5,"column_end":48}},{"value":"/ assert!(array == arr1(&[0.0, 0.25, 0.5, 0.75, 1.0]))","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_constructors.rs","byte_start":434202,"byte_end":434258,"line_start":96,"line_end":96,"column_start":5,"column_end":61}},{"value":"/ ```","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_constructors.rs","byte_start":434263,"byte_end":434270,"line_start":97,"line_end":97,"column_start":5,"column_end":12}},{"value":"cfg(feature = \"std\")","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_constructors.rs","byte_start":434275,"byte_end":434298,"line_start":98,"line_end":98,"column_start":5,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":2987},"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_constructors.rs","byte_start":434903,"byte_end":434908,"line_start":118,"line_end":118,"column_start":12,"column_end":17},"name":"range","qualname":"<ArrayBase<S, Ix1>>::range","value":"pub fn range(A, A, A) -> Self where A: Float","parent":null,"children":[],"decl_id":null,"docs":" Create a one-dimensional array with elements from `start` to `end`\n (exclusive), incrementing by `step`. `A` must be a floating point type.","sig":null,"attributes":[{"value":"/ Create a one-dimensional array with elements from `start` to `end`","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_constructors.rs","byte_start":434462,"byte_end":434532,"line_start":106,"line_end":106,"column_start":5,"column_end":75}},{"value":"/ (exclusive), incrementing by `step`. `A` must be a floating point type.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_constructors.rs","byte_start":434537,"byte_end":434612,"line_start":107,"line_end":107,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_constructors.rs","byte_start":434617,"byte_end":434620,"line_start":108,"line_end":108,"column_start":5,"column_end":8}},{"value":"/ **Panics** if the length is greater than `isize::MAX`.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_constructors.rs","byte_start":434625,"byte_end":434683,"line_start":109,"line_end":109,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_constructors.rs","byte_start":434688,"byte_end":434691,"line_start":110,"line_end":110,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_constructors.rs","byte_start":434696,"byte_end":434707,"line_start":111,"line_end":111,"column_start":5,"column_end":16}},{"value":"/ use ndarray::{Array, arr1};","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_constructors.rs","byte_start":434712,"byte_end":434743,"line_start":112,"line_end":112,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_constructors.rs","byte_start":434748,"byte_end":434751,"line_start":113,"line_end":113,"column_start":5,"column_end":8}},{"value":"/ let array = Array::range(0., 5., 1.);","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_constructors.rs","byte_start":434756,"byte_end":434797,"line_start":114,"line_end":114,"column_start":5,"column_end":46}},{"value":"/ assert!(array == arr1(&[0., 1., 2., 3., 4.]))","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_constructors.rs","byte_start":434802,"byte_end":434851,"line_start":115,"line_end":115,"column_start":5,"column_end":54}},{"value":"/ ```","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_constructors.rs","byte_start":434856,"byte_end":434863,"line_start":116,"line_end":116,"column_start":5,"column_end":12}},{"value":"cfg(feature = \"std\")","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_constructors.rs","byte_start":434868,"byte_end":434891,"line_start":117,"line_end":117,"column_start":5,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":2988},"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_constructors.rs","byte_start":435918,"byte_end":435926,"line_start":147,"line_end":147,"column_start":12,"column_end":20},"name":"logspace","qualname":"<ArrayBase<S, Ix1>>::logspace","value":"pub fn logspace(A, A, A, usize) -> Self where A: Float","parent":null,"children":[],"decl_id":null,"docs":" Create a one-dimensional array with `n` logarithmically spaced\n elements, with the starting value being `base.powf(start)` and the\n final one being `base.powf(end)`. `A` must be a floating point type.","sig":null,"attributes":[{"value":"/ Create a one-dimensional array with `n` logarithmically spaced","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_constructors.rs","byte_start":435051,"byte_end":435117,"line_start":125,"line_end":125,"column_start":5,"column_end":71}},{"value":"/ elements, with the starting value being `base.powf(start)` and the","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_constructors.rs","byte_start":435122,"byte_end":435192,"line_start":126,"line_end":126,"column_start":5,"column_end":75}},{"value":"/ final one being `base.powf(end)`. `A` must be a floating point type.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_constructors.rs","byte_start":435197,"byte_end":435269,"line_start":127,"line_end":127,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_constructors.rs","byte_start":435274,"byte_end":435277,"line_start":128,"line_end":128,"column_start":5,"column_end":8}},{"value":"/ If `base` is negative, all values will be negative.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_constructors.rs","byte_start":435282,"byte_end":435337,"line_start":129,"line_end":129,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_constructors.rs","byte_start":435342,"byte_end":435345,"line_start":130,"line_end":130,"column_start":5,"column_end":8}},{"value":"/ **Panics** if `n` is greater than `isize::MAX` or if converting `n - 1`","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_constructors.rs","byte_start":435350,"byte_end":435425,"line_start":131,"line_end":131,"column_start":5,"column_end":80}},{"value":"/ to type `A` fails.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_constructors.rs","byte_start":435430,"byte_end":435452,"line_start":132,"line_end":132,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_constructors.rs","byte_start":435457,"byte_end":435460,"line_start":133,"line_end":133,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_constructors.rs","byte_start":435465,"byte_end":435476,"line_start":134,"line_end":134,"column_start":5,"column_end":16}},{"value":"/ use approx::assert_abs_diff_eq;","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_constructors.rs","byte_start":435481,"byte_end":435516,"line_start":135,"line_end":135,"column_start":5,"column_end":40}},{"value":"/ use ndarray::{Array, arr1};","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_constructors.rs","byte_start":435521,"byte_end":435552,"line_start":136,"line_end":136,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_constructors.rs","byte_start":435557,"byte_end":435560,"line_start":137,"line_end":137,"column_start":5,"column_end":8}},{"value":"/ # #[cfg(feature = \"approx\")] {","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_constructors.rs","byte_start":435565,"byte_end":435599,"line_start":138,"line_end":138,"column_start":5,"column_end":39}},{"value":"/ let array = Array::logspace(10.0, 0.0, 3.0, 4);","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_constructors.rs","byte_start":435604,"byte_end":435655,"line_start":139,"line_end":139,"column_start":5,"column_end":56}},{"value":"/ assert_abs_diff_eq!(array, arr1(&[1e0, 1e1, 1e2, 1e3]));","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_constructors.rs","byte_start":435660,"byte_end":435720,"line_start":140,"line_end":140,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_constructors.rs","byte_start":435725,"byte_end":435728,"line_start":141,"line_end":141,"column_start":5,"column_end":8}},{"value":"/ let array = Array::logspace(-10.0, 3.0, 0.0, 4);","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_constructors.rs","byte_start":435733,"byte_end":435785,"line_start":142,"line_end":142,"column_start":5,"column_end":57}},{"value":"/ assert_abs_diff_eq!(array, arr1(&[-1e3, -1e2, -1e1, -1e0]));","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_constructors.rs","byte_start":435790,"byte_end":435854,"line_start":143,"line_end":143,"column_start":5,"column_end":69}},{"value":"/ # }","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_constructors.rs","byte_start":435859,"byte_end":435866,"line_start":144,"line_end":144,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_constructors.rs","byte_start":435871,"byte_end":435878,"line_start":145,"line_end":145,"column_start":5,"column_end":12}},{"value":"cfg(feature = \"std\")","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_constructors.rs","byte_start":435883,"byte_end":435906,"line_start":146,"line_end":146,"column_start":5,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":2989},"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_constructors.rs","byte_start":437167,"byte_end":437176,"line_start":182,"line_end":182,"column_start":12,"column_end":21},"name":"geomspace","qualname":"<ArrayBase<S, Ix1>>::geomspace","value":"pub fn geomspace(A, A, usize) -> Option<Self> where A: Float","parent":null,"children":[],"decl_id":null,"docs":" Create a one-dimensional array with `n` geometrically spaced elements\n from `start` to `end` (inclusive). `A` must be a floating point type.","sig":null,"attributes":[{"value":"/ Create a one-dimensional array with `n` geometrically spaced elements","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_constructors.rs","byte_start":436085,"byte_end":436158,"line_start":154,"line_end":154,"column_start":5,"column_end":78}},{"value":"/ from `start` to `end` (inclusive). `A` must be a floating point type.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_constructors.rs","byte_start":436163,"byte_end":436236,"line_start":155,"line_end":155,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_constructors.rs","byte_start":436241,"byte_end":436244,"line_start":156,"line_end":156,"column_start":5,"column_end":8}},{"value":"/ Returns `None` if `start` and `end` have different signs or if either","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_constructors.rs","byte_start":436249,"byte_end":436322,"line_start":157,"line_end":157,"column_start":5,"column_end":78}},{"value":"/ one is zero. Conceptually, this means that in order to obtain a `Some`","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_constructors.rs","byte_start":436327,"byte_end":436401,"line_start":158,"line_end":158,"column_start":5,"column_end":79}},{"value":"/ result, `end / start` must be positive.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_constructors.rs","byte_start":436406,"byte_end":436449,"line_start":159,"line_end":159,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_constructors.rs","byte_start":436454,"byte_end":436457,"line_start":160,"line_end":160,"column_start":5,"column_end":8}},{"value":"/ **Panics** if `n` is greater than `isize::MAX` or if converting `n - 1`","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_constructors.rs","byte_start":436462,"byte_end":436537,"line_start":161,"line_end":161,"column_start":5,"column_end":80}},{"value":"/ to type `A` fails.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_constructors.rs","byte_start":436542,"byte_end":436564,"line_start":162,"line_end":162,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_constructors.rs","byte_start":436569,"byte_end":436572,"line_start":163,"line_end":163,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_constructors.rs","byte_start":436577,"byte_end":436588,"line_start":164,"line_end":164,"column_start":5,"column_end":16}},{"value":"/ use approx::assert_abs_diff_eq;","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_constructors.rs","byte_start":436593,"byte_end":436628,"line_start":165,"line_end":165,"column_start":5,"column_end":40}},{"value":"/ use ndarray::{Array, arr1};","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_constructors.rs","byte_start":436633,"byte_end":436664,"line_start":166,"line_end":166,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_constructors.rs","byte_start":436669,"byte_end":436672,"line_start":167,"line_end":167,"column_start":5,"column_end":8}},{"value":"/ # fn example() -> Option<()> {","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_constructors.rs","byte_start":436677,"byte_end":436711,"line_start":168,"line_end":168,"column_start":5,"column_end":39}},{"value":"/ # #[cfg(feature = \"approx\")] {","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_constructors.rs","byte_start":436716,"byte_end":436750,"line_start":169,"line_end":169,"column_start":5,"column_end":39}},{"value":"/ let array = Array::geomspace(1e0, 1e3, 4)?;","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_constructors.rs","byte_start":436755,"byte_end":436802,"line_start":170,"line_end":170,"column_start":5,"column_end":52}},{"value":"/ assert_abs_diff_eq!(array, arr1(&[1e0, 1e1, 1e2, 1e3]), epsilon = 1e-12);","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_constructors.rs","byte_start":436807,"byte_end":436884,"line_start":171,"line_end":171,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_constructors.rs","byte_start":436889,"byte_end":436892,"line_start":172,"line_end":172,"column_start":5,"column_end":8}},{"value":"/ let array = Array::geomspace(-1e3, -1e0, 4)?;","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_constructors.rs","byte_start":436897,"byte_end":436946,"line_start":173,"line_end":173,"column_start":5,"column_end":54}},{"value":"/ assert_abs_diff_eq!(array, arr1(&[-1e3, -1e2, -1e1, -1e0]), epsilon = 1e-12);","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_constructors.rs","byte_start":436951,"byte_end":437032,"line_start":174,"line_end":174,"column_start":5,"column_end":86}},{"value":"/ # }","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_constructors.rs","byte_start":437037,"byte_end":437044,"line_start":175,"line_end":175,"column_start":5,"column_end":12}},{"value":"/ # Some(())","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_constructors.rs","byte_start":437049,"byte_end":437063,"line_start":176,"line_end":176,"column_start":5,"column_end":19}},{"value":"/ # }","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_constructors.rs","byte_start":437068,"byte_end":437075,"line_start":177,"line_end":177,"column_start":5,"column_end":12}},{"value":"/ #","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_constructors.rs","byte_start":437080,"byte_end":437085,"line_start":178,"line_end":178,"column_start":5,"column_end":10}},{"value":"/ # example().unwrap();","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_constructors.rs","byte_start":437090,"byte_end":437115,"line_start":179,"line_end":179,"column_start":5,"column_end":30}},{"value":"/ ```","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_constructors.rs","byte_start":437120,"byte_end":437127,"line_start":180,"line_end":180,"column_start":5,"column_end":12}},{"value":"cfg(feature = \"std\")","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_constructors.rs","byte_start":437132,"byte_end":437155,"line_start":181,"line_end":181,"column_start":5,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":2993},"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_constructors.rs","byte_start":437593,"byte_end":437596,"line_start":198,"line_end":198,"column_start":12,"column_end":15},"name":"eye","qualname":"<ArrayBase<S, Ix2>>::eye","value":"pub fn eye(Ix) -> Self where S: DataMut, A: Clone + Zero + One","parent":null,"children":[],"decl_id":null,"docs":" Create an identity matrix of size `n` (square 2D array).","sig":null,"attributes":[{"value":"/ Create an identity matrix of size `n` (square 2D array).","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_constructors.rs","byte_start":437459,"byte_end":437519,"line_start":195,"line_end":195,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_constructors.rs","byte_start":437524,"byte_end":437527,"line_start":196,"line_end":196,"column_start":5,"column_end":8}},{"value":"/ **Panics** if `n * n` would overflow `isize`.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_constructors.rs","byte_start":437532,"byte_end":437581,"line_start":197,"line_end":197,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":2994},"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_constructors.rs","byte_start":438173,"byte_end":438182,"line_start":221,"line_end":221,"column_start":12,"column_end":21},"name":"from_diag","qualname":"<ArrayBase<S, Ix2>>::from_diag","value":"pub fn from_diag<S2>(&ArrayBase<S2, Ix1>) -> Self where A: Clone + Zero,\nS: DataMut, S2: Data<Elem = A>","parent":null,"children":[],"decl_id":null,"docs":" Create a 2D matrix from its diagonal","sig":null,"attributes":[{"value":"/ Create a 2D matrix from its diagonal","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_constructors.rs","byte_start":437822,"byte_end":437862,"line_start":210,"line_end":210,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_constructors.rs","byte_start":437867,"byte_end":437870,"line_start":211,"line_end":211,"column_start":5,"column_end":8}},{"value":"/ **Panics** if `diag.len() * diag.len()` would overflow `isize`.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_constructors.rs","byte_start":437875,"byte_end":437942,"line_start":212,"line_end":212,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_constructors.rs","byte_start":437947,"byte_end":437950,"line_start":213,"line_end":213,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_constructors.rs","byte_start":437955,"byte_end":437966,"line_start":214,"line_end":214,"column_start":5,"column_end":16}},{"value":"/ use ndarray::{Array2, arr1, arr2};","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_constructors.rs","byte_start":437971,"byte_end":438009,"line_start":215,"line_end":215,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_constructors.rs","byte_start":438014,"byte_end":438017,"line_start":216,"line_end":216,"column_start":5,"column_end":8}},{"value":"/ let diag = arr1(&[1, 2]);","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_constructors.rs","byte_start":438022,"byte_end":438051,"line_start":217,"line_end":217,"column_start":5,"column_end":34}},{"value":"/ let array = Array2::from_diag(&diag);","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_constructors.rs","byte_start":438056,"byte_end":438097,"line_start":218,"line_end":218,"column_start":5,"column_end":46}},{"value":"/ assert_eq!(array, arr2(&[[1, 0], [0, 2]]));","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_constructors.rs","byte_start":438102,"byte_end":438149,"line_start":219,"line_end":219,"column_start":5,"column_end":52}},{"value":"/ ```","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_constructors.rs","byte_start":438154,"byte_end":438161,"line_start":220,"line_end":220,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3001},"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_constructors.rs","byte_start":440763,"byte_end":440772,"line_start":302,"line_end":302,"column_start":12,"column_end":21},"name":"from_elem","qualname":"<ArrayBase<S, D>>::from_elem","value":"pub fn from_elem<Sh>(Sh, A) -> Self where A: Clone, Sh: ShapeBuilder<Dim = D>","parent":null,"children":[],"decl_id":null,"docs":" Create an array with copies of `elem`, shape `shape`.","sig":null,"attributes":[{"value":"/ Create an array with copies of `elem`, shape `shape`.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_constructors.rs","byte_start":440141,"byte_end":440198,"line_start":282,"line_end":282,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_constructors.rs","byte_start":440203,"byte_end":440206,"line_start":283,"line_end":283,"column_start":5,"column_end":8}},{"value":"/ **Panics** if the product of non-zero axis lengths overflows `isize`.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_constructors.rs","byte_start":440211,"byte_end":440284,"line_start":284,"line_end":284,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_constructors.rs","byte_start":440289,"byte_end":440292,"line_start":285,"line_end":285,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_constructors.rs","byte_start":440297,"byte_end":440304,"line_start":286,"line_end":286,"column_start":5,"column_end":12}},{"value":"/ use ndarray::{Array, arr3, ShapeBuilder};","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_constructors.rs","byte_start":440309,"byte_end":440354,"line_start":287,"line_end":287,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_constructors.rs","byte_start":440359,"byte_end":440362,"line_start":288,"line_end":288,"column_start":5,"column_end":8}},{"value":"/ let a = Array::from_elem((2, 2, 2), 1.);","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_constructors.rs","byte_start":440367,"byte_end":440411,"line_start":289,"line_end":289,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_constructors.rs","byte_start":440416,"byte_end":440419,"line_start":290,"line_end":290,"column_start":5,"column_end":8}},{"value":"/ assert!(","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_constructors.rs","byte_start":440424,"byte_end":440436,"line_start":291,"line_end":291,"column_start":5,"column_end":17}},{"value":"/     a == arr3(&[[[1., 1.],","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_constructors.rs","byte_start":440441,"byte_end":440471,"line_start":292,"line_end":292,"column_start":5,"column_end":35}},{"value":"/                  [1., 1.]],","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_constructors.rs","byte_start":440476,"byte_end":440507,"line_start":293,"line_end":293,"column_start":5,"column_end":36}},{"value":"/                 [[1., 1.],","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_constructors.rs","byte_start":440512,"byte_end":440542,"line_start":294,"line_end":294,"column_start":5,"column_end":35}},{"value":"/                  [1., 1.]]])","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_constructors.rs","byte_start":440547,"byte_end":440579,"line_start":295,"line_end":295,"column_start":5,"column_end":37}},{"value":"/ );","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_constructors.rs","byte_start":440584,"byte_end":440590,"line_start":296,"line_end":296,"column_start":5,"column_end":11}},{"value":"/ assert!(a.strides() == &[4, 2, 1]);","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_constructors.rs","byte_start":440595,"byte_end":440634,"line_start":297,"line_end":297,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_constructors.rs","byte_start":440639,"byte_end":440642,"line_start":298,"line_end":298,"column_start":5,"column_end":8}},{"value":"/ let b = Array::from_elem((2, 2, 2).f(), 1.);","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_constructors.rs","byte_start":440647,"byte_end":440695,"line_start":299,"line_end":299,"column_start":5,"column_end":53}},{"value":"/ assert!(b.strides() == &[1, 2, 4]);","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_constructors.rs","byte_start":440700,"byte_end":440739,"line_start":300,"line_end":300,"column_start":5,"column_end":44}},{"value":"/ ```","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_constructors.rs","byte_start":440744,"byte_end":440751,"line_start":301,"line_end":301,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3003},"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_constructors.rs","byte_start":441225,"byte_end":441230,"line_start":316,"line_end":316,"column_start":12,"column_end":17},"name":"zeros","qualname":"<ArrayBase<S, D>>::zeros","value":"pub fn zeros<Sh>(Sh) -> Self where A: Clone + Zero, Sh: ShapeBuilder<Dim = D>","parent":null,"children":[],"decl_id":null,"docs":" Create an array with zeros, shape `shape`.","sig":null,"attributes":[{"value":"/ Create an array with zeros, shape `shape`.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_constructors.rs","byte_start":441081,"byte_end":441127,"line_start":313,"line_end":313,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_constructors.rs","byte_start":441132,"byte_end":441135,"line_start":314,"line_end":314,"column_start":5,"column_end":8}},{"value":"/ **Panics** if the product of non-zero axis lengths overflows `isize`.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_constructors.rs","byte_start":441140,"byte_end":441213,"line_start":315,"line_end":315,"column_start":5,"column_end":78}}]},{"kind":"Method","id":{"krate":0,"index":3005},"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_constructors.rs","byte_start":441526,"byte_end":441530,"line_start":327,"line_end":327,"column_start":12,"column_end":16},"name":"ones","qualname":"<ArrayBase<S, D>>::ones","value":"pub fn ones<Sh>(Sh) -> Self where A: Clone + One, Sh: ShapeBuilder<Dim = D>","parent":null,"children":[],"decl_id":null,"docs":" Create an array with ones, shape `shape`.","sig":null,"attributes":[{"value":"/ Create an array with ones, shape `shape`.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_constructors.rs","byte_start":441383,"byte_end":441428,"line_start":324,"line_end":324,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_constructors.rs","byte_start":441433,"byte_end":441436,"line_start":325,"line_end":325,"column_start":5,"column_end":8}},{"value":"/ **Panics** if the product of non-zero axis lengths overflows `isize`.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_constructors.rs","byte_start":441441,"byte_end":441514,"line_start":326,"line_end":326,"column_start":5,"column_end":78}}]},{"kind":"Method","id":{"krate":0,"index":3007},"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_constructors.rs","byte_start":441833,"byte_end":441840,"line_start":338,"line_end":338,"column_start":12,"column_end":19},"name":"default","qualname":"<ArrayBase<S, D>>::default","value":"pub fn default<Sh>(Sh) -> Self where A: Default, Sh: ShapeBuilder<Dim = D>","parent":null,"children":[],"decl_id":null,"docs":" Create an array with default values, shape `shape`","sig":null,"attributes":[{"value":"/ Create an array with default values, shape `shape`","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_constructors.rs","byte_start":441681,"byte_end":441735,"line_start":335,"line_end":335,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_constructors.rs","byte_start":441740,"byte_end":441743,"line_start":336,"line_end":336,"column_start":5,"column_end":8}},{"value":"/ **Panics** if the product of non-zero axis lengths overflows `isize`.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_constructors.rs","byte_start":441748,"byte_end":441821,"line_start":337,"line_end":337,"column_start":5,"column_end":78}}]},{"kind":"Method","id":{"krate":0,"index":3009},"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_constructors.rs","byte_start":442519,"byte_end":442539,"line_start":356,"line_end":356,"column_start":12,"column_end":32},"name":"from_shape_simple_fn","qualname":"<ArrayBase<S, D>>::from_shape_simple_fn","value":"pub fn from_shape_simple_fn<Sh, F>(Sh, F) -> Self where Sh: ShapeBuilder<Dim =\nD>, F: FnMut() -> A","parent":null,"children":[],"decl_id":null,"docs":" Create an array with values created by the function `f`.","sig":null,"attributes":[{"value":"/ Create an array with values created by the function `f`.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_constructors.rs","byte_start":442000,"byte_end":442060,"line_start":346,"line_end":346,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_constructors.rs","byte_start":442065,"byte_end":442068,"line_start":347,"line_end":347,"column_start":5,"column_end":8}},{"value":"/ `f` is called with no argument, and it should return the element to","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_constructors.rs","byte_start":442073,"byte_end":442144,"line_start":348,"line_end":348,"column_start":5,"column_end":76}},{"value":"/ create. If the precise index of the element to create is needed,","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_constructors.rs","byte_start":442149,"byte_end":442217,"line_start":349,"line_end":349,"column_start":5,"column_end":73}},{"value":"/ use [`from_shape_fn`](ArrayBase::from_shape_fn) instead.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_constructors.rs","byte_start":442222,"byte_end":442282,"line_start":350,"line_end":350,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_constructors.rs","byte_start":442287,"byte_end":442290,"line_start":351,"line_end":351,"column_start":5,"column_end":8}},{"value":"/ This constructor can be useful if the element order is not important,","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_constructors.rs","byte_start":442295,"byte_end":442368,"line_start":352,"line_end":352,"column_start":5,"column_end":78}},{"value":"/ for example if they are identical or random.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_constructors.rs","byte_start":442373,"byte_end":442421,"line_start":353,"line_end":353,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_constructors.rs","byte_start":442426,"byte_end":442429,"line_start":354,"line_end":354,"column_start":5,"column_end":8}},{"value":"/ **Panics** if the product of non-zero axis lengths overflows `isize`.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_constructors.rs","byte_start":442434,"byte_end":442507,"line_start":355,"line_end":355,"column_start":5,"column_end":78}}]},{"kind":"Method","id":{"krate":0,"index":3013},"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_constructors.rs","byte_start":443532,"byte_end":443545,"line_start":387,"line_end":387,"column_start":12,"column_end":25},"name":"from_shape_fn","qualname":"<ArrayBase<S, D>>::from_shape_fn","value":"pub fn from_shape_fn<Sh, F>(Sh, F) -> Self where Sh: ShapeBuilder<Dim = D>,\nF: FnMut(D::Pattern) -> A","parent":null,"children":[],"decl_id":null,"docs":" Create an array with values created by the function `f`.","sig":null,"attributes":[{"value":"/ Create an array with values created by the function `f`.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_constructors.rs","byte_start":442877,"byte_end":442937,"line_start":367,"line_end":367,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_constructors.rs","byte_start":442942,"byte_end":442945,"line_start":368,"line_end":368,"column_start":5,"column_end":8}},{"value":"/ `f` is called with the index of the element to create; the elements are","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_constructors.rs","byte_start":442950,"byte_end":443025,"line_start":369,"line_end":369,"column_start":5,"column_end":80}},{"value":"/ visited in arbitrary order.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_constructors.rs","byte_start":443030,"byte_end":443061,"line_start":370,"line_end":370,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_constructors.rs","byte_start":443066,"byte_end":443069,"line_start":371,"line_end":371,"column_start":5,"column_end":8}},{"value":"/ **Panics** if the product of non-zero axis lengths overflows `isize`.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_constructors.rs","byte_start":443074,"byte_end":443147,"line_start":372,"line_end":372,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_constructors.rs","byte_start":443152,"byte_end":443155,"line_start":373,"line_end":373,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_constructors.rs","byte_start":443160,"byte_end":443167,"line_start":374,"line_end":374,"column_start":5,"column_end":12}},{"value":"/ use ndarray::{Array, arr2};","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_constructors.rs","byte_start":443172,"byte_end":443203,"line_start":375,"line_end":375,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_constructors.rs","byte_start":443208,"byte_end":443211,"line_start":376,"line_end":376,"column_start":5,"column_end":8}},{"value":"/ // Create a table of i × j (with i and j from 1 to 3)","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_constructors.rs","byte_start":443216,"byte_end":443275,"line_start":377,"line_end":377,"column_start":5,"column_end":62}},{"value":"/ let ij_table = Array::from_shape_fn((3, 3), |(i, j)| (1 + i) * (1 + j));","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_constructors.rs","byte_start":443280,"byte_end":443356,"line_start":378,"line_end":378,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_constructors.rs","byte_start":443361,"byte_end":443364,"line_start":379,"line_end":379,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_constructors.rs","byte_start":443369,"byte_end":443384,"line_start":380,"line_end":380,"column_start":5,"column_end":20}},{"value":"/     ij_table,","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_constructors.rs","byte_start":443389,"byte_end":443406,"line_start":381,"line_end":381,"column_start":5,"column_end":22}},{"value":"/     arr2(&[[1, 2, 3],","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_constructors.rs","byte_start":443411,"byte_end":443436,"line_start":382,"line_end":382,"column_start":5,"column_end":30}},{"value":"/            [2, 4, 6],","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_constructors.rs","byte_start":443441,"byte_end":443466,"line_start":383,"line_end":383,"column_start":5,"column_end":30}},{"value":"/            [3, 6, 9]])","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_constructors.rs","byte_start":443471,"byte_end":443497,"line_start":384,"line_end":384,"column_start":5,"column_end":31}},{"value":"/ );","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_constructors.rs","byte_start":443502,"byte_end":443508,"line_start":385,"line_end":385,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_constructors.rs","byte_start":443513,"byte_end":443520,"line_start":386,"line_end":386,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3016},"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_constructors.rs","byte_start":445310,"byte_end":445324,"line_start":437,"line_end":437,"column_start":12,"column_end":26},"name":"from_shape_vec","qualname":"<ArrayBase<S, D>>::from_shape_vec","value":"pub fn from_shape_vec<Sh>(Sh, Vec<A>) -> Result<Self, ShapeError> where\nSh: Into<StrideShape<D>>","parent":null,"children":[],"decl_id":null,"docs":" Create an array with the given shape from a vector. (No cloning of\n elements needed.)","sig":null,"attributes":[{"value":"/ Create an array with the given shape from a vector. (No cloning of","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_constructors.rs","byte_start":444142,"byte_end":444212,"line_start":404,"line_end":404,"column_start":5,"column_end":75}},{"value":"/ elements needed.)","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_constructors.rs","byte_start":444217,"byte_end":444238,"line_start":405,"line_end":405,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_constructors.rs","byte_start":444243,"byte_end":444246,"line_start":406,"line_end":406,"column_start":5,"column_end":8}},{"value":"/ ----","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_constructors.rs","byte_start":444251,"byte_end":444259,"line_start":407,"line_end":407,"column_start":5,"column_end":13}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_constructors.rs","byte_start":444264,"byte_end":444267,"line_start":408,"line_end":408,"column_start":5,"column_end":8}},{"value":"/ For a contiguous c- or f-order shape, the following applies:","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_constructors.rs","byte_start":444272,"byte_end":444336,"line_start":409,"line_end":409,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_constructors.rs","byte_start":444341,"byte_end":444344,"line_start":410,"line_end":410,"column_start":5,"column_end":8}},{"value":"/ **Errors** if `shape` does not correspond to the number of elements in","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_constructors.rs","byte_start":444349,"byte_end":444423,"line_start":411,"line_end":411,"column_start":5,"column_end":79}},{"value":"/ `v` or if the shape/strides would result in overflowing `isize`.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_constructors.rs","byte_start":444428,"byte_end":444496,"line_start":412,"line_end":412,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_constructors.rs","byte_start":444501,"byte_end":444504,"line_start":413,"line_end":413,"column_start":5,"column_end":8}},{"value":"/ ----","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_constructors.rs","byte_start":444509,"byte_end":444517,"line_start":414,"line_end":414,"column_start":5,"column_end":13}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_constructors.rs","byte_start":444522,"byte_end":444525,"line_start":415,"line_end":415,"column_start":5,"column_end":8}},{"value":"/ For custom strides, the following applies:","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_constructors.rs","byte_start":444530,"byte_end":444576,"line_start":416,"line_end":416,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_constructors.rs","byte_start":444581,"byte_end":444584,"line_start":417,"line_end":417,"column_start":5,"column_end":8}},{"value":"/ **Errors** if strides and dimensions can point out of bounds of `v`, if","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_constructors.rs","byte_start":444589,"byte_end":444664,"line_start":418,"line_end":418,"column_start":5,"column_end":80}},{"value":"/ strides allow multiple indices to point to the same element, or if the","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_constructors.rs","byte_start":444669,"byte_end":444743,"line_start":419,"line_end":419,"column_start":5,"column_end":79}},{"value":"/ shape/strides would result in overflowing `isize`.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_constructors.rs","byte_start":444748,"byte_end":444802,"line_start":420,"line_end":420,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_constructors.rs","byte_start":444807,"byte_end":444810,"line_start":421,"line_end":421,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_constructors.rs","byte_start":444815,"byte_end":444822,"line_start":422,"line_end":422,"column_start":5,"column_end":12}},{"value":"/ use ndarray::Array;","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_constructors.rs","byte_start":444827,"byte_end":444850,"line_start":423,"line_end":423,"column_start":5,"column_end":28}},{"value":"/ use ndarray::ShapeBuilder; // Needed for .strides() method","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_constructors.rs","byte_start":444855,"byte_end":444917,"line_start":424,"line_end":424,"column_start":5,"column_end":67}},{"value":"/ use ndarray::arr2;","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_constructors.rs","byte_start":444922,"byte_end":444944,"line_start":425,"line_end":425,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_constructors.rs","byte_start":444949,"byte_end":444952,"line_start":426,"line_end":426,"column_start":5,"column_end":8}},{"value":"/ let a = Array::from_shape_vec((2, 2), vec![1., 2., 3., 4.]);","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_constructors.rs","byte_start":444957,"byte_end":445021,"line_start":427,"line_end":427,"column_start":5,"column_end":69}},{"value":"/ assert!(a.is_ok());","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_constructors.rs","byte_start":445026,"byte_end":445049,"line_start":428,"line_end":428,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_constructors.rs","byte_start":445054,"byte_end":445057,"line_start":429,"line_end":429,"column_start":5,"column_end":8}},{"value":"/ let b = Array::from_shape_vec((2, 2).strides((1, 2)),","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_constructors.rs","byte_start":445062,"byte_end":445119,"line_start":430,"line_end":430,"column_start":5,"column_end":62}},{"value":"/                               vec![1., 2., 3., 4.]).unwrap();","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_constructors.rs","byte_start":445124,"byte_end":445189,"line_start":431,"line_end":431,"column_start":5,"column_end":70}},{"value":"/ assert!(","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_constructors.rs","byte_start":445194,"byte_end":445206,"line_start":432,"line_end":432,"column_start":5,"column_end":17}},{"value":"/     b == arr2(&[[1., 3.],","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_constructors.rs","byte_start":445211,"byte_end":445240,"line_start":433,"line_end":433,"column_start":5,"column_end":34}},{"value":"/                 [2., 4.]])","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_constructors.rs","byte_start":445245,"byte_end":445275,"line_start":434,"line_end":434,"column_start":5,"column_end":35}},{"value":"/ );","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_constructors.rs","byte_start":445280,"byte_end":445286,"line_start":435,"line_end":435,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_constructors.rs","byte_start":445291,"byte_end":445298,"line_start":436,"line_end":436,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3019},"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_constructors.rs","byte_start":447109,"byte_end":447133,"line_start":480,"line_end":480,"column_start":19,"column_end":43},"name":"from_shape_vec_unchecked","qualname":"<ArrayBase<S, D>>::from_shape_vec_unchecked","value":"pub unsafe fn from_shape_vec_unchecked<Sh>(Sh, Vec<A>) -> Self where\nSh: Into<StrideShape<D>>","parent":null,"children":[],"decl_id":null,"docs":" Creates an array from a vector and interpret it according to the\n provided shape and strides. (No cloning of elements needed.)","sig":null,"attributes":[{"value":"/ Creates an array from a vector and interpret it according to the","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_constructors.rs","byte_start":446075,"byte_end":446143,"line_start":456,"line_end":456,"column_start":5,"column_end":73}},{"value":"/ provided shape and strides. (No cloning of elements needed.)","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_constructors.rs","byte_start":446148,"byte_end":446212,"line_start":457,"line_end":457,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_constructors.rs","byte_start":446217,"byte_end":446220,"line_start":458,"line_end":458,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_constructors.rs","byte_start":446225,"byte_end":446237,"line_start":459,"line_end":459,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_constructors.rs","byte_start":446242,"byte_end":446245,"line_start":460,"line_end":460,"column_start":5,"column_end":8}},{"value":"/ The caller must ensure that the following conditions are met:","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_constructors.rs","byte_start":446250,"byte_end":446315,"line_start":461,"line_end":461,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_constructors.rs","byte_start":446320,"byte_end":446323,"line_start":462,"line_end":462,"column_start":5,"column_end":8}},{"value":"/ 1. The ndim of `dim` and `strides` must be the same.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_constructors.rs","byte_start":446328,"byte_end":446384,"line_start":463,"line_end":463,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_constructors.rs","byte_start":446389,"byte_end":446392,"line_start":464,"line_end":464,"column_start":5,"column_end":8}},{"value":"/ 2. The product of non-zero axis lengths must not exceed `isize::MAX`.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_constructors.rs","byte_start":446397,"byte_end":446470,"line_start":465,"line_end":465,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_constructors.rs","byte_start":446475,"byte_end":446478,"line_start":466,"line_end":466,"column_start":5,"column_end":8}},{"value":"/ 3. For axes with length > 1, the pointer cannot move outside the","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_constructors.rs","byte_start":446483,"byte_end":446551,"line_start":467,"line_end":467,"column_start":5,"column_end":73}},{"value":"/    slice.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_constructors.rs","byte_start":446556,"byte_end":446569,"line_start":468,"line_end":468,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_constructors.rs","byte_start":446574,"byte_end":446577,"line_start":469,"line_end":469,"column_start":5,"column_end":8}},{"value":"/ 4. If the array will be empty (any axes are zero-length), the","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_constructors.rs","byte_start":446582,"byte_end":446647,"line_start":470,"line_end":470,"column_start":5,"column_end":70}},{"value":"/    difference between the least address and greatest address accessible","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_constructors.rs","byte_start":446652,"byte_end":446727,"line_start":471,"line_end":471,"column_start":5,"column_end":80}},{"value":"/    by moving along all axes must be ≤ `v.len()`.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_constructors.rs","byte_start":446732,"byte_end":446786,"line_start":472,"line_end":472,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_constructors.rs","byte_start":446791,"byte_end":446794,"line_start":473,"line_end":473,"column_start":5,"column_end":8}},{"value":"/    If the array will not be empty, the difference between the least","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_constructors.rs","byte_start":446799,"byte_end":446870,"line_start":474,"line_end":474,"column_start":5,"column_end":76}},{"value":"/    address and greatest address accessible by moving along all axes","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_constructors.rs","byte_start":446875,"byte_end":446946,"line_start":475,"line_end":475,"column_start":5,"column_end":76}},{"value":"/    must be < `v.len()`.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_constructors.rs","byte_start":446951,"byte_end":446978,"line_start":476,"line_end":476,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_constructors.rs","byte_start":446983,"byte_end":446986,"line_start":477,"line_end":477,"column_start":5,"column_end":8}},{"value":"/ 5. The strides must not allow any element to be referenced by two different","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_constructors.rs","byte_start":446991,"byte_end":447070,"line_start":478,"line_end":478,"column_start":5,"column_end":84}},{"value":"/    indices.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_constructors.rs","byte_start":447075,"byte_end":447090,"line_start":479,"line_end":479,"column_start":5,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":3022},"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_constructors.rs","byte_start":449515,"byte_end":449521,"line_start":543,"line_end":543,"column_start":12,"column_end":18},"name":"uninit","qualname":"<ArrayBase<S, D>>::uninit","value":"pub fn uninit<Sh>(Sh) -> ArrayBase<S::MaybeUninit, D> where\nSh: ShapeBuilder<Dim = D>","parent":null,"children":[],"decl_id":null,"docs":" Create an array with uninitalized elements, shape `shape`.","sig":null,"attributes":[{"value":"/ Create an array with uninitalized elements, shape `shape`.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_constructors.rs","byte_start":447855,"byte_end":447917,"line_start":498,"line_end":498,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_constructors.rs","byte_start":447922,"byte_end":447925,"line_start":499,"line_end":499,"column_start":5,"column_end":8}},{"value":"/ The uninitialized elements of type `A` are represented by the type `MaybeUninit<A>`,","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_constructors.rs","byte_start":447930,"byte_end":448018,"line_start":500,"line_end":500,"column_start":5,"column_end":93}},{"value":"/ an easier way to handle uninit values correctly.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_constructors.rs","byte_start":448023,"byte_end":448075,"line_start":501,"line_end":501,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_constructors.rs","byte_start":448080,"byte_end":448083,"line_start":502,"line_end":502,"column_start":5,"column_end":8}},{"value":"/ Only *when* the array is completely initialized with valid elements, can it be","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_constructors.rs","byte_start":448088,"byte_end":448170,"line_start":503,"line_end":503,"column_start":5,"column_end":87}},{"value":"/ converted to an array of `A` elements using [`.assume_init()`].","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_constructors.rs","byte_start":448175,"byte_end":448242,"line_start":504,"line_end":504,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_constructors.rs","byte_start":448247,"byte_end":448250,"line_start":505,"line_end":505,"column_start":5,"column_end":8}},{"value":"/ **Panics** if the number of elements in `shape` would overflow isize.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_constructors.rs","byte_start":448255,"byte_end":448328,"line_start":506,"line_end":506,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_constructors.rs","byte_start":448333,"byte_end":448336,"line_start":507,"line_end":507,"column_start":5,"column_end":8}},{"value":"/ ### Safety","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_constructors.rs","byte_start":448341,"byte_end":448355,"line_start":508,"line_end":508,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_constructors.rs","byte_start":448360,"byte_end":448363,"line_start":509,"line_end":509,"column_start":5,"column_end":8}},{"value":"/ The whole of the array must be initialized before it is converted","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_constructors.rs","byte_start":448368,"byte_end":448437,"line_start":510,"line_end":510,"column_start":5,"column_end":74}},{"value":"/ using [`.assume_init()`] or otherwise traversed.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_constructors.rs","byte_start":448442,"byte_end":448494,"line_start":511,"line_end":511,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_constructors.rs","byte_start":448499,"byte_end":448502,"line_start":512,"line_end":512,"column_start":5,"column_end":8}},{"value":"/ ### Examples","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_constructors.rs","byte_start":448507,"byte_end":448523,"line_start":513,"line_end":513,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_constructors.rs","byte_start":448528,"byte_end":448531,"line_start":514,"line_end":514,"column_start":5,"column_end":8}},{"value":"/ It is possible to assign individual values through `*elt = MaybeUninit::new(value)`","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_constructors.rs","byte_start":448536,"byte_end":448623,"line_start":515,"line_end":515,"column_start":5,"column_end":92}},{"value":"/ and so on.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_constructors.rs","byte_start":448628,"byte_end":448642,"line_start":516,"line_end":516,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_constructors.rs","byte_start":448647,"byte_end":448650,"line_start":517,"line_end":517,"column_start":5,"column_end":8}},{"value":"/ [`.assume_init()`]: ArrayBase::assume_init","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_constructors.rs","byte_start":448655,"byte_end":448701,"line_start":518,"line_end":518,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_constructors.rs","byte_start":448706,"byte_end":448709,"line_start":519,"line_end":519,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_constructors.rs","byte_start":448714,"byte_end":448721,"line_start":520,"line_end":520,"column_start":5,"column_end":12}},{"value":"/ use ndarray::{s, Array2};","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_constructors.rs","byte_start":448726,"byte_end":448755,"line_start":521,"line_end":521,"column_start":5,"column_end":34}},{"value":"/ use ndarray::Zip;","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_constructors.rs","byte_start":448760,"byte_end":448781,"line_start":522,"line_end":522,"column_start":5,"column_end":26}},{"value":"/ use ndarray::Axis;","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_constructors.rs","byte_start":448786,"byte_end":448808,"line_start":523,"line_end":523,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_constructors.rs","byte_start":448813,"byte_end":448816,"line_start":524,"line_end":524,"column_start":5,"column_end":8}},{"value":"/ // Example Task: Let's create a column shifted copy of the input","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_constructors.rs","byte_start":448821,"byte_end":448889,"line_start":525,"line_end":525,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_constructors.rs","byte_start":448894,"byte_end":448897,"line_start":526,"line_end":526,"column_start":5,"column_end":8}},{"value":"/ fn shift_by_two(a: &Array2<f32>) -> Array2<f32> {","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_constructors.rs","byte_start":448902,"byte_end":448955,"line_start":527,"line_end":527,"column_start":5,"column_end":58}},{"value":"/     // create an uninitialized array","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_constructors.rs","byte_start":448960,"byte_end":449000,"line_start":528,"line_end":528,"column_start":5,"column_end":45}},{"value":"/     let mut b = Array2::uninit(a.dim());","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_constructors.rs","byte_start":449005,"byte_end":449049,"line_start":529,"line_end":529,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_constructors.rs","byte_start":449054,"byte_end":449057,"line_start":530,"line_end":530,"column_start":5,"column_end":8}},{"value":"/     // two first columns in b are two last in a","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_constructors.rs","byte_start":449062,"byte_end":449113,"line_start":531,"line_end":531,"column_start":5,"column_end":56}},{"value":"/     // rest of columns in b are the initial columns in a","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_constructors.rs","byte_start":449118,"byte_end":449178,"line_start":532,"line_end":532,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_constructors.rs","byte_start":449183,"byte_end":449186,"line_start":533,"line_end":533,"column_start":5,"column_end":8}},{"value":"/     a.slice(s![.., -2..]).assign_to(b.slice_mut(s![.., ..2]));","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_constructors.rs","byte_start":449191,"byte_end":449257,"line_start":534,"line_end":534,"column_start":5,"column_end":71}},{"value":"/     a.slice(s![.., 2..]).assign_to(b.slice_mut(s![.., ..-2]));","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_constructors.rs","byte_start":449262,"byte_end":449328,"line_start":535,"line_end":535,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_constructors.rs","byte_start":449333,"byte_end":449336,"line_start":536,"line_end":536,"column_start":5,"column_end":8}},{"value":"/     // Now we can promise that `b` is safe to use with all operations","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_constructors.rs","byte_start":449341,"byte_end":449414,"line_start":537,"line_end":537,"column_start":5,"column_end":78}},{"value":"/     unsafe {","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_constructors.rs","byte_start":449419,"byte_end":449435,"line_start":538,"line_end":538,"column_start":5,"column_end":21}},{"value":"/         b.assume_init()","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_constructors.rs","byte_start":449440,"byte_end":449467,"line_start":539,"line_end":539,"column_start":5,"column_end":32}},{"value":"/     }","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_constructors.rs","byte_start":449472,"byte_end":449481,"line_start":540,"line_end":540,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_constructors.rs","byte_start":449486,"byte_end":449491,"line_start":541,"line_end":541,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_constructors.rs","byte_start":449496,"byte_end":449503,"line_start":542,"line_end":542,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3027},"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_constructors.rs","byte_start":452585,"byte_end":452598,"line_start":614,"line_end":614,"column_start":19,"column_end":32},"name":"uninitialized","qualname":"<ArrayBase<S, D>>::uninitialized","value":"pub unsafe fn uninitialized<Sh>(Sh) -> Self where A: Copy,\nSh: ShapeBuilder<Dim = D>","parent":null,"children":[],"decl_id":null,"docs":" Create an array with uninitalized elements, shape `shape`.","sig":null,"attributes":[{"value":"deprecated(note =\n             \"This method is hard to use correctly. Use `uninit` instead.\",\n             since = \"0.15.0\")","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_constructors.rs","byte_start":451290,"byte_end":451408,"line_start":589,"line_end":590,"column_start":5,"column_end":36}},{"value":"/ Create an array with uninitalized elements, shape `shape`.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_constructors.rs","byte_start":451413,"byte_end":451475,"line_start":591,"line_end":591,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_constructors.rs","byte_start":451480,"byte_end":451483,"line_start":592,"line_end":592,"column_start":5,"column_end":8}},{"value":"/ Prefer to use [`uninit()`](ArrayBase::uninit) if possible, because it is","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_constructors.rs","byte_start":451488,"byte_end":451564,"line_start":593,"line_end":593,"column_start":5,"column_end":81}},{"value":"/ easier to use correctly.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_constructors.rs","byte_start":451569,"byte_end":451597,"line_start":594,"line_end":594,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_constructors.rs","byte_start":451602,"byte_end":451605,"line_start":595,"line_end":595,"column_start":5,"column_end":8}},{"value":"/ **Panics** if the number of elements in `shape` would overflow isize.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_constructors.rs","byte_start":451610,"byte_end":451683,"line_start":596,"line_end":596,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_constructors.rs","byte_start":451688,"byte_end":451691,"line_start":597,"line_end":597,"column_start":5,"column_end":8}},{"value":"/ ### Safety","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_constructors.rs","byte_start":451696,"byte_end":451710,"line_start":598,"line_end":598,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_constructors.rs","byte_start":451715,"byte_end":451718,"line_start":599,"line_end":599,"column_start":5,"column_end":8}},{"value":"/ Accessing uninitalized values is undefined behaviour. You must overwrite *all* the elements","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_constructors.rs","byte_start":451723,"byte_end":451818,"line_start":600,"line_end":600,"column_start":5,"column_end":100}},{"value":"/ in the array after it is created; for example using","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_constructors.rs","byte_start":451823,"byte_end":451878,"line_start":601,"line_end":601,"column_start":5,"column_end":60}},{"value":"/ [`raw_view_mut`](ArrayBase::raw_view_mut) or other low-level element access.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_constructors.rs","byte_start":451883,"byte_end":451963,"line_start":602,"line_end":602,"column_start":5,"column_end":85}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_constructors.rs","byte_start":451968,"byte_end":451971,"line_start":603,"line_end":603,"column_start":5,"column_end":8}},{"value":"/ The contents of the array is indeterminate before initialization and it","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_constructors.rs","byte_start":451976,"byte_end":452051,"line_start":604,"line_end":604,"column_start":5,"column_end":80}},{"value":"/ is an error to perform operations that use the previous values. For","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_constructors.rs","byte_start":452056,"byte_end":452127,"line_start":605,"line_end":605,"column_start":5,"column_end":76}},{"value":"/ example it would not be legal to use `a += 1.;` on such an array.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_constructors.rs","byte_start":452132,"byte_end":452201,"line_start":606,"line_end":606,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_constructors.rs","byte_start":452206,"byte_end":452209,"line_start":607,"line_end":607,"column_start":5,"column_end":8}},{"value":"/ This constructor is limited to elements where `A: Copy` (no destructors)","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_constructors.rs","byte_start":452214,"byte_end":452290,"line_start":608,"line_end":608,"column_start":5,"column_end":81}},{"value":"/ to avoid users shooting themselves too hard in the foot.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_constructors.rs","byte_start":452295,"byte_end":452355,"line_start":609,"line_end":609,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_constructors.rs","byte_start":452360,"byte_end":452363,"line_start":610,"line_end":610,"column_start":5,"column_end":8}},{"value":"/ (Also note that the constructors `from_shape_vec` and","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_constructors.rs","byte_start":452368,"byte_end":452425,"line_start":611,"line_end":611,"column_start":5,"column_end":62}},{"value":"/ `from_shape_vec_unchecked` allow the user yet more control, in the sense","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_constructors.rs","byte_start":452430,"byte_end":452506,"line_start":612,"line_end":612,"column_start":5,"column_end":81}},{"value":"/ that Arrays can be created from arbitrary vectors.)","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_constructors.rs","byte_start":452511,"byte_end":452566,"line_start":613,"line_end":613,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":3033},"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_constructors.rs","byte_start":453220,"byte_end":453232,"line_start":637,"line_end":637,"column_start":12,"column_end":24},"name":"maybe_uninit","qualname":"<ArrayBase<S, D>>::maybe_uninit","value":"pub fn maybe_uninit<Sh>(Sh) -> Self where Sh: ShapeBuilder<Dim = D>","parent":null,"children":[],"decl_id":null,"docs":" Create an array with uninitalized elements, shape `shape`.","sig":null,"attributes":[{"value":"/ Create an array with uninitalized elements, shape `shape`.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_constructors.rs","byte_start":453023,"byte_end":453085,"line_start":633,"line_end":633,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_constructors.rs","byte_start":453090,"byte_end":453093,"line_start":634,"line_end":634,"column_start":5,"column_end":8}},{"value":"/ This method has been renamed to `uninit`","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_constructors.rs","byte_start":453098,"byte_end":453142,"line_start":635,"line_end":635,"column_start":5,"column_end":49}},{"value":"deprecated(note = \"Renamed to `uninit`\", since = \"0.15.0\")","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_constructors.rs","byte_start":453147,"byte_end":453208,"line_start":636,"line_end":636,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":3098},"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":455134,"byte_end":455137,"line_start":47,"line_end":47,"column_start":12,"column_end":15},"name":"len","qualname":"<ArrayBase<S, D>>::len","value":"pub fn len(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Return the total number of elements in the array.\n","sig":null,"attributes":[{"value":"/ Return the total number of elements in the array.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":455069,"byte_end":455122,"line_start":46,"line_end":46,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":3099},"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":455430,"byte_end":455436,"line_start":57,"line_end":57,"column_start":12,"column_end":18},"name":"len_of","qualname":"<ArrayBase<S, D>>::len_of","value":"pub fn len_of(&Self, Axis) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Return the length of `axis`.","sig":null,"attributes":[{"value":"/ Return the length of `axis`.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":455191,"byte_end":455223,"line_start":51,"line_end":51,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":455228,"byte_end":455231,"line_start":52,"line_end":52,"column_start":5,"column_end":8}},{"value":"/ The axis should be in the range `Axis(` 0 .. *n* `)` where *n* is the","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":455236,"byte_end":455309,"line_start":53,"line_end":53,"column_start":5,"column_end":78}},{"value":"/ number of dimensions (axes) of the array.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":455314,"byte_end":455359,"line_start":54,"line_end":54,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":455364,"byte_end":455367,"line_start":55,"line_end":55,"column_start":5,"column_end":8}},{"value":"/ ***Panics*** if the axis is out of bounds.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":455372,"byte_end":455418,"line_start":56,"line_end":56,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":3100},"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":455566,"byte_end":455574,"line_start":62,"line_end":62,"column_start":12,"column_end":20},"name":"is_empty","qualname":"<ArrayBase<S, D>>::is_empty","value":"pub fn is_empty(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Return whether the array has any elements\n","sig":null,"attributes":[{"value":"/ Return whether the array has any elements","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":455509,"byte_end":455554,"line_start":61,"line_end":61,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":3101},"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":455694,"byte_end":455698,"line_start":67,"line_end":67,"column_start":12,"column_end":16},"name":"ndim","qualname":"<ArrayBase<S, D>>::ndim","value":"pub fn ndim(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Return the number of dimensions (axes) in the array\n","sig":null,"attributes":[{"value":"/ Return the number of dimensions (axes) in the array","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":455627,"byte_end":455682,"line_start":66,"line_end":66,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":3102},"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":455924,"byte_end":455927,"line_start":74,"line_end":74,"column_start":12,"column_end":15},"name":"dim","qualname":"<ArrayBase<S, D>>::dim","value":"pub fn dim(&Self) -> D::Pattern","parent":null,"children":[],"decl_id":null,"docs":" Return the shape of the array in its “pattern” form,\n an integer in the one-dimensional case, tuple in the n-dimensional cases\n and so on.\n","sig":null,"attributes":[{"value":"/ Return the shape of the array in its “pattern” form,","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":455752,"byte_end":455812,"line_start":71,"line_end":71,"column_start":5,"column_end":61}},{"value":"/ an integer in the one-dimensional case, tuple in the n-dimensional cases","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":455817,"byte_end":455893,"line_start":72,"line_end":72,"column_start":5,"column_end":81}},{"value":"/ and so on.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":455898,"byte_end":455912,"line_start":73,"line_end":73,"column_start":5,"column_end":19}}]},{"kind":"Method","id":{"krate":0,"index":3103},"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":456511,"byte_end":456518,"line_start":92,"line_end":92,"column_start":12,"column_end":19},"name":"raw_dim","qualname":"<ArrayBase<S, D>>::raw_dim","value":"pub fn raw_dim(&Self) -> D","parent":null,"children":[],"decl_id":null,"docs":" Return the shape of the array as it's stored in the array.","sig":null,"attributes":[{"value":"/ Return the shape of the array as it's stored in the array.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":456002,"byte_end":456064,"line_start":78,"line_end":78,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":456069,"byte_end":456072,"line_start":79,"line_end":79,"column_start":5,"column_end":8}},{"value":"/ This is primarily useful for passing to other `ArrayBase`","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":456077,"byte_end":456138,"line_start":80,"line_end":80,"column_start":5,"column_end":66}},{"value":"/ functions, such as when creating another array of the same","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":456143,"byte_end":456205,"line_start":81,"line_end":81,"column_start":5,"column_end":67}},{"value":"/ shape and dimensionality.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":456210,"byte_end":456239,"line_start":82,"line_end":82,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":456244,"byte_end":456247,"line_start":83,"line_end":83,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":456252,"byte_end":456259,"line_start":84,"line_end":84,"column_start":5,"column_end":12}},{"value":"/ use ndarray::Array;","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":456264,"byte_end":456287,"line_start":85,"line_end":85,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":456292,"byte_end":456295,"line_start":86,"line_end":86,"column_start":5,"column_end":8}},{"value":"/ let a = Array::from_elem((2, 3), 5.);","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":456300,"byte_end":456341,"line_start":87,"line_end":87,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":456346,"byte_end":456349,"line_start":88,"line_end":88,"column_start":5,"column_end":8}},{"value":"/ // Create an array of zeros that's the same shape and dimensionality as `a`.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":456354,"byte_end":456434,"line_start":89,"line_end":89,"column_start":5,"column_end":85}},{"value":"/ let b = Array::<f64, _>::zeros(a.raw_dim());","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":456439,"byte_end":456487,"line_start":90,"line_end":90,"column_start":5,"column_end":53}},{"value":"/ ```","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":456492,"byte_end":456499,"line_start":91,"line_end":91,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3104},"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":457578,"byte_end":457583,"line_start":120,"line_end":120,"column_start":12,"column_end":17},"name":"shape","qualname":"<ArrayBase<S, D>>::shape","value":"pub fn shape(&Self) -> &[usize]","parent":null,"children":[],"decl_id":null,"docs":" Return the shape of the array as a slice.","sig":null,"attributes":[{"value":"/ Return the shape of the array as a slice.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":456569,"byte_end":456614,"line_start":96,"line_end":96,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":456619,"byte_end":456622,"line_start":97,"line_end":97,"column_start":5,"column_end":8}},{"value":"/ Note that you probably don't want to use this to create an array of the","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":456627,"byte_end":456702,"line_start":98,"line_end":98,"column_start":5,"column_end":80}},{"value":"/ same shape as another array because creating an array with e.g.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":456707,"byte_end":456774,"line_start":99,"line_end":99,"column_start":5,"column_end":72}},{"value":"/ [`Array::zeros()`](ArrayBase::zeros) using a shape of type `&[usize]`","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":456779,"byte_end":456852,"line_start":100,"line_end":100,"column_start":5,"column_end":78}},{"value":"/ results in a dynamic-dimensional array. If you want to create an array","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":456857,"byte_end":456931,"line_start":101,"line_end":101,"column_start":5,"column_end":79}},{"value":"/ that has the same shape and dimensionality as another array, use","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":456936,"byte_end":457004,"line_start":102,"line_end":102,"column_start":5,"column_end":73}},{"value":"/ [`.raw_dim()`](ArrayBase::raw_dim) instead:","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":457009,"byte_end":457056,"line_start":103,"line_end":103,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":457061,"byte_end":457064,"line_start":104,"line_end":104,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":457069,"byte_end":457080,"line_start":105,"line_end":105,"column_start":5,"column_end":16}},{"value":"/ use ndarray::{Array, Array2};","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":457085,"byte_end":457118,"line_start":106,"line_end":106,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":457123,"byte_end":457126,"line_start":107,"line_end":107,"column_start":5,"column_end":8}},{"value":"/ let a = Array2::<i32>::zeros((3, 4));","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":457131,"byte_end":457172,"line_start":108,"line_end":108,"column_start":5,"column_end":46}},{"value":"/ let shape = a.shape();","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":457177,"byte_end":457203,"line_start":109,"line_end":109,"column_start":5,"column_end":31}},{"value":"/ assert_eq!(shape, &[3, 4]);","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":457208,"byte_end":457239,"line_start":110,"line_end":110,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":457244,"byte_end":457247,"line_start":111,"line_end":111,"column_start":5,"column_end":8}},{"value":"/ // Since `a.shape()` returned `&[usize]`, we get an `ArrayD` instance:","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":457252,"byte_end":457326,"line_start":112,"line_end":112,"column_start":5,"column_end":79}},{"value":"/ let b = Array::zeros(shape);","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":457331,"byte_end":457363,"line_start":113,"line_end":113,"column_start":5,"column_end":37}},{"value":"/ assert_eq!(a.clone().into_dyn(), b);","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":457368,"byte_end":457408,"line_start":114,"line_end":114,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":457413,"byte_end":457416,"line_start":115,"line_end":115,"column_start":5,"column_end":8}},{"value":"/ // To get the same dimension type, use `.raw_dim()` instead:","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":457421,"byte_end":457485,"line_start":116,"line_end":116,"column_start":5,"column_end":69}},{"value":"/ let c = Array::zeros(a.raw_dim());","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":457490,"byte_end":457528,"line_start":117,"line_end":117,"column_start":5,"column_end":43}},{"value":"/ assert_eq!(a, c);","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":457533,"byte_end":457554,"line_start":118,"line_end":118,"column_start":5,"column_end":26}},{"value":"/ ```","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":457559,"byte_end":457566,"line_start":119,"line_end":119,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3105},"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":457700,"byte_end":457707,"line_start":125,"line_end":125,"column_start":12,"column_end":19},"name":"strides","qualname":"<ArrayBase<S, D>>::strides","value":"pub fn strides(&Self) -> &[isize]","parent":null,"children":[],"decl_id":null,"docs":" Return the strides of the array as a slice.\n","sig":null,"attributes":[{"value":"/ Return the strides of the array as a slice.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":457641,"byte_end":457688,"line_start":124,"line_end":124,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":3106},"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":458141,"byte_end":458150,"line_start":137,"line_end":137,"column_start":12,"column_end":21},"name":"stride_of","qualname":"<ArrayBase<S, D>>::stride_of","value":"pub fn stride_of(&Self, Axis) -> isize","parent":null,"children":[],"decl_id":null,"docs":" Return the stride of `axis`.","sig":null,"attributes":[{"value":"/ Return the stride of `axis`.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":457902,"byte_end":457934,"line_start":131,"line_end":131,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":457939,"byte_end":457942,"line_start":132,"line_end":132,"column_start":5,"column_end":8}},{"value":"/ The axis should be in the range `Axis(` 0 .. *n* `)` where *n* is the","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":457947,"byte_end":458020,"line_start":133,"line_end":133,"column_start":5,"column_end":78}},{"value":"/ number of dimensions (axes) of the array.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":458025,"byte_end":458070,"line_start":134,"line_end":134,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":458075,"byte_end":458078,"line_start":135,"line_end":135,"column_start":5,"column_end":8}},{"value":"/ ***Panics*** if the axis is out of bounds.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":458083,"byte_end":458129,"line_start":136,"line_end":136,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":3107},"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":458334,"byte_end":458338,"line_start":143,"line_end":143,"column_start":12,"column_end":16},"name":"view","qualname":"<ArrayBase<S, D>>::view","value":"pub fn view(&Self) -> ArrayView<, A, D> where S: Data","parent":null,"children":[],"decl_id":null,"docs":" Return a read-only view of the array\n","sig":null,"attributes":[{"value":"/ Return a read-only view of the array","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":458282,"byte_end":458322,"line_start":142,"line_end":142,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":3108},"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":458601,"byte_end":458609,"line_start":152,"line_end":152,"column_start":12,"column_end":20},"name":"view_mut","qualname":"<ArrayBase<S, D>>::view_mut","value":"pub fn view_mut(&mut Self) -> ArrayViewMut<, A, D> where S: DataMut","parent":null,"children":[],"decl_id":null,"docs":" Return a read-write view of the array\n","sig":null,"attributes":[{"value":"/ Return a read-write view of the array","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":458548,"byte_end":458589,"line_start":151,"line_end":151,"column_start":5,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":3109},"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":459241,"byte_end":459250,"line_start":167,"line_end":167,"column_start":12,"column_end":21},"name":"cell_view","qualname":"<ArrayBase<S, D>>::cell_view","value":"pub fn cell_view(&mut Self) -> ArrayView<, MathCell<A>, D> where S: DataMut","parent":null,"children":[],"decl_id":null,"docs":" Return a shared view of the array with elements as if they were embedded in cells.","sig":null,"attributes":[{"value":"/ Return a shared view of the array with elements as if they were embedded in cells.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":458811,"byte_end":458897,"line_start":160,"line_end":160,"column_start":5,"column_end":91}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":458902,"byte_end":458905,"line_start":161,"line_end":161,"column_start":5,"column_end":8}},{"value":"/ The cell view requires a mutable borrow of the array. Once borrowed the","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":458910,"byte_end":458985,"line_start":162,"line_end":162,"column_start":5,"column_end":80}},{"value":"/ cell view itself can be copied and accessed without exclusivity.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":458990,"byte_end":459058,"line_start":163,"line_end":163,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":459063,"byte_end":459066,"line_start":164,"line_end":164,"column_start":5,"column_end":8}},{"value":"/ The view acts \"as if\" the elements are temporarily in cells, and elements","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":459071,"byte_end":459148,"line_start":165,"line_end":165,"column_start":5,"column_end":82}},{"value":"/ can be changed through shared references using the regular cell methods.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":459153,"byte_end":459229,"line_start":166,"line_end":166,"column_start":5,"column_end":81}}]},{"kind":"Method","id":{"krate":0,"index":3110},"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":460652,"byte_end":460660,"line_start":204,"line_end":204,"column_start":12,"column_end":20},"name":"to_owned","qualname":"<ArrayBase<S, D>>::to_owned","value":"pub fn to_owned(&Self) -> Array<A, D> where A: Clone, S: Data","parent":null,"children":[],"decl_id":null,"docs":" Return an uniquely owned copy of the array.","sig":null,"attributes":[{"value":"/ Return an uniquely owned copy of the array.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":459383,"byte_end":459430,"line_start":174,"line_end":174,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":459435,"byte_end":459438,"line_start":175,"line_end":175,"column_start":5,"column_end":8}},{"value":"/ If the input array is contiguous, then the output array will have the same","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":459443,"byte_end":459521,"line_start":176,"line_end":176,"column_start":5,"column_end":83}},{"value":"/ memory layout. Otherwise, the layout of the output array is unspecified.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":459526,"byte_end":459602,"line_start":177,"line_end":177,"column_start":5,"column_end":81}},{"value":"/ If you need a particular layout, you can allocate a new array with the","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":459607,"byte_end":459681,"line_start":178,"line_end":178,"column_start":5,"column_end":79}},{"value":"/ desired memory layout and [`.assign()`](#method.assign) the data.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":459686,"byte_end":459755,"line_start":179,"line_end":179,"column_start":5,"column_end":74}},{"value":"/ Alternatively, you can collectan iterator, like this for a result in","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":459760,"byte_end":459832,"line_start":180,"line_end":180,"column_start":5,"column_end":77}},{"value":"/ standard layout:","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":459837,"byte_end":459857,"line_start":181,"line_end":181,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":459862,"byte_end":459865,"line_start":182,"line_end":182,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":459870,"byte_end":459877,"line_start":183,"line_end":183,"column_start":5,"column_end":12}},{"value":"/ # use ndarray::prelude::*;","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":459882,"byte_end":459912,"line_start":184,"line_end":184,"column_start":5,"column_end":35}},{"value":"/ # let arr = Array::from_shape_vec((2, 2).f(), vec![1, 2, 3, 4]).unwrap();","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":459917,"byte_end":459994,"line_start":185,"line_end":185,"column_start":5,"column_end":82}},{"value":"/ # let owned = {","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":459999,"byte_end":460018,"line_start":186,"line_end":186,"column_start":5,"column_end":24}},{"value":"/ Array::from_shape_vec(arr.raw_dim(), arr.iter().cloned().collect()).unwrap()","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":460023,"byte_end":460103,"line_start":187,"line_end":187,"column_start":5,"column_end":85}},{"value":"/ # };","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":460108,"byte_end":460116,"line_start":188,"line_end":188,"column_start":5,"column_end":13}},{"value":"/ # assert!(owned.is_standard_layout());","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":460121,"byte_end":460163,"line_start":189,"line_end":189,"column_start":5,"column_end":47}},{"value":"/ # assert_eq!(arr, owned);","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":460168,"byte_end":460197,"line_start":190,"line_end":190,"column_start":5,"column_end":34}},{"value":"/ ```","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":460202,"byte_end":460209,"line_start":191,"line_end":191,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":460214,"byte_end":460217,"line_start":192,"line_end":192,"column_start":5,"column_end":8}},{"value":"/ or this for a result in column-major (Fortran) layout:","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":460222,"byte_end":460280,"line_start":193,"line_end":193,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":460285,"byte_end":460288,"line_start":194,"line_end":194,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":460293,"byte_end":460300,"line_start":195,"line_end":195,"column_start":5,"column_end":12}},{"value":"/ # use ndarray::prelude::*;","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":460305,"byte_end":460335,"line_start":196,"line_end":196,"column_start":5,"column_end":35}},{"value":"/ # let arr = Array::from_shape_vec((2, 2), vec![1, 2, 3, 4]).unwrap();","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":460340,"byte_end":460413,"line_start":197,"line_end":197,"column_start":5,"column_end":78}},{"value":"/ # let owned = {","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":460418,"byte_end":460437,"line_start":198,"line_end":198,"column_start":5,"column_end":24}},{"value":"/ Array::from_shape_vec(arr.raw_dim().f(), arr.t().iter().cloned().collect()).unwrap()","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":460442,"byte_end":460530,"line_start":199,"line_end":199,"column_start":5,"column_end":93}},{"value":"/ # };","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":460535,"byte_end":460543,"line_start":200,"line_end":200,"column_start":5,"column_end":13}},{"value":"/ # assert!(owned.t().is_standard_layout());","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":460548,"byte_end":460594,"line_start":201,"line_end":201,"column_start":5,"column_end":51}},{"value":"/ # assert_eq!(arr, owned);","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":460599,"byte_end":460628,"line_start":202,"line_end":202,"column_start":5,"column_end":34}},{"value":"/ ```","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":460633,"byte_end":460640,"line_start":203,"line_end":203,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3112},"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":461183,"byte_end":461192,"line_start":223,"line_end":223,"column_start":12,"column_end":21},"name":"to_shared","qualname":"<ArrayBase<S, D>>::to_shared","value":"pub fn to_shared(&Self) -> ArcArray<A, D> where A: Clone, S: Data","parent":null,"children":[],"decl_id":null,"docs":" Return a shared ownership (copy on write) array, cloning the array\n elements if necessary.\n","sig":null,"attributes":[{"value":"/ Return a shared ownership (copy on write) array, cloning the array","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":461070,"byte_end":461140,"line_start":221,"line_end":221,"column_start":5,"column_end":75}},{"value":"/ elements if necessary.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":461145,"byte_end":461171,"line_start":222,"line_end":222,"column_start":5,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":3113},"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":461415,"byte_end":461425,"line_start":233,"line_end":233,"column_start":12,"column_end":22},"name":"into_owned","qualname":"<ArrayBase<S, D>>::into_owned","value":"pub fn into_owned(Self) -> Array<A, D> where A: Clone, S: Data","parent":null,"children":[],"decl_id":null,"docs":" Turn the array into a uniquely owned array, cloning the array elements\n if necessary.\n","sig":null,"attributes":[{"value":"/ Turn the array into a uniquely owned array, cloning the array elements","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":461307,"byte_end":461381,"line_start":231,"line_end":231,"column_start":5,"column_end":79}},{"value":"/ if necessary.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":461386,"byte_end":461403,"line_start":232,"line_end":232,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":3114},"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":461643,"byte_end":461654,"line_start":243,"line_end":243,"column_start":12,"column_end":23},"name":"into_shared","qualname":"<ArrayBase<S, D>>::into_shared","value":"pub fn into_shared(Self) -> ArcArray<A, D> where S: DataOwned","parent":null,"children":[],"decl_id":null,"docs":" Turn the array into a shared ownership (copy on write) array,\n without any copying.\n","sig":null,"attributes":[{"value":"/ Turn the array into a shared ownership (copy on write) array,","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":461537,"byte_end":461602,"line_start":241,"line_end":241,"column_start":5,"column_end":70}},{"value":"/ without any copying.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":461607,"byte_end":461631,"line_start":242,"line_end":242,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":3115},"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":462073,"byte_end":462078,"line_start":256,"line_end":256,"column_start":12,"column_end":17},"name":"first","qualname":"<ArrayBase<S, D>>::first","value":"pub fn first(&Self) -> Option<&A> where S: Data","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the first element of the array, or `None` if it\n is empty.\n","sig":null,"attributes":[{"value":"/ Returns a reference to the first element of the array, or `None` if it","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":461969,"byte_end":462043,"line_start":254,"line_end":254,"column_start":5,"column_end":79}},{"value":"/ is empty.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":462048,"byte_end":462061,"line_start":255,"line_end":255,"column_start":5,"column_end":18}}]},{"kind":"Method","id":{"krate":0,"index":3116},"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":462374,"byte_end":462383,"line_start":269,"line_end":269,"column_start":12,"column_end":21},"name":"first_mut","qualname":"<ArrayBase<S, D>>::first_mut","value":"pub fn first_mut(&mut Self) -> Option<&mut A> where S: DataMut","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the first element of the array, or\n `None` if it is empty.\n","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the first element of the array, or","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":462262,"byte_end":462331,"line_start":267,"line_end":267,"column_start":5,"column_end":74}},{"value":"/ `None` if it is empty.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":462336,"byte_end":462362,"line_start":268,"line_end":268,"column_start":5,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":3117},"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":462852,"byte_end":462856,"line_start":286,"line_end":286,"column_start":12,"column_end":16},"name":"iter","qualname":"<ArrayBase<S, D>>::iter","value":"pub fn iter(&Self) -> Iter<, A, D> where S: Data","parent":null,"children":[],"decl_id":null,"docs":" Return an iterator of references to the elements of the array.","sig":null,"attributes":[{"value":"/ Return an iterator of references to the elements of the array.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":462586,"byte_end":462652,"line_start":280,"line_end":280,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":462657,"byte_end":462660,"line_start":281,"line_end":281,"column_start":5,"column_end":8}},{"value":"/ Elements are visited in the *logical order* of the array, which","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":462665,"byte_end":462732,"line_start":282,"line_end":282,"column_start":5,"column_end":72}},{"value":"/ is where the rightmost index is varying the fastest.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":462737,"byte_end":462793,"line_start":283,"line_end":283,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":462798,"byte_end":462801,"line_start":284,"line_end":284,"column_start":5,"column_end":8}},{"value":"/ Iterator element type is `&A`.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":462806,"byte_end":462840,"line_start":285,"line_end":285,"column_start":5,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":3118},"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":463288,"byte_end":463296,"line_start":300,"line_end":300,"column_start":12,"column_end":20},"name":"iter_mut","qualname":"<ArrayBase<S, D>>::iter_mut","value":"pub fn iter_mut(&mut Self) -> IterMut<, A, D> where S: DataMut","parent":null,"children":[],"decl_id":null,"docs":" Return an iterator of mutable references to the elements of the array.","sig":null,"attributes":[{"value":"/ Return an iterator of mutable references to the elements of the array.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":463010,"byte_end":463084,"line_start":294,"line_end":294,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":463089,"byte_end":463092,"line_start":295,"line_end":295,"column_start":5,"column_end":8}},{"value":"/ Elements are visited in the *logical order* of the array, which","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":463097,"byte_end":463164,"line_start":296,"line_end":296,"column_start":5,"column_end":72}},{"value":"/ is where the rightmost index is varying the fastest.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":463169,"byte_end":463225,"line_start":297,"line_end":297,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":463230,"byte_end":463233,"line_start":298,"line_end":298,"column_start":5,"column_end":8}},{"value":"/ Iterator element type is `&mut A`.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":463238,"byte_end":463276,"line_start":299,"line_end":299,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":3119},"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":463764,"byte_end":463776,"line_start":315,"line_end":315,"column_start":12,"column_end":24},"name":"indexed_iter","qualname":"<ArrayBase<S, D>>::indexed_iter","value":"pub fn indexed_iter(&Self) -> IndexedIter<, A, D> where S: Data","parent":null,"children":[],"decl_id":null,"docs":" Return an iterator of indexes and references to the elements of the array.","sig":null,"attributes":[{"value":"/ Return an iterator of indexes and references to the elements of the array.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":463413,"byte_end":463491,"line_start":307,"line_end":307,"column_start":5,"column_end":83}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":463496,"byte_end":463499,"line_start":308,"line_end":308,"column_start":5,"column_end":8}},{"value":"/ Elements are visited in the *logical order* of the array, which","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":463504,"byte_end":463571,"line_start":309,"line_end":309,"column_start":5,"column_end":72}},{"value":"/ is where the rightmost index is varying the fastest.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":463576,"byte_end":463632,"line_start":310,"line_end":310,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":463637,"byte_end":463640,"line_start":311,"line_end":311,"column_start":5,"column_end":8}},{"value":"/ Iterator element type is `(D::Pattern, &A)`.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":463645,"byte_end":463693,"line_start":312,"line_end":312,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":463698,"byte_end":463701,"line_start":313,"line_end":313,"column_start":5,"column_end":8}},{"value":"/ See also [`Zip::indexed`](struct.Zip.html)","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":463706,"byte_end":463752,"line_start":314,"line_end":314,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":3120},"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":464216,"byte_end":464232,"line_start":328,"line_end":328,"column_start":12,"column_end":28},"name":"indexed_iter_mut","qualname":"<ArrayBase<S, D>>::indexed_iter_mut","value":"pub fn indexed_iter_mut(&mut Self) -> IndexedIterMut<, A, D> where S: DataMut","parent":null,"children":[],"decl_id":null,"docs":" Return an iterator of indexes and mutable references to the elements of the array.","sig":null,"attributes":[{"value":"/ Return an iterator of indexes and mutable references to the elements of the array.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":463912,"byte_end":463998,"line_start":322,"line_end":322,"column_start":5,"column_end":91}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":464003,"byte_end":464006,"line_start":323,"line_end":323,"column_start":5,"column_end":8}},{"value":"/ Elements are visited in the *logical order* of the array, which","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":464011,"byte_end":464078,"line_start":324,"line_end":324,"column_start":5,"column_end":72}},{"value":"/ is where the rightmost index is varying the fastest.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":464083,"byte_end":464139,"line_start":325,"line_end":325,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":464144,"byte_end":464147,"line_start":326,"line_end":326,"column_start":5,"column_end":8}},{"value":"/ Iterator element type is `(D::Pattern, &mut A)`.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":464152,"byte_end":464204,"line_start":327,"line_end":327,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":3121},"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":464750,"byte_end":464755,"line_start":342,"line_end":342,"column_start":12,"column_end":17},"name":"slice","qualname":"<ArrayBase<S, D>>::slice","value":"pub fn slice<I>(&Self, I) -> ArrayView<, A, I::OutDim> where I: SliceArg<D>,\nS: Data","parent":null,"children":[],"decl_id":null,"docs":" Return a sliced view of the array.","sig":null,"attributes":[{"value":"/ Return a sliced view of the array.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":464385,"byte_end":464423,"line_start":335,"line_end":335,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":464428,"byte_end":464431,"line_start":336,"line_end":336,"column_start":5,"column_end":8}},{"value":"/ See [*Slicing*](#slicing) for full documentation.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":464436,"byte_end":464489,"line_start":337,"line_end":337,"column_start":5,"column_end":58}},{"value":"/ See also [`s!`], [`SliceArg`], and [`SliceInfo`](crate::SliceInfo).","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":464494,"byte_end":464565,"line_start":338,"line_end":338,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":464570,"byte_end":464573,"line_start":339,"line_end":339,"column_start":5,"column_end":8}},{"value":"/ **Panics** if an index is out of bounds or step size is zero.<br>","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":464578,"byte_end":464647,"line_start":340,"line_end":340,"column_start":5,"column_end":74}},{"value":"/ (**Panics** if `D` is `IxDyn` and `info` does not match the number of array axes.)","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":464652,"byte_end":464738,"line_start":341,"line_end":341,"column_start":5,"column_end":91}}]},{"kind":"Method","id":{"krate":0,"index":3123},"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":465287,"byte_end":465296,"line_start":357,"line_end":357,"column_start":12,"column_end":21},"name":"slice_mut","qualname":"<ArrayBase<S, D>>::slice_mut","value":"pub fn slice_mut<I>(&mut Self, I) -> ArrayViewMut<, A, I::OutDim> where\nI: SliceArg<D>, S: DataMut","parent":null,"children":[],"decl_id":null,"docs":" Return a sliced read-write view of the array.","sig":null,"attributes":[{"value":"/ Return a sliced read-write view of the array.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":464911,"byte_end":464960,"line_start":350,"line_end":350,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":464965,"byte_end":464968,"line_start":351,"line_end":351,"column_start":5,"column_end":8}},{"value":"/ See [*Slicing*](#slicing) for full documentation.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":464973,"byte_end":465026,"line_start":352,"line_end":352,"column_start":5,"column_end":58}},{"value":"/ See also [`s!`], [`SliceArg`], and [`SliceInfo`](crate::SliceInfo).","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":465031,"byte_end":465102,"line_start":353,"line_end":353,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":465107,"byte_end":465110,"line_start":354,"line_end":354,"column_start":5,"column_end":8}},{"value":"/ **Panics** if an index is out of bounds or step size is zero.<br>","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":465115,"byte_end":465184,"line_start":355,"line_end":355,"column_start":5,"column_end":74}},{"value":"/ (**Panics** if `D` is `IxDyn` and `info` does not match the number of array axes.)","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":465189,"byte_end":465275,"line_start":356,"line_end":356,"column_start":5,"column_end":91}}]},{"kind":"Method","id":{"krate":0,"index":3125},"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":466351,"byte_end":466366,"line_start":388,"line_end":388,"column_start":12,"column_end":27},"name":"multi_slice_mut","qualname":"<ArrayBase<S, D>>::multi_slice_mut","value":"pub fn multi_slice_mut<'a, M>(&'a mut Self, M) -> M::Output where\nM: MultiSliceArg, S: DataMut","parent":null,"children":[],"decl_id":null,"docs":" Return multiple disjoint, sliced, mutable views of the array.","sig":null,"attributes":[{"value":"/ Return multiple disjoint, sliced, mutable views of the array.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":465466,"byte_end":465531,"line_start":365,"line_end":365,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":465536,"byte_end":465539,"line_start":366,"line_end":366,"column_start":5,"column_end":8}},{"value":"/ See [*Slicing*](#slicing) for full documentation. See also","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":465544,"byte_end":465606,"line_start":367,"line_end":367,"column_start":5,"column_end":67}},{"value":"/ [`MultiSliceArg`], [`s!`], [`SliceArg`], and","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":465611,"byte_end":465659,"line_start":368,"line_end":368,"column_start":5,"column_end":53}},{"value":"/ [`SliceInfo`](crate::SliceInfo).","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":465664,"byte_end":465700,"line_start":369,"line_end":369,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":465705,"byte_end":465708,"line_start":370,"line_end":370,"column_start":5,"column_end":8}},{"value":"/ **Panics** if any of the following occur:","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":465713,"byte_end":465758,"line_start":371,"line_end":371,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":465763,"byte_end":465766,"line_start":372,"line_end":372,"column_start":5,"column_end":8}},{"value":"/ * if any of the views would intersect (i.e. if any element would appear in multiple slices)","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":465771,"byte_end":465866,"line_start":373,"line_end":373,"column_start":5,"column_end":100}},{"value":"/ * if an index is out of bounds or step size is zero","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":465871,"byte_end":465926,"line_start":374,"line_end":374,"column_start":5,"column_end":60}},{"value":"/ * if `D` is `IxDyn` and `info` does not match the number of array axes","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":465931,"byte_end":466005,"line_start":375,"line_end":375,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":466010,"byte_end":466013,"line_start":376,"line_end":376,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":466018,"byte_end":466031,"line_start":377,"line_end":377,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":466036,"byte_end":466039,"line_start":378,"line_end":378,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":466044,"byte_end":466051,"line_start":379,"line_end":379,"column_start":5,"column_end":12}},{"value":"/ use ndarray::{arr2, s};","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":466056,"byte_end":466083,"line_start":380,"line_end":380,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":466088,"byte_end":466091,"line_start":381,"line_end":381,"column_start":5,"column_end":8}},{"value":"/ let mut a = arr2(&[[1, 2, 3], [4, 5, 6]]);","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":466096,"byte_end":466142,"line_start":382,"line_end":382,"column_start":5,"column_end":51}},{"value":"/ let (mut edges, mut middle) = a.multi_slice_mut((s![.., ..;2], s![.., 1]));","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":466147,"byte_end":466226,"line_start":383,"line_end":383,"column_start":5,"column_end":84}},{"value":"/ edges.fill(1);","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":466231,"byte_end":466249,"line_start":384,"line_end":384,"column_start":5,"column_end":23}},{"value":"/ middle.fill(0);","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":466254,"byte_end":466273,"line_start":385,"line_end":385,"column_start":5,"column_end":24}},{"value":"/ assert_eq!(a, arr2(&[[1, 0, 1], [1, 0, 1]]));","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":466278,"byte_end":466327,"line_start":386,"line_end":386,"column_start":5,"column_end":54}},{"value":"/ ```","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":466332,"byte_end":466339,"line_start":387,"line_end":387,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3128},"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":466931,"byte_end":466941,"line_start":403,"line_end":403,"column_start":12,"column_end":22},"name":"slice_move","qualname":"<ArrayBase<S, D>>::slice_move","value":"pub fn slice_move<I>(Self, I) -> ArrayBase<S, I::OutDim> where I: SliceArg<D>","parent":null,"children":[],"decl_id":null,"docs":" Slice the array, possibly changing the number of dimensions.","sig":null,"attributes":[{"value":"/ Slice the array, possibly changing the number of dimensions.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":466540,"byte_end":466604,"line_start":396,"line_end":396,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":466609,"byte_end":466612,"line_start":397,"line_end":397,"column_start":5,"column_end":8}},{"value":"/ See [*Slicing*](#slicing) for full documentation.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":466617,"byte_end":466670,"line_start":398,"line_end":398,"column_start":5,"column_end":58}},{"value":"/ See also [`s!`], [`SliceArg`], and [`SliceInfo`](crate::SliceInfo).","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":466675,"byte_end":466746,"line_start":399,"line_end":399,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":466751,"byte_end":466754,"line_start":400,"line_end":400,"column_start":5,"column_end":8}},{"value":"/ **Panics** if an index is out of bounds or step size is zero.<br>","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":466759,"byte_end":466828,"line_start":401,"line_end":401,"column_start":5,"column_end":74}},{"value":"/ (**Panics** if `D` is `IxDyn` and `info` does not match the number of array axes.)","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":466833,"byte_end":466919,"line_start":402,"line_end":402,"column_start":5,"column_end":91}}]},{"kind":"Method","id":{"krate":0,"index":3131},"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":469948,"byte_end":469962,"line_start":472,"line_end":472,"column_start":12,"column_end":26},"name":"slice_collapse","qualname":"<ArrayBase<S, D>>::slice_collapse","value":"pub fn slice_collapse<I>(&mut Self, I) where I: SliceArg<D>","parent":null,"children":[],"decl_id":null,"docs":" Slice the array in place without changing the number of dimensions.","sig":null,"attributes":[{"value":"/ Slice the array in place without changing the number of dimensions.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":469032,"byte_end":469103,"line_start":452,"line_end":452,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":469108,"byte_end":469111,"line_start":453,"line_end":453,"column_start":5,"column_end":8}},{"value":"/ In particular, if an axis is sliced with an index, the axis is","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":469116,"byte_end":469182,"line_start":454,"line_end":454,"column_start":5,"column_end":71}},{"value":"/ collapsed, as in [`.collapse_axis()`], rather than removed, as in","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":469187,"byte_end":469256,"line_start":455,"line_end":455,"column_start":5,"column_end":74}},{"value":"/ [`.slice_move()`] or [`.index_axis_move()`].","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":469261,"byte_end":469309,"line_start":456,"line_end":456,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":469314,"byte_end":469317,"line_start":457,"line_end":457,"column_start":5,"column_end":8}},{"value":"/ [`.collapse_axis()`]: #method.collapse_axis","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":469322,"byte_end":469369,"line_start":458,"line_end":458,"column_start":5,"column_end":52}},{"value":"/ [`.slice_move()`]: #method.slice_move","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":469374,"byte_end":469415,"line_start":459,"line_end":459,"column_start":5,"column_end":46}},{"value":"/ [`.index_axis_move()`]: #method.index_axis_move","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":469420,"byte_end":469471,"line_start":460,"line_end":460,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":469476,"byte_end":469479,"line_start":461,"line_end":461,"column_start":5,"column_end":8}},{"value":"/ See [*Slicing*](#slicing) for full documentation.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":469484,"byte_end":469537,"line_start":462,"line_end":462,"column_start":5,"column_end":58}},{"value":"/ See also [`s!`], [`SliceArg`], and [`SliceInfo`](crate::SliceInfo).","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":469542,"byte_end":469613,"line_start":463,"line_end":463,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":469618,"byte_end":469621,"line_start":464,"line_end":464,"column_start":5,"column_end":8}},{"value":"/ **Panics** in the following cases:","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":469626,"byte_end":469664,"line_start":465,"line_end":465,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":469669,"byte_end":469672,"line_start":466,"line_end":466,"column_start":5,"column_end":8}},{"value":"/ - if an index is out of bounds","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":469677,"byte_end":469711,"line_start":467,"line_end":467,"column_start":5,"column_end":39}},{"value":"/ - if a step size is zero","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":469716,"byte_end":469744,"line_start":468,"line_end":468,"column_start":5,"column_end":33}},{"value":"/ - if [`SliceInfoElem::NewAxis`] is in `info`, e.g. if [`NewAxis`] was","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":469749,"byte_end":469822,"line_start":469,"line_end":469,"column_start":5,"column_end":78}},{"value":"/   used in the [`s!`] macro","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":469827,"byte_end":469857,"line_start":470,"line_end":470,"column_start":5,"column_end":35}},{"value":"/ - if `D` is `IxDyn` and `info` does not match the number of array axes","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":469862,"byte_end":469936,"line_start":471,"line_end":471,"column_start":5,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":3134},"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":471089,"byte_end":471099,"line_start":501,"line_end":501,"column_start":12,"column_end":22},"name":"slice_axis","qualname":"<ArrayBase<S, D>>::slice_axis","value":"pub fn slice_axis(&Self, Axis, Slice) -> ArrayView<, A, D> where S: Data","parent":null,"children":[],"decl_id":null,"docs":" Return a view of the array, sliced along the specified axis.","sig":null,"attributes":[{"value":"/ Return a view of the array, sliced along the specified axis.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":470884,"byte_end":470948,"line_start":497,"line_end":497,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":470953,"byte_end":470956,"line_start":498,"line_end":498,"column_start":5,"column_end":8}},{"value":"/ **Panics** if an index is out of bounds or step size is zero.<br>","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":470961,"byte_end":471030,"line_start":499,"line_end":499,"column_start":5,"column_end":74}},{"value":"/ **Panics** if `axis` is out of bounds.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":471035,"byte_end":471077,"line_start":500,"line_end":500,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":3135},"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":471512,"byte_end":471526,"line_start":514,"line_end":514,"column_start":12,"column_end":26},"name":"slice_axis_mut","qualname":"<ArrayBase<S, D>>::slice_axis_mut","value":"pub fn slice_axis_mut(&mut Self, Axis, Slice) -> ArrayViewMut<, A, D> where\nS: DataMut","parent":null,"children":[],"decl_id":null,"docs":" Return a mutable view of the array, sliced along the specified axis.","sig":null,"attributes":[{"value":"/ Return a mutable view of the array, sliced along the specified axis.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":471299,"byte_end":471371,"line_start":510,"line_end":510,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":471376,"byte_end":471379,"line_start":511,"line_end":511,"column_start":5,"column_end":8}},{"value":"/ **Panics** if an index is out of bounds or step size is zero.<br>","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":471384,"byte_end":471453,"line_start":512,"line_end":512,"column_start":5,"column_end":74}},{"value":"/ **Panics** if `axis` is out of bounds.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":471458,"byte_end":471500,"line_start":513,"line_end":513,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":3136},"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":471947,"byte_end":471965,"line_start":527,"line_end":527,"column_start":12,"column_end":30},"name":"slice_axis_inplace","qualname":"<ArrayBase<S, D>>::slice_axis_inplace","value":"pub fn slice_axis_inplace(&mut Self, Axis, Slice)","parent":null,"children":[],"decl_id":null,"docs":" Slice the array in place along the specified axis.","sig":null,"attributes":[{"value":"/ Slice the array in place along the specified axis.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":471752,"byte_end":471806,"line_start":523,"line_end":523,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":471811,"byte_end":471814,"line_start":524,"line_end":524,"column_start":5,"column_end":8}},{"value":"/ **Panics** if an index is out of bounds or step size is zero.<br>","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":471819,"byte_end":471888,"line_start":525,"line_end":525,"column_start":5,"column_end":74}},{"value":"/ **Panics** if `axis` is out of bounds.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":471893,"byte_end":471935,"line_start":526,"line_end":526,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":3137},"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":472622,"byte_end":472637,"line_start":546,"line_end":546,"column_start":12,"column_end":27},"name":"slice_each_axis","qualname":"<ArrayBase<S, D>>::slice_each_axis","value":"pub fn slice_each_axis<F>(&Self, F) -> ArrayView<, A, D> where\nF: FnMut(AxisDescription) -> Slice, S: Data","parent":null,"children":[],"decl_id":null,"docs":" Return a view of a slice of the array, with a closure specifying the\n slice for each axis.","sig":null,"attributes":[{"value":"/ Return a view of a slice of the array, with a closure specifying the","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":472317,"byte_end":472389,"line_start":539,"line_end":539,"column_start":5,"column_end":77}},{"value":"/ slice for each axis.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":472394,"byte_end":472418,"line_start":540,"line_end":540,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":472423,"byte_end":472426,"line_start":541,"line_end":541,"column_start":5,"column_end":8}},{"value":"/ This is especially useful for code which is generic over the","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":472431,"byte_end":472495,"line_start":542,"line_end":542,"column_start":5,"column_end":69}},{"value":"/ dimensionality of the array.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":472500,"byte_end":472532,"line_start":543,"line_end":543,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":472537,"byte_end":472540,"line_start":544,"line_end":544,"column_start":5,"column_end":8}},{"value":"/ **Panics** if an index is out of bounds or step size is zero.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":472545,"byte_end":472610,"line_start":545,"line_end":545,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":3139},"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":473168,"byte_end":473187,"line_start":563,"line_end":563,"column_start":12,"column_end":31},"name":"slice_each_axis_mut","qualname":"<ArrayBase<S, D>>::slice_each_axis_mut","value":"pub fn slice_each_axis_mut<F>(&mut Self, F) -> ArrayViewMut<, A, D> where\nF: FnMut(AxisDescription) -> Slice, S: DataMut","parent":null,"children":[],"decl_id":null,"docs":" Return a mutable view of a slice of the array, with a closure\n specifying the slice for each axis.","sig":null,"attributes":[{"value":"/ Return a mutable view of a slice of the array, with a closure","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":472855,"byte_end":472920,"line_start":556,"line_end":556,"column_start":5,"column_end":70}},{"value":"/ specifying the slice for each axis.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":472925,"byte_end":472964,"line_start":557,"line_end":557,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":472969,"byte_end":472972,"line_start":558,"line_end":558,"column_start":5,"column_end":8}},{"value":"/ This is especially useful for code which is generic over the","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":472977,"byte_end":473041,"line_start":559,"line_end":559,"column_start":5,"column_end":69}},{"value":"/ dimensionality of the array.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":473046,"byte_end":473078,"line_start":560,"line_end":560,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":473083,"byte_end":473086,"line_start":561,"line_end":561,"column_start":5,"column_end":8}},{"value":"/ **Panics** if an index is out of bounds or step size is zero.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":473091,"byte_end":473156,"line_start":562,"line_end":562,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":3141},"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":473711,"byte_end":473734,"line_start":580,"line_end":580,"column_start":12,"column_end":35},"name":"slice_each_axis_inplace","qualname":"<ArrayBase<S, D>>::slice_each_axis_inplace","value":"pub fn slice_each_axis_inplace<F>(&mut Self, F) where\nF: FnMut(AxisDescription) -> Slice","parent":null,"children":[],"decl_id":null,"docs":" Slice the array in place, with a closure specifying the slice for each\n axis.","sig":null,"attributes":[{"value":"/ Slice the array in place, with a closure specifying the slice for each","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":473419,"byte_end":473493,"line_start":573,"line_end":573,"column_start":5,"column_end":79}},{"value":"/ axis.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":473498,"byte_end":473507,"line_start":574,"line_end":574,"column_start":5,"column_end":14}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":473512,"byte_end":473515,"line_start":575,"line_end":575,"column_start":5,"column_end":8}},{"value":"/ This is especially useful for code which is generic over the","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":473520,"byte_end":473584,"line_start":576,"line_end":576,"column_start":5,"column_end":69}},{"value":"/ dimensionality of the array.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":473589,"byte_end":473621,"line_start":577,"line_end":577,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":473626,"byte_end":473629,"line_start":578,"line_end":578,"column_start":5,"column_end":8}},{"value":"/ **Panics** if an index is out of bounds or step size is zero.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":473634,"byte_end":473699,"line_start":579,"line_end":579,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":3143},"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":474633,"byte_end":474636,"line_start":614,"line_end":614,"column_start":12,"column_end":15},"name":"get","qualname":"<ArrayBase<S, D>>::get","value":"pub fn get<I>(&Self, I) -> Option<&A> where I: NdIndex<D>, S: Data","parent":null,"children":[],"decl_id":null,"docs":" Return a reference to the element at `index`, or return `None`\n if the index is out of bounds.","sig":null,"attributes":[{"value":"/ Return a reference to the element at `index`, or return `None`","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":474138,"byte_end":474204,"line_start":596,"line_end":596,"column_start":5,"column_end":71}},{"value":"/ if the index is out of bounds.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":474209,"byte_end":474243,"line_start":597,"line_end":597,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":474248,"byte_end":474251,"line_start":598,"line_end":598,"column_start":5,"column_end":8}},{"value":"/ Arrays also support indexing syntax: `array[index]`.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":474256,"byte_end":474312,"line_start":599,"line_end":599,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":474317,"byte_end":474320,"line_start":600,"line_end":600,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":474325,"byte_end":474332,"line_start":601,"line_end":601,"column_start":5,"column_end":12}},{"value":"/ use ndarray::arr2;","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":474337,"byte_end":474359,"line_start":602,"line_end":602,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":474364,"byte_end":474367,"line_start":603,"line_end":603,"column_start":5,"column_end":8}},{"value":"/ let a = arr2(&[[1., 2.],","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":474372,"byte_end":474400,"line_start":604,"line_end":604,"column_start":5,"column_end":33}},{"value":"/                [3., 4.]]);","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":474405,"byte_end":474435,"line_start":605,"line_end":605,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":474440,"byte_end":474443,"line_start":606,"line_end":606,"column_start":5,"column_end":8}},{"value":"/ assert!(","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":474448,"byte_end":474460,"line_start":607,"line_end":607,"column_start":5,"column_end":17}},{"value":"/     a.get((0, 1)) == Some(&2.) &&","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":474465,"byte_end":474502,"line_start":608,"line_end":608,"column_start":5,"column_end":42}},{"value":"/     a.get((0, 2)) == None &&","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":474507,"byte_end":474539,"line_start":609,"line_end":609,"column_start":5,"column_end":37}},{"value":"/     a[(0, 1)] == 2. &&","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":474544,"byte_end":474570,"line_start":610,"line_end":610,"column_start":5,"column_end":31}},{"value":"/     a[[0, 1]] == 2.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":474575,"byte_end":474598,"line_start":611,"line_end":611,"column_start":5,"column_end":28}},{"value":"/ );","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":474603,"byte_end":474609,"line_start":612,"line_end":612,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":474614,"byte_end":474621,"line_start":613,"line_end":613,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3149},"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":475209,"byte_end":475216,"line_start":634,"line_end":634,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<ArrayBase<S, D>>::get_mut","value":"pub fn get_mut<I>(&mut Self, I) -> Option<&mut A> where S: DataMut,\nI: NdIndex<D>","parent":null,"children":[],"decl_id":null,"docs":" Return a mutable reference to the element at `index`, or return `None`\n if the index is out of bounds.\n","sig":null,"attributes":[{"value":"/ Return a mutable reference to the element at `index`, or return `None`","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":475084,"byte_end":475158,"line_start":632,"line_end":632,"column_start":5,"column_end":79}},{"value":"/ if the index is out of bounds.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":475163,"byte_end":475197,"line_start":633,"line_end":633,"column_start":5,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":3155},"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":476110,"byte_end":476114,"line_start":665,"line_end":665,"column_start":19,"column_end":23},"name":"uget","qualname":"<ArrayBase<S, D>>::uget","value":"pub unsafe fn uget<I>(&Self, I) -> &A where S: Data, I: NdIndex<D>","parent":null,"children":[],"decl_id":null,"docs":" Perform *unchecked* array indexing.","sig":null,"attributes":[{"value":"/ Perform *unchecked* array indexing.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":475809,"byte_end":475848,"line_start":655,"line_end":655,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":475853,"byte_end":475856,"line_start":656,"line_end":656,"column_start":5,"column_end":8}},{"value":"/ Return a reference to the element at `index`.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":475861,"byte_end":475910,"line_start":657,"line_end":657,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":475915,"byte_end":475918,"line_start":658,"line_end":658,"column_start":5,"column_end":8}},{"value":"/ **Note:** only unchecked for non-debug builds of ndarray.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":475923,"byte_end":475984,"line_start":659,"line_end":659,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":475989,"byte_end":475992,"line_start":660,"line_end":660,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":475997,"byte_end":476009,"line_start":661,"line_end":661,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":476014,"byte_end":476017,"line_start":662,"line_end":662,"column_start":5,"column_end":8}},{"value":"/ The caller must ensure that the index is in-bounds.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":476022,"byte_end":476077,"line_start":663,"line_end":663,"column_start":5,"column_end":60}},{"value":"inline","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":476082,"byte_end":476091,"line_start":664,"line_end":664,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3157},"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":476861,"byte_end":476869,"line_start":690,"line_end":690,"column_start":19,"column_end":27},"name":"uget_mut","qualname":"<ArrayBase<S, D>>::uget_mut","value":"pub unsafe fn uget_mut<I>(&mut Self, I) -> &mut A where S: DataMut,\nI: NdIndex<D>","parent":null,"children":[],"decl_id":null,"docs":" Perform *unchecked* array indexing.","sig":null,"attributes":[{"value":"/ Perform *unchecked* array indexing.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":476359,"byte_end":476398,"line_start":675,"line_end":675,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":476403,"byte_end":476406,"line_start":676,"line_end":676,"column_start":5,"column_end":8}},{"value":"/ Return a mutable reference to the element at `index`.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":476411,"byte_end":476468,"line_start":677,"line_end":677,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":476473,"byte_end":476476,"line_start":678,"line_end":678,"column_start":5,"column_end":8}},{"value":"/ **Note:** Only unchecked for non-debug builds of ndarray.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":476481,"byte_end":476542,"line_start":679,"line_end":679,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":476547,"byte_end":476550,"line_start":680,"line_end":680,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":476555,"byte_end":476567,"line_start":681,"line_end":681,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":476572,"byte_end":476575,"line_start":682,"line_end":682,"column_start":5,"column_end":8}},{"value":"/ The caller must ensure that:","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":476580,"byte_end":476612,"line_start":683,"line_end":683,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":476617,"byte_end":476620,"line_start":684,"line_end":684,"column_start":5,"column_end":8}},{"value":"/ 1. the index is in-bounds and","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":476625,"byte_end":476658,"line_start":685,"line_end":685,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":476663,"byte_end":476666,"line_start":686,"line_end":686,"column_start":5,"column_end":8}},{"value":"/ 2. the data is uniquely held by the array. (This property is guaranteed","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":476671,"byte_end":476746,"line_start":687,"line_end":687,"column_start":5,"column_end":80}},{"value":"/    for `Array` and `ArrayViewMut`, but not for `ArcArray` or `CowArray`.)","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":476751,"byte_end":476828,"line_start":688,"line_end":688,"column_start":5,"column_end":82}},{"value":"inline","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":476833,"byte_end":476842,"line_start":689,"line_end":689,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3159},"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":477335,"byte_end":477339,"line_start":706,"line_end":706,"column_start":12,"column_end":16},"name":"swap","qualname":"<ArrayBase<S, D>>::swap","value":"pub fn swap<I>(&mut Self, I, I) where S: DataMut, I: NdIndex<D>","parent":null,"children":[],"decl_id":null,"docs":" Swap elements at indices `index1` and `index2`.","sig":null,"attributes":[{"value":"/ Swap elements at indices `index1` and `index2`.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":477175,"byte_end":477226,"line_start":701,"line_end":701,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":477231,"byte_end":477234,"line_start":702,"line_end":702,"column_start":5,"column_end":8}},{"value":"/ Indices may be equal.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":477239,"byte_end":477264,"line_start":703,"line_end":703,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":477269,"byte_end":477272,"line_start":704,"line_end":704,"column_start":5,"column_end":8}},{"value":"/ ***Panics*** if an index is out of bounds.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":477277,"byte_end":477323,"line_start":705,"line_end":705,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":3161},"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":478459,"byte_end":478464,"line_start":739,"line_end":739,"column_start":19,"column_end":24},"name":"uswap","qualname":"<ArrayBase<S, D>>::uswap","value":"pub unsafe fn uswap<I>(&mut Self, I, I) where S: DataMut, I: NdIndex<D>","parent":null,"children":[],"decl_id":null,"docs":" Swap elements *unchecked* at indices `index1` and `index2`.","sig":null,"attributes":[{"value":"/ Swap elements *unchecked* at indices `index1` and `index2`.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":477961,"byte_end":478024,"line_start":725,"line_end":725,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":478029,"byte_end":478032,"line_start":726,"line_end":726,"column_start":5,"column_end":8}},{"value":"/ Indices may be equal.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":478037,"byte_end":478062,"line_start":727,"line_end":727,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":478067,"byte_end":478070,"line_start":728,"line_end":728,"column_start":5,"column_end":8}},{"value":"/ **Note:** only unchecked for non-debug builds of ndarray.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":478075,"byte_end":478136,"line_start":729,"line_end":729,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":478141,"byte_end":478144,"line_start":730,"line_end":730,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":478149,"byte_end":478161,"line_start":731,"line_end":731,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":478166,"byte_end":478169,"line_start":732,"line_end":732,"column_start":5,"column_end":8}},{"value":"/ The caller must ensure that:","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":478174,"byte_end":478206,"line_start":733,"line_end":733,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":478211,"byte_end":478214,"line_start":734,"line_end":734,"column_start":5,"column_end":8}},{"value":"/ 1. both `index1` and `index2` are in-bounds and","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":478219,"byte_end":478270,"line_start":735,"line_end":735,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":478275,"byte_end":478278,"line_start":736,"line_end":736,"column_start":5,"column_end":8}},{"value":"/ 2. the data is uniquely held by the array. (This property is guaranteed","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":478283,"byte_end":478358,"line_start":737,"line_end":737,"column_start":5,"column_end":80}},{"value":"/    for `Array` and `ArrayViewMut`, but not for `ArcArray` or `CowArray`.)","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":478363,"byte_end":478440,"line_start":738,"line_end":738,"column_start":5,"column_end":82}}]},{"kind":"Method","id":{"krate":0,"index":3164},"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":480010,"byte_end":480020,"line_start":786,"line_end":786,"column_start":12,"column_end":22},"name":"index_axis","qualname":"<ArrayBase<S, D>>::index_axis","value":"pub fn index_axis(&Self, Axis, usize) -> ArrayView<, A, D::Smaller> where\nS: Data, D: RemoveAxis","parent":null,"children":[],"decl_id":null,"docs":" Returns a view restricted to `index` along the axis, with the axis\n removed.","sig":null,"attributes":[{"value":"/ Returns a view restricted to `index` along the axis, with the axis","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":479226,"byte_end":479296,"line_start":765,"line_end":765,"column_start":5,"column_end":75}},{"value":"/ removed.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":479301,"byte_end":479313,"line_start":766,"line_end":766,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":479318,"byte_end":479321,"line_start":767,"line_end":767,"column_start":5,"column_end":8}},{"value":"/ See [*Subviews*](#subviews) for full documentation.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":479326,"byte_end":479381,"line_start":768,"line_end":768,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":479386,"byte_end":479389,"line_start":769,"line_end":769,"column_start":5,"column_end":8}},{"value":"/ **Panics** if `axis` or `index` is out of bounds.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":479394,"byte_end":479447,"line_start":770,"line_end":770,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":479452,"byte_end":479455,"line_start":771,"line_end":771,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":479460,"byte_end":479467,"line_start":772,"line_end":772,"column_start":5,"column_end":12}},{"value":"/ use ndarray::{arr2, ArrayView, Axis};","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":479472,"byte_end":479513,"line_start":773,"line_end":773,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":479518,"byte_end":479521,"line_start":774,"line_end":774,"column_start":5,"column_end":8}},{"value":"/ let a = arr2(&[[1., 2. ],    // ... axis 0, row 0","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":479526,"byte_end":479579,"line_start":775,"line_end":775,"column_start":5,"column_end":58}},{"value":"/                [3., 4. ],    // --- axis 0, row 1","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":479584,"byte_end":479637,"line_start":776,"line_end":776,"column_start":5,"column_end":58}},{"value":"/                [5., 6. ]]);  // ... axis 0, row 2","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":479642,"byte_end":479695,"line_start":777,"line_end":777,"column_start":5,"column_end":58}},{"value":"/ //               .   \\","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":479700,"byte_end":479726,"line_start":778,"line_end":778,"column_start":5,"column_end":31}},{"value":"/ //                .   axis 1, column 1","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":479731,"byte_end":479773,"line_start":779,"line_end":779,"column_start":5,"column_end":47}},{"value":"/ //                 axis 1, column 0","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":479778,"byte_end":479817,"line_start":780,"line_end":780,"column_start":5,"column_end":44}},{"value":"/ assert!(","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":479822,"byte_end":479834,"line_start":781,"line_end":781,"column_start":5,"column_end":17}},{"value":"/     a.index_axis(Axis(0), 1) == ArrayView::from(&[3., 4.]) &&","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":479839,"byte_end":479904,"line_start":782,"line_end":782,"column_start":5,"column_end":70}},{"value":"/     a.index_axis(Axis(1), 1) == ArrayView::from(&[2., 4., 6.])","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":479909,"byte_end":479975,"line_start":783,"line_end":783,"column_start":5,"column_end":71}},{"value":"/ );","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":479980,"byte_end":479986,"line_start":784,"line_end":784,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":479991,"byte_end":479998,"line_start":785,"line_end":785,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3165},"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":480897,"byte_end":480911,"line_start":818,"line_end":818,"column_start":12,"column_end":26},"name":"index_axis_mut","qualname":"<ArrayBase<S, D>>::index_axis_mut","value":"pub fn index_axis_mut(&mut Self, Axis, usize) -> ArrayViewMut<, A, D::Smaller>\nwhere S: DataMut, D: RemoveAxis","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable view restricted to `index` along the axis, with the\n axis removed.","sig":null,"attributes":[{"value":"/ Returns a mutable view restricted to `index` along the axis, with the","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":480202,"byte_end":480275,"line_start":794,"line_end":794,"column_start":5,"column_end":78}},{"value":"/ axis removed.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":480280,"byte_end":480297,"line_start":795,"line_end":795,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":480302,"byte_end":480305,"line_start":796,"line_end":796,"column_start":5,"column_end":8}},{"value":"/ **Panics** if `axis` or `index` is out of bounds.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":480310,"byte_end":480363,"line_start":797,"line_end":797,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":480368,"byte_end":480371,"line_start":798,"line_end":798,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":480376,"byte_end":480383,"line_start":799,"line_end":799,"column_start":5,"column_end":12}},{"value":"/ use ndarray::{arr2, aview2, Axis};","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":480388,"byte_end":480426,"line_start":800,"line_end":800,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":480431,"byte_end":480434,"line_start":801,"line_end":801,"column_start":5,"column_end":8}},{"value":"/ let mut a = arr2(&[[1., 2. ],","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":480439,"byte_end":480472,"line_start":802,"line_end":802,"column_start":5,"column_end":38}},{"value":"/                    [3., 4. ]]);","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":480477,"byte_end":480512,"line_start":803,"line_end":803,"column_start":5,"column_end":40}},{"value":"/ //                   .   \\","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":480517,"byte_end":480547,"line_start":804,"line_end":804,"column_start":5,"column_end":35}},{"value":"/ //                    .   axis 1, column 1","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":480552,"byte_end":480598,"line_start":805,"line_end":805,"column_start":5,"column_end":51}},{"value":"/ //                     axis 1, column 0","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":480603,"byte_end":480646,"line_start":806,"line_end":806,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":480651,"byte_end":480654,"line_start":807,"line_end":807,"column_start":5,"column_end":8}},{"value":"/ {","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":480659,"byte_end":480664,"line_start":808,"line_end":808,"column_start":5,"column_end":10}},{"value":"/     let mut column1 = a.index_axis_mut(Axis(1), 1);","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":480669,"byte_end":480724,"line_start":809,"line_end":809,"column_start":5,"column_end":60}},{"value":"/     column1 += 10.;","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":480729,"byte_end":480752,"line_start":810,"line_end":810,"column_start":5,"column_end":28}},{"value":"/ }","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":480757,"byte_end":480762,"line_start":811,"line_end":811,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":480767,"byte_end":480770,"line_start":812,"line_end":812,"column_start":5,"column_end":8}},{"value":"/ assert!(","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":480775,"byte_end":480787,"line_start":813,"line_end":813,"column_start":5,"column_end":17}},{"value":"/     a == aview2(&[[1., 12.],","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":480792,"byte_end":480824,"line_start":814,"line_end":814,"column_start":5,"column_end":37}},{"value":"/                   [3., 14.]])","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":480829,"byte_end":480862,"line_start":815,"line_end":815,"column_start":5,"column_end":38}},{"value":"/ );","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":480867,"byte_end":480873,"line_start":816,"line_end":816,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":480878,"byte_end":480885,"line_start":817,"line_end":817,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3166},"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":481366,"byte_end":481381,"line_start":831,"line_end":831,"column_start":12,"column_end":27},"name":"index_axis_move","qualname":"<ArrayBase<S, D>>::index_axis_move","value":"pub fn index_axis_move(Self, Axis, usize) -> ArrayBase<S, D::Smaller> where\nD: RemoveAxis","parent":null,"children":[],"decl_id":null,"docs":" Collapses the array to `index` along the axis and removes the axis.","sig":null,"attributes":[{"value":"/ Collapses the array to `index` along the axis and removes the axis.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":481107,"byte_end":481178,"line_start":826,"line_end":826,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":481183,"byte_end":481186,"line_start":827,"line_end":827,"column_start":5,"column_end":8}},{"value":"/ See [`.index_axis()`](#method.index_axis) and [*Subviews*](#subviews) for full documentation.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":481191,"byte_end":481288,"line_start":828,"line_end":828,"column_start":5,"column_end":102}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":481293,"byte_end":481296,"line_start":829,"line_end":829,"column_start":5,"column_end":8}},{"value":"/ **Panics** if `axis` or `index` is out of bounds.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":481301,"byte_end":481354,"line_start":830,"line_end":830,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":3167},"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":481946,"byte_end":481959,"line_start":847,"line_end":847,"column_start":12,"column_end":25},"name":"collapse_axis","qualname":"<ArrayBase<S, D>>::collapse_axis","value":"pub fn collapse_axis(&mut Self, Axis, usize)","parent":null,"children":[],"decl_id":null,"docs":" Selects `index` along the axis, collapsing the axis into length one.","sig":null,"attributes":[{"value":"/ Selects `index` along the axis, collapsing the axis into length one.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":481796,"byte_end":481868,"line_start":844,"line_end":844,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":481873,"byte_end":481876,"line_start":845,"line_end":845,"column_start":5,"column_end":8}},{"value":"/ **Panics** if `axis` or `index` is out of bounds.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":481881,"byte_end":481934,"line_start":846,"line_end":846,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":3168},"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":482864,"byte_end":482870,"line_start":874,"line_end":874,"column_start":12,"column_end":18},"name":"select","qualname":"<ArrayBase<S, D>>::select","value":"pub fn select(&Self, Axis, &[Ix]) -> Array<A, D> where A: Copy, S: Data,\nD: RemoveAxis","parent":null,"children":[],"decl_id":null,"docs":" Along `axis`, select arbitrary subviews corresponding to `indices`\n and and copy them into a new array.","sig":null,"attributes":[{"value":"/ Along `axis`, select arbitrary subviews corresponding to `indices`","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":482217,"byte_end":482287,"line_start":853,"line_end":853,"column_start":5,"column_end":75}},{"value":"/ and and copy them into a new array.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":482292,"byte_end":482331,"line_start":854,"line_end":854,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":482336,"byte_end":482339,"line_start":855,"line_end":855,"column_start":5,"column_end":8}},{"value":"/ **Panics** if `axis` or an element of `indices` is out of bounds.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":482344,"byte_end":482413,"line_start":856,"line_end":856,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":482418,"byte_end":482421,"line_start":857,"line_end":857,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":482426,"byte_end":482433,"line_start":858,"line_end":858,"column_start":5,"column_end":12}},{"value":"/ use ndarray::{arr2, Axis};","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":482438,"byte_end":482468,"line_start":859,"line_end":859,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":482473,"byte_end":482476,"line_start":860,"line_end":860,"column_start":5,"column_end":8}},{"value":"/ let x = arr2(&[[0., 1.],","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":482481,"byte_end":482509,"line_start":861,"line_end":861,"column_start":5,"column_end":33}},{"value":"/                [2., 3.],","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":482514,"byte_end":482542,"line_start":862,"line_end":862,"column_start":5,"column_end":33}},{"value":"/                [4., 5.],","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":482547,"byte_end":482575,"line_start":863,"line_end":863,"column_start":5,"column_end":33}},{"value":"/                [6., 7.],","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":482580,"byte_end":482608,"line_start":864,"line_end":864,"column_start":5,"column_end":33}},{"value":"/                [8., 9.]]);","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":482613,"byte_end":482643,"line_start":865,"line_end":865,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":482648,"byte_end":482651,"line_start":866,"line_end":866,"column_start":5,"column_end":8}},{"value":"/ let r = x.select(Axis(0), &[0, 4, 3]);","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":482656,"byte_end":482698,"line_start":867,"line_end":867,"column_start":5,"column_end":47}},{"value":"/ assert!(","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":482703,"byte_end":482715,"line_start":868,"line_end":868,"column_start":5,"column_end":17}},{"value":"/         r == arr2(&[[0., 1.],","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":482720,"byte_end":482753,"line_start":869,"line_end":869,"column_start":5,"column_end":38}},{"value":"/                     [8., 9.],","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":482758,"byte_end":482791,"line_start":870,"line_end":870,"column_start":5,"column_end":38}},{"value":"/                     [6., 7.]])","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":482796,"byte_end":482830,"line_start":871,"line_end":871,"column_start":5,"column_end":39}},{"value":"/);","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":482835,"byte_end":482840,"line_start":872,"line_end":872,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":482845,"byte_end":482852,"line_start":873,"line_end":873,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3169},"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":484458,"byte_end":484462,"line_start":919,"line_end":919,"column_start":12,"column_end":16},"name":"rows","qualname":"<ArrayBase<S, D>>::rows","value":"pub fn rows(&Self) -> Lanes<, A, D::Smaller> where S: Data","parent":null,"children":[],"decl_id":null,"docs":" Return a producer and iterable that traverses over the *generalized*\n rows of the array. For a 2D array these are the regular rows.","sig":null,"attributes":[{"value":"/ Return a producer and iterable that traverses over the *generalized*","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":483414,"byte_end":483486,"line_start":893,"line_end":893,"column_start":5,"column_end":77}},{"value":"/ rows of the array. For a 2D array these are the regular rows.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":483491,"byte_end":483556,"line_start":894,"line_end":894,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":483561,"byte_end":483564,"line_start":895,"line_end":895,"column_start":5,"column_end":8}},{"value":"/ This is equivalent to `.lanes(Axis(n - 1))` where *n* is `self.ndim()`.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":483569,"byte_end":483644,"line_start":896,"line_end":896,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":483649,"byte_end":483652,"line_start":897,"line_end":897,"column_start":5,"column_end":8}},{"value":"/ For an array of dimensions *a* × *b* × *c* × ... × *l* × *m*","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":483657,"byte_end":483726,"line_start":898,"line_end":898,"column_start":5,"column_end":69}},{"value":"/ it has *a* × *b* × *c* × ... × *l* rows each of length *m*.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":483731,"byte_end":483798,"line_start":899,"line_end":899,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":483803,"byte_end":483806,"line_start":900,"line_end":900,"column_start":5,"column_end":8}},{"value":"/ For example, in a 2 × 2 × 3 array, each row is 3 elements long","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":483811,"byte_end":483879,"line_start":901,"line_end":901,"column_start":5,"column_end":71}},{"value":"/ and there are 2 × 2 = 4 rows in total.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":483884,"byte_end":483927,"line_start":902,"line_end":902,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":483932,"byte_end":483935,"line_start":903,"line_end":903,"column_start":5,"column_end":8}},{"value":"/ Iterator element is `ArrayView1<A>` (1D array view).","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":483940,"byte_end":483996,"line_start":904,"line_end":904,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":484001,"byte_end":484004,"line_start":905,"line_end":905,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":484009,"byte_end":484016,"line_start":906,"line_end":906,"column_start":5,"column_end":12}},{"value":"/ use ndarray::{arr3, Axis, arr1};","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":484021,"byte_end":484057,"line_start":907,"line_end":907,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":484062,"byte_end":484065,"line_start":908,"line_end":908,"column_start":5,"column_end":8}},{"value":"/ let a = arr3(&[[[ 0,  1,  2],    // -- row 0, 0","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":484070,"byte_end":484121,"line_start":909,"line_end":909,"column_start":5,"column_end":56}},{"value":"/                 [ 3,  4,  5]],   // -- row 0, 1","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":484126,"byte_end":484177,"line_start":910,"line_end":910,"column_start":5,"column_end":56}},{"value":"/                [[ 6,  7,  8],    // -- row 1, 0","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":484182,"byte_end":484233,"line_start":911,"line_end":911,"column_start":5,"column_end":56}},{"value":"/                 [ 9, 10, 11]]]); // -- row 1, 1","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":484238,"byte_end":484289,"line_start":912,"line_end":912,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":484294,"byte_end":484297,"line_start":913,"line_end":913,"column_start":5,"column_end":8}},{"value":"/ // `rows` will yield the four generalized rows of the array.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":484302,"byte_end":484366,"line_start":914,"line_end":914,"column_start":5,"column_end":69}},{"value":"/ for row in a.rows() {","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":484371,"byte_end":484396,"line_start":915,"line_end":915,"column_start":5,"column_end":30}},{"value":"/     /* loop body */","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":484401,"byte_end":484424,"line_start":916,"line_end":916,"column_start":5,"column_end":28}},{"value":"/ }","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":484429,"byte_end":484434,"line_start":917,"line_end":917,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":484439,"byte_end":484446,"line_start":918,"line_end":918,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3170},"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":484738,"byte_end":484745,"line_start":931,"line_end":931,"column_start":12,"column_end":19},"name":"genrows","qualname":"<ArrayBase<S, D>>::genrows","value":"pub fn genrows(&Self) -> Lanes<, A, D::Smaller> where S: Data","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"deprecated(note = \"Renamed to .rows()\", since = \"0.15.0\")","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":484670,"byte_end":484726,"line_start":930,"line_end":930,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":3171},"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":485067,"byte_end":485075,"line_start":942,"line_end":942,"column_start":12,"column_end":20},"name":"rows_mut","qualname":"<ArrayBase<S, D>>::rows_mut","value":"pub fn rows_mut(&mut Self) -> LanesMut<, A, D::Smaller> where S: DataMut","parent":null,"children":[],"decl_id":null,"docs":" Return a producer and iterable that traverses over the *generalized*\n rows of the array and yields mutable array views.","sig":null,"attributes":[{"value":"/ Return a producer and iterable that traverses over the *generalized*","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":484845,"byte_end":484917,"line_start":938,"line_end":938,"column_start":5,"column_end":77}},{"value":"/ rows of the array and yields mutable array views.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":484922,"byte_end":484975,"line_start":939,"line_end":939,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":484980,"byte_end":484983,"line_start":940,"line_end":940,"column_start":5,"column_end":8}},{"value":"/ Iterator element is `ArrayView1<A>` (1D read-write array view).","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":484988,"byte_end":485055,"line_start":941,"line_end":941,"column_start":5,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":3172},"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":485372,"byte_end":485383,"line_start":954,"line_end":954,"column_start":12,"column_end":23},"name":"genrows_mut","qualname":"<ArrayBase<S, D>>::genrows_mut","value":"pub fn genrows_mut(&mut Self) -> LanesMut<, A, D::Smaller> where S: DataMut","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"deprecated(note = \"Renamed to .rows_mut()\", since = \"0.15.0\")","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":485300,"byte_end":485360,"line_start":953,"line_end":953,"column_start":5,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":3173},"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":486546,"byte_end":486553,"line_start":987,"line_end":987,"column_start":12,"column_end":19},"name":"columns","qualname":"<ArrayBase<S, D>>::columns","value":"pub fn columns(&Self) -> Lanes<, A, D::Smaller> where S: Data","parent":null,"children":[],"decl_id":null,"docs":" Return a producer and iterable that traverses over the *generalized*\n columns of the array. For a 2D array these are the regular columns.","sig":null,"attributes":[{"value":"/ Return a producer and iterable that traverses over the *generalized*","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":485497,"byte_end":485569,"line_start":961,"line_end":961,"column_start":5,"column_end":77}},{"value":"/ columns of the array. For a 2D array these are the regular columns.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":485574,"byte_end":485645,"line_start":962,"line_end":962,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":485650,"byte_end":485653,"line_start":963,"line_end":963,"column_start":5,"column_end":8}},{"value":"/ This is equivalent to `.lanes(Axis(0))`.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":485658,"byte_end":485702,"line_start":964,"line_end":964,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":485707,"byte_end":485710,"line_start":965,"line_end":965,"column_start":5,"column_end":8}},{"value":"/ For an array of dimensions *a* × *b* × *c* × ... × *l* × *m*","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":485715,"byte_end":485784,"line_start":966,"line_end":966,"column_start":5,"column_end":69}},{"value":"/ it has *b* × *c* × ... × *l* × *m* columns each of length *a*.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":485789,"byte_end":485859,"line_start":967,"line_end":967,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":485864,"byte_end":485867,"line_start":968,"line_end":968,"column_start":5,"column_end":8}},{"value":"/ For example, in a 2 × 2 × 3 array, each column is 2 elements long","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":485872,"byte_end":485943,"line_start":969,"line_end":969,"column_start":5,"column_end":74}},{"value":"/ and there are 2 × 3 = 6 columns in total.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":485948,"byte_end":485994,"line_start":970,"line_end":970,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":485999,"byte_end":486002,"line_start":971,"line_end":971,"column_start":5,"column_end":8}},{"value":"/ Iterator element is `ArrayView1<A>` (1D array view).","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":486007,"byte_end":486063,"line_start":972,"line_end":972,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":486068,"byte_end":486071,"line_start":973,"line_end":973,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":486076,"byte_end":486083,"line_start":974,"line_end":974,"column_start":5,"column_end":12}},{"value":"/ use ndarray::{arr3, Axis, arr1};","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":486088,"byte_end":486124,"line_start":975,"line_end":975,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":486129,"byte_end":486132,"line_start":976,"line_end":976,"column_start":5,"column_end":8}},{"value":"/ // The generalized columns of a 3D array:","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":486137,"byte_end":486182,"line_start":977,"line_end":977,"column_start":5,"column_end":50}},{"value":"/ // are directed along the 0th axis: 0 and 6, 1 and 7 and so on...","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":486187,"byte_end":486256,"line_start":978,"line_end":978,"column_start":5,"column_end":74}},{"value":"/ let a = arr3(&[[[ 0,  1,  2], [ 3,  4,  5]],","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":486261,"byte_end":486309,"line_start":979,"line_end":979,"column_start":5,"column_end":53}},{"value":"/                [[ 6,  7,  8], [ 9, 10, 11]]]);","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":486314,"byte_end":486364,"line_start":980,"line_end":980,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":486369,"byte_end":486372,"line_start":981,"line_end":981,"column_start":5,"column_end":8}},{"value":"/ // Here `columns` will yield the six generalized columns of the array.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":486377,"byte_end":486451,"line_start":982,"line_end":982,"column_start":5,"column_end":79}},{"value":"/ for row in a.columns() {","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":486456,"byte_end":486484,"line_start":983,"line_end":983,"column_start":5,"column_end":33}},{"value":"/     /* loop body */","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":486489,"byte_end":486512,"line_start":984,"line_end":984,"column_start":5,"column_end":28}},{"value":"/ }","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":486517,"byte_end":486522,"line_start":985,"line_end":985,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":486527,"byte_end":486534,"line_start":986,"line_end":986,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3174},"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":486938,"byte_end":486948,"line_start":999,"line_end":999,"column_start":12,"column_end":22},"name":"gencolumns","qualname":"<ArrayBase<S, D>>::gencolumns","value":"pub fn gencolumns(&Self) -> Lanes<, A, D::Smaller> where S: Data","parent":null,"children":[],"decl_id":null,"docs":" Return a producer and iterable that traverses over the *generalized*\n columns of the array. For a 2D array these are the regular columns.","sig":null,"attributes":[{"value":"/ Return a producer and iterable that traverses over the *generalized*","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":486674,"byte_end":486746,"line_start":994,"line_end":994,"column_start":5,"column_end":77}},{"value":"/ columns of the array. For a 2D array these are the regular columns.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":486751,"byte_end":486822,"line_start":995,"line_end":995,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":486827,"byte_end":486830,"line_start":996,"line_end":996,"column_start":5,"column_end":8}},{"value":"/ Renamed to `.columns()`","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":486835,"byte_end":486862,"line_start":997,"line_end":997,"column_start":5,"column_end":32}},{"value":"deprecated(note = \"Renamed to .columns()\", since = \"0.15.0\")","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":486867,"byte_end":486926,"line_start":998,"line_end":998,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":3175},"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":487276,"byte_end":487287,"line_start":1010,"line_end":1010,"column_start":12,"column_end":23},"name":"columns_mut","qualname":"<ArrayBase<S, D>>::columns_mut","value":"pub fn columns_mut(&mut Self) -> LanesMut<, A, D::Smaller> where S: DataMut","parent":null,"children":[],"decl_id":null,"docs":" Return a producer and iterable that traverses over the *generalized*\n columns of the array and yields mutable array views.","sig":null,"attributes":[{"value":"/ Return a producer and iterable that traverses over the *generalized*","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":487051,"byte_end":487123,"line_start":1006,"line_end":1006,"column_start":5,"column_end":77}},{"value":"/ columns of the array and yields mutable array views.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":487128,"byte_end":487184,"line_start":1007,"line_end":1007,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":487189,"byte_end":487192,"line_start":1008,"line_end":1008,"column_start":5,"column_end":8}},{"value":"/ Iterator element is `ArrayView1<A>` (1D read-write array view).","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":487197,"byte_end":487264,"line_start":1009,"line_end":1009,"column_start":5,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":3176},"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":487682,"byte_end":487696,"line_start":1022,"line_end":1022,"column_start":12,"column_end":26},"name":"gencolumns_mut","qualname":"<ArrayBase<S, D>>::gencolumns_mut","value":"pub fn gencolumns_mut(&mut Self) -> LanesMut<, A, D::Smaller> where S: DataMut","parent":null,"children":[],"decl_id":null,"docs":" Return a producer and iterable that traverses over the *generalized*\n columns of the array and yields mutable array views.","sig":null,"attributes":[{"value":"/ Return a producer and iterable that traverses over the *generalized*","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":487425,"byte_end":487497,"line_start":1017,"line_end":1017,"column_start":5,"column_end":77}},{"value":"/ columns of the array and yields mutable array views.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":487502,"byte_end":487558,"line_start":1018,"line_end":1018,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":487563,"byte_end":487566,"line_start":1019,"line_end":1019,"column_start":5,"column_end":8}},{"value":"/ Renamed to `.columns_mut()`","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":487571,"byte_end":487602,"line_start":1020,"line_end":1020,"column_start":5,"column_end":36}},{"value":"deprecated(note = \"Renamed to .columns_mut()\", since = \"0.15.0\")","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":487607,"byte_end":487670,"line_start":1021,"line_end":1021,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":3177},"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":488945,"byte_end":488950,"line_start":1057,"line_end":1057,"column_start":12,"column_end":17},"name":"lanes","qualname":"<ArrayBase<S, D>>::lanes","value":"pub fn lanes(&Self, Axis) -> Lanes<, A, D::Smaller> where S: Data","parent":null,"children":[],"decl_id":null,"docs":" Return a producer and iterable that traverses over all 1D lanes\n pointing in the direction of `axis`.","sig":null,"attributes":[{"value":"/ Return a producer and iterable that traverses over all 1D lanes","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":487813,"byte_end":487880,"line_start":1029,"line_end":1029,"column_start":5,"column_end":72}},{"value":"/ pointing in the direction of `axis`.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":487885,"byte_end":487925,"line_start":1030,"line_end":1030,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":487930,"byte_end":487933,"line_start":1031,"line_end":1031,"column_start":5,"column_end":8}},{"value":"/ When pointing in the direction of the first axis, they are *columns*,","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":487938,"byte_end":488011,"line_start":1032,"line_end":1032,"column_start":5,"column_end":78}},{"value":"/ in the direction of the last axis *rows*; in general they are all","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":488016,"byte_end":488085,"line_start":1033,"line_end":1033,"column_start":5,"column_end":74}},{"value":"/ *lanes* and are one dimensional.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":488090,"byte_end":488126,"line_start":1034,"line_end":1034,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":488131,"byte_end":488134,"line_start":1035,"line_end":1035,"column_start":5,"column_end":8}},{"value":"/ Iterator element is `ArrayView1<A>` (1D array view).","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":488139,"byte_end":488195,"line_start":1036,"line_end":1036,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":488200,"byte_end":488203,"line_start":1037,"line_end":1037,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":488208,"byte_end":488215,"line_start":1038,"line_end":1038,"column_start":5,"column_end":12}},{"value":"/ use ndarray::{arr3, aview1, Axis};","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":488220,"byte_end":488258,"line_start":1039,"line_end":1039,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":488263,"byte_end":488266,"line_start":1040,"line_end":1040,"column_start":5,"column_end":8}},{"value":"/ let a = arr3(&[[[ 0,  1,  2],","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":488271,"byte_end":488304,"line_start":1041,"line_end":1041,"column_start":5,"column_end":38}},{"value":"/                 [ 3,  4,  5]],","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":488309,"byte_end":488343,"line_start":1042,"line_end":1042,"column_start":5,"column_end":39}},{"value":"/                [[ 6,  7,  8],","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":488348,"byte_end":488381,"line_start":1043,"line_end":1043,"column_start":5,"column_end":38}},{"value":"/                 [ 9, 10, 11]]]);","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":488386,"byte_end":488422,"line_start":1044,"line_end":1044,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":488427,"byte_end":488430,"line_start":1045,"line_end":1045,"column_start":5,"column_end":8}},{"value":"/ let inner0 = a.lanes(Axis(0));","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":488435,"byte_end":488469,"line_start":1046,"line_end":1046,"column_start":5,"column_end":39}},{"value":"/ let inner1 = a.lanes(Axis(1));","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":488474,"byte_end":488508,"line_start":1047,"line_end":1047,"column_start":5,"column_end":39}},{"value":"/ let inner2 = a.lanes(Axis(2));","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":488513,"byte_end":488547,"line_start":1048,"line_end":1048,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":488552,"byte_end":488555,"line_start":1049,"line_end":1049,"column_start":5,"column_end":8}},{"value":"/ // The first lane for axis 0 is [0, 6]","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":488560,"byte_end":488602,"line_start":1050,"line_end":1050,"column_start":5,"column_end":47}},{"value":"/ assert_eq!(inner0.into_iter().next().unwrap(), aview1(&[0, 6]));","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":488607,"byte_end":488675,"line_start":1051,"line_end":1051,"column_start":5,"column_end":73}},{"value":"/ // The first lane for axis 1 is [0, 3]","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":488680,"byte_end":488722,"line_start":1052,"line_end":1052,"column_start":5,"column_end":47}},{"value":"/ assert_eq!(inner1.into_iter().next().unwrap(), aview1(&[0, 3]));","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":488727,"byte_end":488795,"line_start":1053,"line_end":1053,"column_start":5,"column_end":73}},{"value":"/ // The first lane for axis 2 is [0, 1, 2]","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":488800,"byte_end":488845,"line_start":1054,"line_end":1054,"column_start":5,"column_end":50}},{"value":"/ assert_eq!(inner2.into_iter().next().unwrap(), aview1(&[0, 1, 2]));","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":488850,"byte_end":488921,"line_start":1055,"line_end":1055,"column_start":5,"column_end":76}},{"value":"/ ```","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":488926,"byte_end":488933,"line_start":1056,"line_end":1056,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3178},"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":489287,"byte_end":489296,"line_start":1068,"line_end":1068,"column_start":12,"column_end":21},"name":"lanes_mut","qualname":"<ArrayBase<S, D>>::lanes_mut","value":"pub fn lanes_mut(&mut Self, Axis) -> LanesMut<, A, D::Smaller> where\nS: DataMut","parent":null,"children":[],"decl_id":null,"docs":" Return a producer and iterable that traverses over all 1D lanes\n pointing in the direction of `axis`.","sig":null,"attributes":[{"value":"/ Return a producer and iterable that traverses over all 1D lanes","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":489080,"byte_end":489147,"line_start":1064,"line_end":1064,"column_start":5,"column_end":72}},{"value":"/ pointing in the direction of `axis`.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":489152,"byte_end":489192,"line_start":1065,"line_end":1065,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":489197,"byte_end":489200,"line_start":1066,"line_end":1066,"column_start":5,"column_end":8}},{"value":"/ Iterator element is `ArrayViewMut1<A>` (1D read-write array view).","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":489205,"byte_end":489275,"line_start":1067,"line_end":1067,"column_start":5,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":3179},"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":489727,"byte_end":489737,"line_start":1082,"line_end":1082,"column_start":12,"column_end":22},"name":"outer_iter","qualname":"<ArrayBase<S, D>>::outer_iter","value":"pub fn outer_iter(&Self) -> AxisIter<, A, D::Smaller> where S: Data,\nD: RemoveAxis","parent":null,"children":[],"decl_id":null,"docs":" Return an iterator that traverses over the outermost dimension\n and yields each subview.","sig":null,"attributes":[{"value":"/ Return an iterator that traverses over the outermost dimension","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":489443,"byte_end":489509,"line_start":1075,"line_end":1075,"column_start":5,"column_end":71}},{"value":"/ and yields each subview.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":489514,"byte_end":489542,"line_start":1076,"line_end":1076,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":489547,"byte_end":489550,"line_start":1077,"line_end":1077,"column_start":5,"column_end":8}},{"value":"/ This is equivalent to `.axis_iter(Axis(0))`.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":489555,"byte_end":489603,"line_start":1078,"line_end":1078,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":489608,"byte_end":489611,"line_start":1079,"line_end":1079,"column_start":5,"column_end":8}},{"value":"/ Iterator element is `ArrayView<A, D::Smaller>` (read-only array view).","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":489616,"byte_end":489690,"line_start":1080,"line_end":1080,"column_start":5,"column_end":79}},{"value":"allow(deprecated)","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":489695,"byte_end":489715,"line_start":1081,"line_end":1081,"column_start":5,"column_end":25}}]},{"kind":"Method","id":{"krate":0,"index":3180},"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":490173,"byte_end":490187,"line_start":1097,"line_end":1097,"column_start":12,"column_end":26},"name":"outer_iter_mut","qualname":"<ArrayBase<S, D>>::outer_iter_mut","value":"pub fn outer_iter_mut(&mut Self) -> AxisIterMut<, A, D::Smaller> where\nS: DataMut, D: RemoveAxis","parent":null,"children":[],"decl_id":null,"docs":" Return an iterator that traverses over the outermost dimension\n and yields each subview.","sig":null,"attributes":[{"value":"/ Return an iterator that traverses over the outermost dimension","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":489881,"byte_end":489947,"line_start":1090,"line_end":1090,"column_start":5,"column_end":71}},{"value":"/ and yields each subview.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":489952,"byte_end":489980,"line_start":1091,"line_end":1091,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":489985,"byte_end":489988,"line_start":1092,"line_end":1092,"column_start":5,"column_end":8}},{"value":"/ This is equivalent to `.axis_iter_mut(Axis(0))`.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":489993,"byte_end":490045,"line_start":1093,"line_end":1093,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":490050,"byte_end":490053,"line_start":1094,"line_end":1094,"column_start":5,"column_end":8}},{"value":"/ Iterator element is `ArrayViewMut<A, D::Smaller>` (read-write array view).","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":490058,"byte_end":490136,"line_start":1095,"line_end":1095,"column_start":5,"column_end":83}},{"value":"allow(deprecated)","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":490141,"byte_end":490161,"line_start":1096,"line_end":1096,"column_start":5,"column_end":25}}]},{"kind":"Method","id":{"krate":0,"index":3181},"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":490976,"byte_end":490985,"line_start":1120,"line_end":1120,"column_start":12,"column_end":21},"name":"axis_iter","qualname":"<ArrayBase<S, D>>::axis_iter","value":"pub fn axis_iter(&Self, Axis) -> AxisIter<, A, D::Smaller> where S: Data,\nD: RemoveAxis","parent":null,"children":[],"decl_id":null,"docs":" Return an iterator that traverses over `axis`\n and yields each subview along it.","sig":null,"attributes":[{"value":"/ Return an iterator that traverses over `axis`","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":490345,"byte_end":490394,"line_start":1105,"line_end":1105,"column_start":5,"column_end":54}},{"value":"/ and yields each subview along it.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":490399,"byte_end":490436,"line_start":1106,"line_end":1106,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":490441,"byte_end":490444,"line_start":1107,"line_end":1107,"column_start":5,"column_end":8}},{"value":"/ For example, in a 3 × 4 × 5 array, with `axis` equal to `Axis(2)`,","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":490449,"byte_end":490521,"line_start":1108,"line_end":1108,"column_start":5,"column_end":75}},{"value":"/ the iterator element","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":490526,"byte_end":490550,"line_start":1109,"line_end":1109,"column_start":5,"column_end":29}},{"value":"/ is a 3 × 4 subview (and there are 5 in total), as shown","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":490555,"byte_end":490615,"line_start":1110,"line_end":1110,"column_start":5,"column_end":64}},{"value":"/ in the picture below.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":490620,"byte_end":490645,"line_start":1111,"line_end":1111,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":490650,"byte_end":490653,"line_start":1112,"line_end":1112,"column_start":5,"column_end":8}},{"value":"/ Iterator element is `ArrayView<A, D::Smaller>` (read-only array view).","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":490658,"byte_end":490732,"line_start":1113,"line_end":1113,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":490737,"byte_end":490740,"line_start":1114,"line_end":1114,"column_start":5,"column_end":8}},{"value":"/ See [*Subviews*](#subviews) for full documentation.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":490745,"byte_end":490800,"line_start":1115,"line_end":1115,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":490805,"byte_end":490808,"line_start":1116,"line_end":1116,"column_start":5,"column_end":8}},{"value":"/ **Panics** if `axis` is out of bounds.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":490813,"byte_end":490855,"line_start":1117,"line_end":1117,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":490860,"byte_end":490863,"line_start":1118,"line_end":1118,"column_start":5,"column_end":8}},{"value":"/ <img src=\"https://rust-ndarray.github.io/ndarray/images/axis_iter_3_4_5.svg\" height=\"250px\">","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":490868,"byte_end":490964,"line_start":1119,"line_end":1119,"column_start":5,"column_end":101}}]},{"kind":"Method","id":{"krate":0,"index":3182},"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":491409,"byte_end":491422,"line_start":1135,"line_end":1135,"column_start":12,"column_end":25},"name":"axis_iter_mut","qualname":"<ArrayBase<S, D>>::axis_iter_mut","value":"pub fn axis_iter_mut(&mut Self, Axis) -> AxisIterMut<, A, D::Smaller> where\nS: DataMut, D: RemoveAxis","parent":null,"children":[],"decl_id":null,"docs":" Return an iterator that traverses over `axis`\n and yields each mutable subview along it.","sig":null,"attributes":[{"value":"/ Return an iterator that traverses over `axis`","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":491144,"byte_end":491193,"line_start":1128,"line_end":1128,"column_start":5,"column_end":54}},{"value":"/ and yields each mutable subview along it.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":491198,"byte_end":491243,"line_start":1129,"line_end":1129,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":491248,"byte_end":491251,"line_start":1130,"line_end":1130,"column_start":5,"column_end":8}},{"value":"/ Iterator element is `ArrayViewMut<A, D::Smaller>`","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":491256,"byte_end":491309,"line_start":1131,"line_end":1131,"column_start":5,"column_end":58}},{"value":"/ (read-write array view).","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":491314,"byte_end":491342,"line_start":1132,"line_end":1132,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":491347,"byte_end":491350,"line_start":1133,"line_end":1133,"column_start":5,"column_end":8}},{"value":"/ **Panics** if `axis` is out of bounds.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":491355,"byte_end":491397,"line_start":1134,"line_end":1134,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":3183},"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":492657,"byte_end":492673,"line_start":1170,"line_end":1170,"column_start":12,"column_end":28},"name":"axis_chunks_iter","qualname":"<ArrayBase<S, D>>::axis_chunks_iter","value":"pub fn axis_chunks_iter(&Self, Axis, usize) -> AxisChunksIter<, A, D> where\nS: Data","parent":null,"children":[],"decl_id":null,"docs":" Return an iterator that traverses over `axis` by chunks of `size`,\n yielding non-overlapping views along that axis.","sig":null,"attributes":[{"value":"/ Return an iterator that traverses over `axis` by chunks of `size`,","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":491598,"byte_end":491668,"line_start":1143,"line_end":1143,"column_start":5,"column_end":75}},{"value":"/ yielding non-overlapping views along that axis.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":491673,"byte_end":491724,"line_start":1144,"line_end":1144,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":491729,"byte_end":491732,"line_start":1145,"line_end":1145,"column_start":5,"column_end":8}},{"value":"/ Iterator element is `ArrayView<A, D>`","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":491737,"byte_end":491778,"line_start":1146,"line_end":1146,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":491783,"byte_end":491786,"line_start":1147,"line_end":1147,"column_start":5,"column_end":8}},{"value":"/ The last view may have less elements if `size` does not divide","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":491791,"byte_end":491857,"line_start":1148,"line_end":1148,"column_start":5,"column_end":71}},{"value":"/ the axis' dimension.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":491862,"byte_end":491886,"line_start":1149,"line_end":1149,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":491891,"byte_end":491894,"line_start":1150,"line_end":1150,"column_start":5,"column_end":8}},{"value":"/ **Panics** if `axis` is out of bounds or if `size` is zero.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":491899,"byte_end":491962,"line_start":1151,"line_end":1151,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":491967,"byte_end":491970,"line_start":1152,"line_end":1152,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":491975,"byte_end":491982,"line_start":1153,"line_end":1153,"column_start":5,"column_end":12}},{"value":"/ use ndarray::Array;","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":491987,"byte_end":492010,"line_start":1154,"line_end":1154,"column_start":5,"column_end":28}},{"value":"/ use ndarray::{arr3, Axis};","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":492015,"byte_end":492045,"line_start":1155,"line_end":1155,"column_start":5,"column_end":35}},{"value":"/ use std::iter::FromIterator;","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":492050,"byte_end":492082,"line_start":1156,"line_end":1156,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":492087,"byte_end":492090,"line_start":1157,"line_end":1157,"column_start":5,"column_end":8}},{"value":"/ let a = Array::from_iter(0..28).into_shape((2, 7, 2)).unwrap();","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":492095,"byte_end":492162,"line_start":1158,"line_end":1158,"column_start":5,"column_end":72}},{"value":"/ let mut iter = a.axis_chunks_iter(Axis(1), 2);","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":492167,"byte_end":492217,"line_start":1159,"line_end":1159,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":492222,"byte_end":492225,"line_start":1160,"line_end":1160,"column_start":5,"column_end":8}},{"value":"/ // first iteration yields a 2 × 2 × 2 view","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":492230,"byte_end":492278,"line_start":1161,"line_end":1161,"column_start":5,"column_end":51}},{"value":"/ assert_eq!(iter.next().unwrap(),","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":492283,"byte_end":492319,"line_start":1162,"line_end":1162,"column_start":5,"column_end":41}},{"value":"/            arr3(&[[[ 0,  1], [ 2, 3]],","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":492324,"byte_end":492366,"line_start":1163,"line_end":1163,"column_start":5,"column_end":47}},{"value":"/                   [[14, 15], [16, 17]]]));","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":492371,"byte_end":492417,"line_start":1164,"line_end":1164,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":492422,"byte_end":492425,"line_start":1165,"line_end":1165,"column_start":5,"column_end":8}},{"value":"/ // however the last element is a 2 × 1 × 2 view since 7 % 2 == 1","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":492430,"byte_end":492500,"line_start":1166,"line_end":1166,"column_start":5,"column_end":73}},{"value":"/ assert_eq!(iter.next_back().unwrap(), arr3(&[[[12, 13]],","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":492505,"byte_end":492565,"line_start":1167,"line_end":1167,"column_start":5,"column_end":65}},{"value":"/                                              [[26, 27]]]));","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":492570,"byte_end":492633,"line_start":1168,"line_end":1168,"column_start":5,"column_end":68}},{"value":"/ ```","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":492638,"byte_end":492645,"line_start":1169,"line_end":1169,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3184},"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":493113,"byte_end":493133,"line_start":1183,"line_end":1183,"column_start":12,"column_end":32},"name":"axis_chunks_iter_mut","qualname":"<ArrayBase<S, D>>::axis_chunks_iter_mut","value":"pub fn axis_chunks_iter_mut(&mut Self, Axis, usize)\n-> AxisChunksIterMut<, A, D> where S: DataMut","parent":null,"children":[],"decl_id":null,"docs":" Return an iterator that traverses over `axis` by chunks of `size`,\n yielding non-overlapping read-write views along that axis.","sig":null,"attributes":[{"value":"/ Return an iterator that traverses over `axis` by chunks of `size`,","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":492831,"byte_end":492901,"line_start":1177,"line_end":1177,"column_start":5,"column_end":75}},{"value":"/ yielding non-overlapping read-write views along that axis.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":492906,"byte_end":492968,"line_start":1178,"line_end":1178,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":492973,"byte_end":492976,"line_start":1179,"line_end":1179,"column_start":5,"column_end":8}},{"value":"/ Iterator element is `ArrayViewMut<A, D>`","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":492981,"byte_end":493025,"line_start":1180,"line_end":1180,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":493030,"byte_end":493033,"line_start":1181,"line_end":1181,"column_start":5,"column_end":8}},{"value":"/ **Panics** if `axis` is out of bounds or if `size` is zero.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":493038,"byte_end":493101,"line_start":1182,"line_end":1182,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":3185},"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":493816,"byte_end":493828,"line_start":1201,"line_end":1201,"column_start":12,"column_end":24},"name":"exact_chunks","qualname":"<ArrayBase<S, D>>::exact_chunks","value":"pub fn exact_chunks<E>(&Self, E) -> ExactChunks<, A, D> where\nE: IntoDimension<Dim = D>, S: Data","parent":null,"children":[],"decl_id":null,"docs":" Return an exact chunks producer (and iterable).","sig":null,"attributes":[{"value":"/ Return an exact chunks producer (and iterable).","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":493308,"byte_end":493359,"line_start":1190,"line_end":1190,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":493364,"byte_end":493367,"line_start":1191,"line_end":1191,"column_start":5,"column_end":8}},{"value":"/ It produces the whole chunks of a given n-dimensional chunk size,","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":493372,"byte_end":493441,"line_start":1192,"line_end":1192,"column_start":5,"column_end":74}},{"value":"/ skipping the remainder along each dimension that doesn't fit evenly.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":493446,"byte_end":493518,"line_start":1193,"line_end":1193,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":493523,"byte_end":493526,"line_start":1194,"line_end":1194,"column_start":5,"column_end":8}},{"value":"/ The produced element is a `ArrayView<A, D>` with exactly the dimension","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":493531,"byte_end":493605,"line_start":1195,"line_end":1195,"column_start":5,"column_end":79}},{"value":"/ `chunk_size`.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":493610,"byte_end":493627,"line_start":1196,"line_end":1196,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":493632,"byte_end":493635,"line_start":1197,"line_end":1197,"column_start":5,"column_end":8}},{"value":"/ **Panics** if any dimension of `chunk_size` is zero<br>","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":493640,"byte_end":493699,"line_start":1198,"line_end":1198,"column_start":5,"column_end":64}},{"value":"/ (**Panics** if `D` is `IxDyn` and `chunk_size` does not match the","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":493704,"byte_end":493773,"line_start":1199,"line_end":1199,"column_start":5,"column_end":74}},{"value":"/ number of array axes.)","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":493778,"byte_end":493804,"line_start":1200,"line_end":1200,"column_start":5,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":3187},"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":495182,"byte_end":495198,"line_start":1241,"line_end":1241,"column_start":12,"column_end":28},"name":"exact_chunks_mut","qualname":"<ArrayBase<S, D>>::exact_chunks_mut","value":"pub fn exact_chunks_mut<E>(&mut Self, E) -> ExactChunksMut<, A, D> where\nE: IntoDimension<Dim = D>, S: DataMut","parent":null,"children":[],"decl_id":null,"docs":" Return an exact chunks producer (and iterable).","sig":null,"attributes":[{"value":"/ Return an exact chunks producer (and iterable).","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":494008,"byte_end":494059,"line_start":1209,"line_end":1209,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":494064,"byte_end":494067,"line_start":1210,"line_end":1210,"column_start":5,"column_end":8}},{"value":"/ It produces the whole chunks of a given n-dimensional chunk size,","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":494072,"byte_end":494141,"line_start":1211,"line_end":1211,"column_start":5,"column_end":74}},{"value":"/ skipping the remainder along each dimension that doesn't fit evenly.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":494146,"byte_end":494218,"line_start":1212,"line_end":1212,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":494223,"byte_end":494226,"line_start":1213,"line_end":1213,"column_start":5,"column_end":8}},{"value":"/ The produced element is a `ArrayViewMut<A, D>` with exactly","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":494231,"byte_end":494294,"line_start":1214,"line_end":1214,"column_start":5,"column_end":68}},{"value":"/ the dimension `chunk_size`.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":494299,"byte_end":494330,"line_start":1215,"line_end":1215,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":494335,"byte_end":494338,"line_start":1216,"line_end":1216,"column_start":5,"column_end":8}},{"value":"/ **Panics** if any dimension of `chunk_size` is zero<br>","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":494343,"byte_end":494402,"line_start":1217,"line_end":1217,"column_start":5,"column_end":64}},{"value":"/ (**Panics** if `D` is `IxDyn` and `chunk_size` does not match the","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":494407,"byte_end":494476,"line_start":1218,"line_end":1218,"column_start":5,"column_end":74}},{"value":"/ number of array axes.)","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":494481,"byte_end":494507,"line_start":1219,"line_end":1219,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":494512,"byte_end":494515,"line_start":1220,"line_end":1220,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":494520,"byte_end":494531,"line_start":1221,"line_end":1221,"column_start":5,"column_end":16}},{"value":"/ use ndarray::Array;","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":494536,"byte_end":494559,"line_start":1222,"line_end":1222,"column_start":5,"column_end":28}},{"value":"/ use ndarray::arr2;","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":494564,"byte_end":494586,"line_start":1223,"line_end":1223,"column_start":5,"column_end":27}},{"value":"/ let mut a = Array::zeros((6, 7));","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":494591,"byte_end":494628,"line_start":1224,"line_end":1224,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":494633,"byte_end":494636,"line_start":1225,"line_end":1225,"column_start":5,"column_end":8}},{"value":"/ // Fill each 2 × 2 chunk with the index of where it appeared in iteration","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":494641,"byte_end":494719,"line_start":1226,"line_end":1226,"column_start":5,"column_end":82}},{"value":"/ for (i, mut chunk) in a.exact_chunks_mut((2, 2)).into_iter().enumerate() {","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":494724,"byte_end":494802,"line_start":1227,"line_end":1227,"column_start":5,"column_end":83}},{"value":"/     chunk.fill(i);","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":494807,"byte_end":494829,"line_start":1228,"line_end":1228,"column_start":5,"column_end":27}},{"value":"/ }","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":494834,"byte_end":494839,"line_start":1229,"line_end":1229,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":494844,"byte_end":494847,"line_start":1230,"line_end":1230,"column_start":5,"column_end":8}},{"value":"/ // The resulting array is:","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":494852,"byte_end":494882,"line_start":1231,"line_end":1231,"column_start":5,"column_end":35}},{"value":"/ assert_eq!(","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":494887,"byte_end":494902,"line_start":1232,"line_end":1232,"column_start":5,"column_end":20}},{"value":"/   a,","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":494907,"byte_end":494915,"line_start":1233,"line_end":1233,"column_start":5,"column_end":13}},{"value":"/   arr2(&[[0, 0, 1, 1, 2, 2, 0],","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":494920,"byte_end":494955,"line_start":1234,"line_end":1234,"column_start":5,"column_end":40}},{"value":"/          [0, 0, 1, 1, 2, 2, 0],","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":494960,"byte_end":494995,"line_start":1235,"line_end":1235,"column_start":5,"column_end":40}},{"value":"/          [3, 3, 4, 4, 5, 5, 0],","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":495000,"byte_end":495035,"line_start":1236,"line_end":1236,"column_start":5,"column_end":40}},{"value":"/          [3, 3, 4, 4, 5, 5, 0],","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":495040,"byte_end":495075,"line_start":1237,"line_end":1237,"column_start":5,"column_end":40}},{"value":"/          [6, 6, 7, 7, 8, 8, 0],","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":495080,"byte_end":495115,"line_start":1238,"line_end":1238,"column_start":5,"column_end":40}},{"value":"/          [6, 6, 7, 7, 8, 8, 0]]));","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":495120,"byte_end":495158,"line_start":1239,"line_end":1239,"column_start":5,"column_end":43}},{"value":"/ ```","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":495163,"byte_end":495170,"line_start":1240,"line_end":1240,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3189},"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":499018,"byte_end":499025,"line_start":1285,"line_end":1285,"column_start":12,"column_end":19},"name":"windows","qualname":"<ArrayBase<S, D>>::windows","value":"pub fn windows<E>(&Self, E) -> Windows<, A, D> where E: IntoDimension<Dim =\nD>, S: Data","parent":null,"children":[],"decl_id":null,"docs":" Return a window producer and iterable.","sig":null,"attributes":[{"value":"/ Return a window producer and iterable.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":495395,"byte_end":495437,"line_start":1249,"line_end":1249,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":495442,"byte_end":495445,"line_start":1250,"line_end":1250,"column_start":5,"column_end":8}},{"value":"/ The windows are all distinct overlapping views of size `window_size`","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":495450,"byte_end":495522,"line_start":1251,"line_end":1251,"column_start":5,"column_end":77}},{"value":"/ that fit into the array's shape.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":495527,"byte_end":495563,"line_start":1252,"line_end":1252,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":495568,"byte_end":495571,"line_start":1253,"line_end":1253,"column_start":5,"column_end":8}},{"value":"/ This produces no elements if the window size is larger than the actual array size along any","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":495576,"byte_end":495671,"line_start":1254,"line_end":1254,"column_start":5,"column_end":100}},{"value":"/ axis.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":495676,"byte_end":495685,"line_start":1255,"line_end":1255,"column_start":5,"column_end":14}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":495690,"byte_end":495693,"line_start":1256,"line_end":1256,"column_start":5,"column_end":8}},{"value":"/ The produced element is an `ArrayView<A, D>` with exactly the dimension","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":495698,"byte_end":495773,"line_start":1257,"line_end":1257,"column_start":5,"column_end":80}},{"value":"/ `window_size`.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":495778,"byte_end":495796,"line_start":1258,"line_end":1258,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":495801,"byte_end":495804,"line_start":1259,"line_end":1259,"column_start":5,"column_end":8}},{"value":"/ **Panics** if any dimension of `window_size` is zero.<br>","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":495809,"byte_end":495870,"line_start":1260,"line_end":1260,"column_start":5,"column_end":66}},{"value":"/ (**Panics** if `D` is `IxDyn` and `window_size` does not match the","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":495875,"byte_end":495945,"line_start":1261,"line_end":1261,"column_start":5,"column_end":75}},{"value":"/ number of array axes.)","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":495950,"byte_end":495976,"line_start":1262,"line_end":1262,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":495981,"byte_end":495984,"line_start":1263,"line_end":1263,"column_start":5,"column_end":8}},{"value":"/ This is an illustration of the 2×2 windows in a 3×4 array:","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":495989,"byte_end":496053,"line_start":1264,"line_end":1264,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":496058,"byte_end":496061,"line_start":1265,"line_end":1265,"column_start":5,"column_end":8}},{"value":"/ ```text","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":496066,"byte_end":496077,"line_start":1266,"line_end":1266,"column_start":5,"column_end":16}},{"value":"/          ──▶ Axis(1)","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":496082,"byte_end":496112,"line_start":1267,"line_end":1267,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":496117,"byte_end":496120,"line_start":1268,"line_end":1268,"column_start":5,"column_end":8}},{"value":"/      │   ┏━━━━━┳━━━━━┱─────┬─────┐   ┌─────┲━━━━━┳━━━━━┱─────┐   ┌─────┬─────┲━━━━━┳━━━━━┓","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":496125,"byte_end":496371,"line_start":1269,"line_end":1269,"column_start":5,"column_end":99}},{"value":"/      ▼   ┃ a₀₀ ┃ a₀₁ ┃     │     │   │     ┃ a₀₁ ┃ a₀₂ ┃     │   │     │     ┃ a₀₂ ┃ a₀₃ ┃","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":496376,"byte_end":496526,"line_start":1270,"line_end":1270,"column_start":5,"column_end":99}},{"value":"/ Axis(0)  ┣━━━━━╋━━━━━╉─────┼─────┤   ├─────╊━━━━━╋━━━━━╉─────┤   ├─────┼─────╊━━━━━╋━━━━━┫","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":496531,"byte_end":496775,"line_start":1271,"line_end":1271,"column_start":5,"column_end":99}},{"value":"/          ┃ a₁₀ ┃ a₁₁ ┃     │     │   │     ┃ a₁₁ ┃ a₁₂ ┃     │   │     │     ┃ a₁₂ ┃ a₁₃ ┃","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":496780,"byte_end":496928,"line_start":1272,"line_end":1272,"column_start":5,"column_end":99}},{"value":"/          ┡━━━━━╇━━━━━╃─────┼─────┤   ├─────╄━━━━━╇━━━━━╃─────┤   ├─────┼─────╄━━━━━╇━━━━━┩","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":496933,"byte_end":497177,"line_start":1273,"line_end":1273,"column_start":5,"column_end":99}},{"value":"/          │     │     │     │     │   │     │     │     │     │   │     │     │     │     │","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":497182,"byte_end":497306,"line_start":1274,"line_end":1274,"column_start":5,"column_end":99}},{"value":"/          └─────┴─────┴─────┴─────┘   └─────┴─────┴─────┴─────┘   └─────┴─────┴─────┴─────┘","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":497311,"byte_end":497555,"line_start":1275,"line_end":1275,"column_start":5,"column_end":99}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":497560,"byte_end":497563,"line_start":1276,"line_end":1276,"column_start":5,"column_end":8}},{"value":"/          ┌─────┬─────┬─────┬─────┐   ┌─────┬─────┬─────┬─────┐   ┌─────┬─────┬─────┬─────┐","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":497568,"byte_end":497812,"line_start":1277,"line_end":1277,"column_start":5,"column_end":99}},{"value":"/          │     │     │     │     │   │     │     │     │     │   │     │     │     │     │","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":497817,"byte_end":497941,"line_start":1278,"line_end":1278,"column_start":5,"column_end":99}},{"value":"/          ┢━━━━━╈━━━━━╅─────┼─────┤   ├─────╆━━━━━╈━━━━━╅─────┤   ├─────┼─────╆━━━━━╈━━━━━┪","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":497946,"byte_end":498190,"line_start":1279,"line_end":1279,"column_start":5,"column_end":99}},{"value":"/          ┃ a₁₀ ┃ a₁₁ ┃     │     │   │     ┃ a₁₁ ┃ a₁₂ ┃     │   │     │     ┃ a₁₂ ┃ a₁₃ ┃","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":498195,"byte_end":498343,"line_start":1280,"line_end":1280,"column_start":5,"column_end":99}},{"value":"/          ┣━━━━━╋━━━━━╉─────┼─────┤   ├─────╊━━━━━╋━━━━━╉─────┤   ├─────┼─────╊━━━━━╋━━━━━┫","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":498348,"byte_end":498592,"line_start":1281,"line_end":1281,"column_start":5,"column_end":99}},{"value":"/          ┃ a₂₀ ┃ a₂₁ ┃     │     │   │     ┃ a₂₁ ┃ a₂₂ ┃     │   │     │     ┃ a₂₂ ┃ a₂₃ ┃","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":498597,"byte_end":498745,"line_start":1282,"line_end":1282,"column_start":5,"column_end":99}},{"value":"/          ┗━━━━━┻━━━━━┹─────┴─────┘   └─────┺━━━━━┻━━━━━┹─────┘   └─────┴─────┺━━━━━┻━━━━━┛","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":498750,"byte_end":498994,"line_start":1283,"line_end":1283,"column_start":5,"column_end":99}},{"value":"/ ```","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":498999,"byte_end":499006,"line_start":1284,"line_end":1284,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3192},"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":499682,"byte_end":499686,"line_start":1305,"line_end":1305,"column_start":12,"column_end":16},"name":"diag","qualname":"<ArrayBase<S, D>>::diag","value":"pub fn diag(&Self) -> ArrayView1<, A> where S: Data","parent":null,"children":[],"decl_id":null,"docs":" Return a view of the diagonal elements of the array.","sig":null,"attributes":[{"value":"/ Return a view of the diagonal elements of the array.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":499470,"byte_end":499526,"line_start":1301,"line_end":1301,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":499531,"byte_end":499534,"line_start":1302,"line_end":1302,"column_start":5,"column_end":8}},{"value":"/ The diagonal is simply the sequence indexed by *(0, 0, .., 0)*,","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":499539,"byte_end":499606,"line_start":1303,"line_end":1303,"column_start":5,"column_end":72}},{"value":"/ *(1, 1, ..., 1)* etc as long as all axes have elements.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":499611,"byte_end":499670,"line_start":1304,"line_end":1304,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":3193},"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":499872,"byte_end":499880,"line_start":1313,"line_end":1313,"column_start":12,"column_end":20},"name":"diag_mut","qualname":"<ArrayBase<S, D>>::diag_mut","value":"pub fn diag_mut(&mut Self) -> ArrayViewMut1<, A> where S: DataMut","parent":null,"children":[],"decl_id":null,"docs":" Return a read-write view over the diagonal elements of the array.\n","sig":null,"attributes":[{"value":"/ Return a read-write view over the diagonal elements of the array.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":499791,"byte_end":499860,"line_start":1312,"line_end":1312,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":3194},"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":500062,"byte_end":500071,"line_start":1321,"line_end":1321,"column_start":12,"column_end":21},"name":"into_diag","qualname":"<ArrayBase<S, D>>::into_diag","value":"pub fn into_diag(Self) -> ArrayBase<S, Ix1>","parent":null,"children":[],"decl_id":null,"docs":" Return the diagonal as a one-dimensional array.\n","sig":null,"attributes":[{"value":"/ Return the diagonal as a one-dimensional array.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":499999,"byte_end":500050,"line_start":1320,"line_end":1320,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":3197},"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":501339,"byte_end":501357,"line_start":1360,"line_end":1360,"column_start":12,"column_end":30},"name":"is_standard_layout","qualname":"<ArrayBase<S, D>>::is_standard_layout","value":"pub fn is_standard_layout(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Return `true` if the array data is laid out in contiguous “C order” in\n memory (where the last index is the most rapidly varying).","sig":null,"attributes":[{"value":"/ Return `true` if the array data is laid out in contiguous “C order” in","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":501051,"byte_end":501129,"line_start":1355,"line_end":1355,"column_start":5,"column_end":79}},{"value":"/ memory (where the last index is the most rapidly varying).","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":501134,"byte_end":501196,"line_start":1356,"line_end":1356,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":501201,"byte_end":501204,"line_start":1357,"line_end":1357,"column_start":5,"column_end":8}},{"value":"/ Return `false` otherwise, i.e. the array is possibly not","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":501209,"byte_end":501269,"line_start":1358,"line_end":1358,"column_start":5,"column_end":65}},{"value":"/ contiguous in memory, it has custom strides, etc.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":501274,"byte_end":501327,"line_start":1359,"line_end":1359,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":3202},"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":503094,"byte_end":503112,"line_start":1407,"line_end":1407,"column_start":12,"column_end":30},"name":"as_standard_layout","qualname":"<ArrayBase<S, D>>::as_standard_layout","value":"pub fn as_standard_layout(&Self) -> CowArray<, A, D> where S: Data<Elem = A>,\nA: Clone","parent":null,"children":[],"decl_id":null,"docs":" Return a standard-layout array containing the data, cloning if\n necessary.","sig":null,"attributes":[{"value":"/ Return a standard-layout array containing the data, cloning if","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":502249,"byte_end":502315,"line_start":1385,"line_end":1385,"column_start":5,"column_end":71}},{"value":"/ necessary.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":502320,"byte_end":502334,"line_start":1386,"line_end":1386,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":502339,"byte_end":502342,"line_start":1387,"line_end":1387,"column_start":5,"column_end":8}},{"value":"/ If `self` is in standard layout, a COW view of the data is returned","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":502347,"byte_end":502418,"line_start":1388,"line_end":1388,"column_start":5,"column_end":76}},{"value":"/ without cloning. Otherwise, the data is cloned, and the returned array","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":502423,"byte_end":502497,"line_start":1389,"line_end":1389,"column_start":5,"column_end":79}},{"value":"/ owns the cloned data.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":502502,"byte_end":502527,"line_start":1390,"line_end":1390,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":502532,"byte_end":502535,"line_start":1391,"line_end":1391,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":502540,"byte_end":502547,"line_start":1392,"line_end":1392,"column_start":5,"column_end":12}},{"value":"/ use ndarray::Array2;","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":502552,"byte_end":502576,"line_start":1393,"line_end":1393,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":502581,"byte_end":502584,"line_start":1394,"line_end":1394,"column_start":5,"column_end":8}},{"value":"/ let standard = Array2::<f64>::zeros((3, 4));","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":502589,"byte_end":502637,"line_start":1395,"line_end":1395,"column_start":5,"column_end":53}},{"value":"/ assert!(standard.is_standard_layout());","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":502642,"byte_end":502685,"line_start":1396,"line_end":1396,"column_start":5,"column_end":48}},{"value":"/ let cow_view = standard.as_standard_layout();","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":502690,"byte_end":502739,"line_start":1397,"line_end":1397,"column_start":5,"column_end":54}},{"value":"/ assert!(cow_view.is_view());","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":502744,"byte_end":502776,"line_start":1398,"line_end":1398,"column_start":5,"column_end":37}},{"value":"/ assert!(cow_view.is_standard_layout());","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":502781,"byte_end":502824,"line_start":1399,"line_end":1399,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":502829,"byte_end":502832,"line_start":1400,"line_end":1400,"column_start":5,"column_end":8}},{"value":"/ let fortran = standard.reversed_axes();","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":502837,"byte_end":502880,"line_start":1401,"line_end":1401,"column_start":5,"column_end":48}},{"value":"/ assert!(!fortran.is_standard_layout());","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":502885,"byte_end":502928,"line_start":1402,"line_end":1402,"column_start":5,"column_end":48}},{"value":"/ let cow_owned = fortran.as_standard_layout();","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":502933,"byte_end":502982,"line_start":1403,"line_end":1403,"column_start":5,"column_end":54}},{"value":"/ assert!(cow_owned.is_owned());","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":502987,"byte_end":503021,"line_start":1404,"line_end":1404,"column_start":5,"column_end":39}},{"value":"/ assert!(cow_owned.is_standard_layout());","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":503026,"byte_end":503070,"line_start":1405,"line_end":1405,"column_start":5,"column_end":49}},{"value":"/ ```","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":503075,"byte_end":503082,"line_start":1406,"line_end":1406,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3203},"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":504135,"byte_end":504141,"line_start":1437,"line_end":1437,"column_start":12,"column_end":18},"name":"as_ptr","qualname":"<ArrayBase<S, D>>::as_ptr","value":"pub fn as_ptr(&Self) -> *const A","parent":null,"children":[],"decl_id":null,"docs":" Return a pointer to the first element in the array.","sig":null,"attributes":[{"value":"/ Return a pointer to the first element in the array.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":503742,"byte_end":503797,"line_start":1427,"line_end":1427,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":503802,"byte_end":503805,"line_start":1428,"line_end":1428,"column_start":5,"column_end":8}},{"value":"/ Raw access to array elements needs to follow the strided indexing","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":503810,"byte_end":503879,"line_start":1429,"line_end":1429,"column_start":5,"column_end":74}},{"value":"/ scheme: an element at multi-index *I* in an array with strides *S* is","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":503884,"byte_end":503957,"line_start":1430,"line_end":1430,"column_start":5,"column_end":78}},{"value":"/ located at offset","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":503962,"byte_end":503983,"line_start":1431,"line_end":1431,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":503988,"byte_end":503991,"line_start":1432,"line_end":1432,"column_start":5,"column_end":8}},{"value":"/ *Σ<sub>0 ≤ k < d</sub> I<sub>k</sub> × S<sub>k</sub>*","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":503996,"byte_end":504057,"line_start":1433,"line_end":1433,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":504062,"byte_end":504065,"line_start":1434,"line_end":1434,"column_start":5,"column_end":8}},{"value":"/ where *d* is `self.ndim()`.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":504070,"byte_end":504101,"line_start":1435,"line_end":1435,"column_start":5,"column_end":36}},{"value":"inline(always)","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":504106,"byte_end":504123,"line_start":1436,"line_end":1436,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":3204},"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":504309,"byte_end":504319,"line_start":1443,"line_end":1443,"column_start":12,"column_end":22},"name":"as_mut_ptr","qualname":"<ArrayBase<S, D>>::as_mut_ptr","value":"pub fn as_mut_ptr(&mut Self) -> *mut A where S: RawDataMut","parent":null,"children":[],"decl_id":null,"docs":" Return a mutable pointer to the first element in the array.\n","sig":null,"attributes":[{"value":"/ Return a mutable pointer to the first element in the array.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":504212,"byte_end":504275,"line_start":1441,"line_end":1441,"column_start":5,"column_end":68}},{"value":"inline(always)","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":504280,"byte_end":504297,"line_start":1442,"line_end":1442,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":3205},"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":504528,"byte_end":504536,"line_start":1453,"line_end":1453,"column_start":12,"column_end":20},"name":"raw_view","qualname":"<ArrayBase<S, D>>::raw_view","value":"pub fn raw_view(&Self) -> RawArrayView<A, D>","parent":null,"children":[],"decl_id":null,"docs":" Return a raw view of the array.\n","sig":null,"attributes":[{"value":"/ Return a raw view of the array.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":504467,"byte_end":504502,"line_start":1451,"line_end":1451,"column_start":5,"column_end":40}},{"value":"inline","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":504507,"byte_end":504516,"line_start":1452,"line_end":1452,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3206},"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":504735,"byte_end":504747,"line_start":1459,"line_end":1459,"column_start":12,"column_end":24},"name":"raw_view_mut","qualname":"<ArrayBase<S, D>>::raw_view_mut","value":"pub fn raw_view_mut(&mut Self) -> RawArrayViewMut<A, D> where S: RawDataMut","parent":null,"children":[],"decl_id":null,"docs":" Return a raw mutable view of the array.\n","sig":null,"attributes":[{"value":"/ Return a raw mutable view of the array.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":504666,"byte_end":504709,"line_start":1457,"line_end":1457,"column_start":5,"column_end":48}},{"value":"inline","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":504714,"byte_end":504723,"line_start":1458,"line_end":1458,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3208},"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":505629,"byte_end":505637,"line_start":1483,"line_end":1483,"column_start":12,"column_end":20},"name":"as_slice","qualname":"<ArrayBase<S, D>>::as_slice","value":"pub fn as_slice(&Self) -> Option<&[A]> where S: Data","parent":null,"children":[],"decl_id":null,"docs":" Return the array’s data as a slice, if it is contiguous and in standard order.\n Return `None` otherwise.","sig":null,"attributes":[{"value":"/ Return the array’s data as a slice, if it is contiguous and in standard order.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":505344,"byte_end":505428,"line_start":1478,"line_end":1478,"column_start":5,"column_end":87}},{"value":"/ Return `None` otherwise.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":505433,"byte_end":505461,"line_start":1479,"line_end":1479,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":505466,"byte_end":505469,"line_start":1480,"line_end":1480,"column_start":5,"column_end":8}},{"value":"/ If this function returns `Some(_)`, then the element order in the slice","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":505474,"byte_end":505549,"line_start":1481,"line_end":1481,"column_start":5,"column_end":80}},{"value":"/ corresponds to the logical order of the array’s elements.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":505554,"byte_end":505617,"line_start":1482,"line_end":1482,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":3209},"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":505999,"byte_end":506011,"line_start":1496,"line_end":1496,"column_start":12,"column_end":24},"name":"as_slice_mut","qualname":"<ArrayBase<S, D>>::as_slice_mut","value":"pub fn as_slice_mut(&mut Self) -> Option<&mut [A]> where S: DataMut","parent":null,"children":[],"decl_id":null,"docs":" Return the array’s data as a slice, if it is contiguous and in standard order.\n Return `None` otherwise.\n","sig":null,"attributes":[{"value":"/ Return the array’s data as a slice, if it is contiguous and in standard order.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":505870,"byte_end":505954,"line_start":1494,"line_end":1494,"column_start":5,"column_end":87}},{"value":"/ Return `None` otherwise.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":505959,"byte_end":505987,"line_start":1495,"line_end":1495,"column_start":5,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":3210},"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":506539,"byte_end":506560,"line_start":1513,"line_end":1513,"column_start":12,"column_end":33},"name":"as_slice_memory_order","qualname":"<ArrayBase<S, D>>::as_slice_memory_order","value":"pub fn as_slice_memory_order(&Self) -> Option<&[A]> where S: Data","parent":null,"children":[],"decl_id":null,"docs":" Return the array’s data as a slice if it is contiguous,\n return `None` otherwise.","sig":null,"attributes":[{"value":"/ Return the array’s data as a slice if it is contiguous,","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":506293,"byte_end":506354,"line_start":1508,"line_end":1508,"column_start":5,"column_end":64}},{"value":"/ return `None` otherwise.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":506359,"byte_end":506387,"line_start":1509,"line_end":1509,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":506392,"byte_end":506395,"line_start":1510,"line_end":1510,"column_start":5,"column_end":8}},{"value":"/ If this function returns `Some(_)`, then the elements in the slice","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":506400,"byte_end":506470,"line_start":1511,"line_end":1511,"column_start":5,"column_end":75}},{"value":"/ have whatever order the elements have in memory.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":506475,"byte_end":506527,"line_start":1512,"line_end":1512,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":3211},"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":507074,"byte_end":507099,"line_start":1532,"line_end":1532,"column_start":12,"column_end":37},"name":"as_slice_memory_order_mut","qualname":"<ArrayBase<S, D>>::as_slice_memory_order_mut","value":"pub fn as_slice_memory_order_mut(&mut Self) -> Option<&mut [A]> where\nS: DataMut","parent":null,"children":[],"decl_id":null,"docs":" Return the array’s data as a slice if it is contiguous,\n return `None` otherwise.\n","sig":null,"attributes":[{"value":"/ Return the array’s data as a slice if it is contiguous,","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":506968,"byte_end":507029,"line_start":1530,"line_end":1530,"column_start":5,"column_end":64}},{"value":"/ return `None` otherwise.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":507034,"byte_end":507062,"line_start":1531,"line_end":1531,"column_start":5,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":3213},"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":508458,"byte_end":508468,"line_start":1575,"line_end":1575,"column_start":12,"column_end":22},"name":"into_shape","qualname":"<ArrayBase<S, D>>::into_shape","value":"pub fn into_shape<E>(Self, E) -> Result<ArrayBase<S, E::Dim>, ShapeError>\nwhere E: IntoDimension","parent":null,"children":[],"decl_id":null,"docs":" Transform the array into `shape`; any shape with the same number of\n elements is accepted, but the source array or view must be in standard\n or column-major (Fortran) layout.","sig":null,"attributes":[{"value":"/ Transform the array into `shape`; any shape with the same number of","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":507862,"byte_end":507933,"line_start":1559,"line_end":1559,"column_start":5,"column_end":76}},{"value":"/ elements is accepted, but the source array or view must be in standard","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":507938,"byte_end":508012,"line_start":1560,"line_end":1560,"column_start":5,"column_end":79}},{"value":"/ or column-major (Fortran) layout.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":508017,"byte_end":508054,"line_start":1561,"line_end":1561,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":508059,"byte_end":508062,"line_start":1562,"line_end":1562,"column_start":5,"column_end":8}},{"value":"/ **Errors** if the shapes don't have the same number of elements.<br>","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":508067,"byte_end":508139,"line_start":1563,"line_end":1563,"column_start":5,"column_end":77}},{"value":"/ **Errors** if the input array is not c- or f-contiguous.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":508144,"byte_end":508204,"line_start":1564,"line_end":1564,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":508209,"byte_end":508212,"line_start":1565,"line_end":1565,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":508217,"byte_end":508224,"line_start":1566,"line_end":1566,"column_start":5,"column_end":12}},{"value":"/ use ndarray::{aview1, aview2};","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":508229,"byte_end":508263,"line_start":1567,"line_end":1567,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":508268,"byte_end":508271,"line_start":1568,"line_end":1568,"column_start":5,"column_end":8}},{"value":"/ assert!(","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":508276,"byte_end":508288,"line_start":1569,"line_end":1569,"column_start":5,"column_end":17}},{"value":"/     aview1(&[1., 2., 3., 4.]).into_shape((2, 2)).unwrap()","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":508293,"byte_end":508354,"line_start":1570,"line_end":1570,"column_start":5,"column_end":66}},{"value":"/     == aview2(&[[1., 2.],","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":508359,"byte_end":508388,"line_start":1571,"line_end":1571,"column_start":5,"column_end":34}},{"value":"/                 [3., 4.]])","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":508393,"byte_end":508423,"line_start":1572,"line_end":1572,"column_start":5,"column_end":35}},{"value":"/ );","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":508428,"byte_end":508434,"line_start":1573,"line_end":1573,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":508439,"byte_end":508446,"line_start":1574,"line_end":1574,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3215},"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":509981,"byte_end":509988,"line_start":1616,"line_end":1616,"column_start":12,"column_end":19},"name":"reshape","qualname":"<ArrayBase<S, D>>::reshape","value":"pub fn reshape<E>(&Self, E) -> ArrayBase<S, E::Dim> where S: DataShared +\nDataOwned, A: Clone, E: IntoDimension","parent":null,"children":[],"decl_id":null,"docs":" *Note: Reshape is for `ArcArray` only. Use `.into_shape()` for\n other arrays and array views.*","sig":null,"attributes":[{"value":"/ *Note: Reshape is for `ArcArray` only. Use `.into_shape()` for","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":509348,"byte_end":509414,"line_start":1596,"line_end":1596,"column_start":5,"column_end":71}},{"value":"/ other arrays and array views.*","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":509419,"byte_end":509453,"line_start":1597,"line_end":1597,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":509458,"byte_end":509461,"line_start":1598,"line_end":1598,"column_start":5,"column_end":8}},{"value":"/ Transform the array into `shape`; any shape with the same number of","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":509466,"byte_end":509537,"line_start":1599,"line_end":1599,"column_start":5,"column_end":76}},{"value":"/ elements is accepted.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":509542,"byte_end":509567,"line_start":1600,"line_end":1600,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":509572,"byte_end":509575,"line_start":1601,"line_end":1601,"column_start":5,"column_end":8}},{"value":"/ May clone all elements if needed to arrange elements in standard","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":509580,"byte_end":509648,"line_start":1602,"line_end":1602,"column_start":5,"column_end":73}},{"value":"/ layout (and break sharing).","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":509653,"byte_end":509684,"line_start":1603,"line_end":1603,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":509689,"byte_end":509692,"line_start":1604,"line_end":1604,"column_start":5,"column_end":8}},{"value":"/ **Panics** if shapes are incompatible.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":509697,"byte_end":509739,"line_start":1605,"line_end":1605,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":509744,"byte_end":509747,"line_start":1606,"line_end":1606,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":509752,"byte_end":509759,"line_start":1607,"line_end":1607,"column_start":5,"column_end":12}},{"value":"/ use ndarray::{rcarr1, rcarr2};","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":509764,"byte_end":509798,"line_start":1608,"line_end":1608,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":509803,"byte_end":509806,"line_start":1609,"line_end":1609,"column_start":5,"column_end":8}},{"value":"/ assert!(","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":509811,"byte_end":509823,"line_start":1610,"line_end":1610,"column_start":5,"column_end":17}},{"value":"/     rcarr1(&[1., 2., 3., 4.]).reshape((2, 2))","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":509828,"byte_end":509877,"line_start":1611,"line_end":1611,"column_start":5,"column_end":54}},{"value":"/     == rcarr2(&[[1., 2.],","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":509882,"byte_end":509911,"line_start":1612,"line_end":1612,"column_start":5,"column_end":34}},{"value":"/                 [3., 4.]])","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":509916,"byte_end":509946,"line_start":1613,"line_end":1613,"column_start":5,"column_end":35}},{"value":"/ );","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":509951,"byte_end":509957,"line_start":1614,"line_end":1614,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":509962,"byte_end":509969,"line_start":1615,"line_end":1615,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3217},"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":511248,"byte_end":511256,"line_start":1652,"line_end":1652,"column_start":12,"column_end":20},"name":"into_dyn","qualname":"<ArrayBase<S, D>>::into_dyn","value":"pub fn into_dyn(Self) -> ArrayBase<S, IxDyn>","parent":null,"children":[],"decl_id":null,"docs":" Convert any array or array view to a dynamic dimensional array or\n array view (respectively).","sig":null,"attributes":[{"value":"/ Convert any array or array view to a dynamic dimensional array or","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":510946,"byte_end":511015,"line_start":1643,"line_end":1643,"column_start":5,"column_end":74}},{"value":"/ array view (respectively).","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":511020,"byte_end":511050,"line_start":1644,"line_end":1644,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":511055,"byte_end":511058,"line_start":1645,"line_end":1645,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":511063,"byte_end":511070,"line_start":1646,"line_end":1646,"column_start":5,"column_end":12}},{"value":"/ use ndarray::{arr2, ArrayD};","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":511075,"byte_end":511107,"line_start":1647,"line_end":1647,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":511112,"byte_end":511115,"line_start":1648,"line_end":1648,"column_start":5,"column_end":8}},{"value":"/ let array: ArrayD<i32> = arr2(&[[1, 2],","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":511120,"byte_end":511163,"line_start":1649,"line_end":1649,"column_start":5,"column_end":48}},{"value":"/                                 [3, 4]]).into_dyn();","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":511168,"byte_end":511224,"line_start":1650,"line_end":1650,"column_start":5,"column_end":61}},{"value":"/ ```","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":511229,"byte_end":511236,"line_start":1651,"line_end":1651,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3218},"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":512166,"byte_end":512185,"line_start":1676,"line_end":1676,"column_start":12,"column_end":31},"name":"into_dimensionality","qualname":"<ArrayBase<S, D>>::into_dimensionality","value":"pub fn into_dimensionality<D2>(Self) -> Result<ArrayBase<S, D2>, ShapeError>\nwhere D2: Dimension","parent":null,"children":[],"decl_id":null,"docs":" Convert an array or array view to another with the same type, but different dimensionality\n type. Errors if the dimensions don't agree (the number of axes must match).","sig":null,"attributes":[{"value":"/ Convert an array or array view to another with the same type, but different dimensionality","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":511508,"byte_end":511602,"line_start":1660,"line_end":1660,"column_start":5,"column_end":99}},{"value":"/ type. Errors if the dimensions don't agree (the number of axes must match).","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":511607,"byte_end":511686,"line_start":1661,"line_end":1661,"column_start":5,"column_end":84}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":511691,"byte_end":511694,"line_start":1662,"line_end":1662,"column_start":5,"column_end":8}},{"value":"/ Note that conversion to a dynamic dimensional array will never fail (and is equivalent to","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":511699,"byte_end":511792,"line_start":1663,"line_end":1663,"column_start":5,"column_end":98}},{"value":"/ the `into_dyn` method).","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":511797,"byte_end":511824,"line_start":1664,"line_end":1664,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":511829,"byte_end":511832,"line_start":1665,"line_end":1665,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":511837,"byte_end":511844,"line_start":1666,"line_end":1666,"column_start":5,"column_end":12}},{"value":"/ use ndarray::{ArrayD, Ix2, IxDyn};","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":511849,"byte_end":511887,"line_start":1667,"line_end":1667,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":511892,"byte_end":511895,"line_start":1668,"line_end":1668,"column_start":5,"column_end":8}},{"value":"/ // Create a dynamic dimensionality array and convert it to an Array2","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":511900,"byte_end":511972,"line_start":1669,"line_end":1669,"column_start":5,"column_end":77}},{"value":"/ // (Ix2 dimension type).","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":511977,"byte_end":512005,"line_start":1670,"line_end":1670,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":512010,"byte_end":512013,"line_start":1671,"line_end":1671,"column_start":5,"column_end":8}},{"value":"/ let array = ArrayD::<f64>::zeros(IxDyn(&[10, 10]));","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":512018,"byte_end":512073,"line_start":1672,"line_end":1672,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":512078,"byte_end":512081,"line_start":1673,"line_end":1673,"column_start":5,"column_end":8}},{"value":"/ assert!(array.into_dimensionality::<Ix2>().is_ok());","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":512086,"byte_end":512142,"line_start":1674,"line_end":1674,"column_start":5,"column_end":61}},{"value":"/ ```","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":512147,"byte_end":512154,"line_start":1675,"line_end":1675,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3220},"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":514220,"byte_end":514229,"line_start":1728,"line_end":1728,"column_start":12,"column_end":21},"name":"broadcast","qualname":"<ArrayBase<S, D>>::broadcast","value":"pub fn broadcast<E>(&Self, E) -> Option<ArrayView<, A, E::Dim>> where\nE: IntoDimension, S: Data","parent":null,"children":[],"decl_id":null,"docs":" Act like a larger size and/or shape array by *broadcasting*\n into a larger shape, if possible.","sig":null,"attributes":[{"value":"/ Act like a larger size and/or shape array by *broadcasting*","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":513166,"byte_end":513229,"line_start":1699,"line_end":1699,"column_start":5,"column_end":68}},{"value":"/ into a larger shape, if possible.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":513234,"byte_end":513271,"line_start":1700,"line_end":1700,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":513276,"byte_end":513279,"line_start":1701,"line_end":1701,"column_start":5,"column_end":8}},{"value":"/ Return `None` if shapes can not be broadcast together.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":513284,"byte_end":513342,"line_start":1702,"line_end":1702,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":513347,"byte_end":513350,"line_start":1703,"line_end":1703,"column_start":5,"column_end":8}},{"value":"/ ***Background***","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":513355,"byte_end":513375,"line_start":1704,"line_end":1704,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":513380,"byte_end":513383,"line_start":1705,"line_end":1705,"column_start":5,"column_end":8}},{"value":"/  * Two axes are compatible if they are equal, or one of them is 1.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":513388,"byte_end":513458,"line_start":1706,"line_end":1706,"column_start":5,"column_end":75}},{"value":"/  * In this instance, only the axes of the smaller side (self) can be 1.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":513463,"byte_end":513538,"line_start":1707,"line_end":1707,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":513543,"byte_end":513546,"line_start":1708,"line_end":1708,"column_start":5,"column_end":8}},{"value":"/ Compare axes beginning with the *last* axis of each shape.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":513551,"byte_end":513613,"line_start":1709,"line_end":1709,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":513618,"byte_end":513621,"line_start":1710,"line_end":1710,"column_start":5,"column_end":8}},{"value":"/ For example (1, 2, 4) can be broadcast into (7, 6, 2, 4)","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":513626,"byte_end":513686,"line_start":1711,"line_end":1711,"column_start":5,"column_end":65}},{"value":"/ because its axes are either equal or 1 (or missing);","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":513691,"byte_end":513747,"line_start":1712,"line_end":1712,"column_start":5,"column_end":61}},{"value":"/ while (2, 2) can *not* be broadcast into (2, 4).","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":513752,"byte_end":513804,"line_start":1713,"line_end":1713,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":513809,"byte_end":513812,"line_start":1714,"line_end":1714,"column_start":5,"column_end":8}},{"value":"/ The implementation creates a view with strides set to zero for the","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":513817,"byte_end":513887,"line_start":1715,"line_end":1715,"column_start":5,"column_end":75}},{"value":"/ axes that are to be repeated.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":513892,"byte_end":513925,"line_start":1716,"line_end":1716,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":513930,"byte_end":513933,"line_start":1717,"line_end":1717,"column_start":5,"column_end":8}},{"value":"/ The broadcasting documentation for Numpy has more information.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":513938,"byte_end":514004,"line_start":1718,"line_end":1718,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":514009,"byte_end":514012,"line_start":1719,"line_end":1719,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":514017,"byte_end":514024,"line_start":1720,"line_end":1720,"column_start":5,"column_end":12}},{"value":"/ use ndarray::{aview1, aview2};","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":514029,"byte_end":514063,"line_start":1721,"line_end":1721,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":514068,"byte_end":514071,"line_start":1722,"line_end":1722,"column_start":5,"column_end":8}},{"value":"/ assert!(","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":514076,"byte_end":514088,"line_start":1723,"line_end":1723,"column_start":5,"column_end":17}},{"value":"/     aview1(&[1., 0.]).broadcast((10, 2)).unwrap()","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":514093,"byte_end":514146,"line_start":1724,"line_end":1724,"column_start":5,"column_end":58}},{"value":"/     == aview2(&[[1., 0.]; 10])","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":514151,"byte_end":514185,"line_start":1725,"line_end":1725,"column_start":5,"column_end":39}},{"value":"/ );","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":514190,"byte_end":514196,"line_start":1726,"line_end":1726,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":514201,"byte_end":514208,"line_start":1727,"line_end":1727,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3231},"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":518089,"byte_end":518098,"line_start":1831,"line_end":1831,"column_start":12,"column_end":21},"name":"swap_axes","qualname":"<ArrayBase<S, D>>::swap_axes","value":"pub fn swap_axes(&mut Self, usize, usize)","parent":null,"children":[],"decl_id":null,"docs":" Swap axes `ax` and `bx`.","sig":null,"attributes":[{"value":"/ Swap axes `ax` and `bx`.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":517676,"byte_end":517704,"line_start":1815,"line_end":1815,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":517709,"byte_end":517712,"line_start":1816,"line_end":1816,"column_start":5,"column_end":8}},{"value":"/ This does not move any data, it just adjusts the array’s dimensions","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":517717,"byte_end":517790,"line_start":1817,"line_end":1817,"column_start":5,"column_end":76}},{"value":"/ and strides.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":517795,"byte_end":517811,"line_start":1818,"line_end":1818,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":517816,"byte_end":517819,"line_start":1819,"line_end":1819,"column_start":5,"column_end":8}},{"value":"/ **Panics** if the axes are out of bounds.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":517824,"byte_end":517869,"line_start":1820,"line_end":1820,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":517874,"byte_end":517877,"line_start":1821,"line_end":1821,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":517882,"byte_end":517889,"line_start":1822,"line_end":1822,"column_start":5,"column_end":12}},{"value":"/ use ndarray::arr2;","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":517894,"byte_end":517916,"line_start":1823,"line_end":1823,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":517921,"byte_end":517924,"line_start":1824,"line_end":1824,"column_start":5,"column_end":8}},{"value":"/ let mut a = arr2(&[[1., 2., 3.]]);","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":517929,"byte_end":517967,"line_start":1825,"line_end":1825,"column_start":5,"column_end":43}},{"value":"/ a.swap_axes(0, 1);","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":517972,"byte_end":517994,"line_start":1826,"line_end":1826,"column_start":5,"column_end":27}},{"value":"/ assert!(","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":517999,"byte_end":518011,"line_start":1827,"line_end":1827,"column_start":5,"column_end":17}},{"value":"/     a == arr2(&[[1.], [2.], [3.]])","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":518016,"byte_end":518054,"line_start":1828,"line_end":1828,"column_start":5,"column_end":43}},{"value":"/ );","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":518059,"byte_end":518065,"line_start":1829,"line_end":1829,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":518070,"byte_end":518077,"line_start":1830,"line_end":1830,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3232},"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":518982,"byte_end":518995,"line_start":1858,"line_end":1858,"column_start":12,"column_end":25},"name":"permuted_axes","qualname":"<ArrayBase<S, D>>::permuted_axes","value":"pub fn permuted_axes<T>(Self, T) -> ArrayBase<S, D> where T: IntoDimension<Dim\n= D>","parent":null,"children":[],"decl_id":null,"docs":" Permute the axes.","sig":null,"attributes":[{"value":"/ Permute the axes.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":518235,"byte_end":518256,"line_start":1836,"line_end":1836,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":518261,"byte_end":518264,"line_start":1837,"line_end":1837,"column_start":5,"column_end":8}},{"value":"/ This does not move any data, it just adjusts the array’s dimensions","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":518269,"byte_end":518342,"line_start":1838,"line_end":1838,"column_start":5,"column_end":76}},{"value":"/ and strides.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":518347,"byte_end":518363,"line_start":1839,"line_end":1839,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":518368,"byte_end":518371,"line_start":1840,"line_end":1840,"column_start":5,"column_end":8}},{"value":"/ *i* in the *j*-th place in the axes sequence means `self`'s *i*-th axis","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":518376,"byte_end":518451,"line_start":1841,"line_end":1841,"column_start":5,"column_end":80}},{"value":"/ becomes `self.permuted_axes()`'s *j*-th axis","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":518456,"byte_end":518504,"line_start":1842,"line_end":1842,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":518509,"byte_end":518512,"line_start":1843,"line_end":1843,"column_start":5,"column_end":8}},{"value":"/ **Panics** if any of the axes are out of bounds, if an axis is missing,","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":518517,"byte_end":518592,"line_start":1844,"line_end":1844,"column_start":5,"column_end":80}},{"value":"/ or if an axis is repeated more than once.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":518597,"byte_end":518642,"line_start":1845,"line_end":1845,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":518647,"byte_end":518650,"line_start":1846,"line_end":1846,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":518655,"byte_end":518669,"line_start":1847,"line_end":1847,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":518674,"byte_end":518677,"line_start":1848,"line_end":1848,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":518682,"byte_end":518689,"line_start":1849,"line_end":1849,"column_start":5,"column_end":12}},{"value":"/ use ndarray::{arr2, Array3};","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":518694,"byte_end":518726,"line_start":1850,"line_end":1850,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":518731,"byte_end":518734,"line_start":1851,"line_end":1851,"column_start":5,"column_end":8}},{"value":"/ let a = arr2(&[[0, 1], [2, 3]]);","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":518739,"byte_end":518775,"line_start":1852,"line_end":1852,"column_start":5,"column_end":41}},{"value":"/ assert_eq!(a.view().permuted_axes([1, 0]), a.t());","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":518780,"byte_end":518834,"line_start":1853,"line_end":1853,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":518839,"byte_end":518842,"line_start":1854,"line_end":1854,"column_start":5,"column_end":8}},{"value":"/ let b = Array3::<u8>::zeros((1, 2, 3));","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":518847,"byte_end":518890,"line_start":1855,"line_end":1855,"column_start":5,"column_end":48}},{"value":"/ assert_eq!(b.permuted_axes([1, 0, 2]).shape(), &[2, 1, 3]);","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":518895,"byte_end":518958,"line_start":1856,"line_end":1856,"column_start":5,"column_end":68}},{"value":"/ ```","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":518963,"byte_end":518970,"line_start":1857,"line_end":1857,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3234},"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":520282,"byte_end":520295,"line_start":1892,"line_end":1892,"column_start":12,"column_end":25},"name":"reversed_axes","qualname":"<ArrayBase<S, D>>::reversed_axes","value":"pub fn reversed_axes(Self) -> ArrayBase<S, D>","parent":null,"children":[],"decl_id":null,"docs":" Transpose the array by reversing axes.","sig":null,"attributes":[{"value":"/ Transpose the array by reversing axes.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":520103,"byte_end":520145,"line_start":1888,"line_end":1888,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":520150,"byte_end":520153,"line_start":1889,"line_end":1889,"column_start":5,"column_end":8}},{"value":"/ Transposition reverses the order of the axes (dimensions and strides)","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":520158,"byte_end":520231,"line_start":1890,"line_end":1890,"column_start":5,"column_end":78}},{"value":"/ while retaining the same data.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":520236,"byte_end":520270,"line_start":1891,"line_end":1891,"column_start":5,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":3235},"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":520649,"byte_end":520650,"line_start":1903,"line_end":1903,"column_start":12,"column_end":13},"name":"t","qualname":"<ArrayBase<S, D>>::t","value":"pub fn t(&Self) -> ArrayView<, A, D> where S: Data","parent":null,"children":[],"decl_id":null,"docs":" Return a transposed view of the array.","sig":null,"attributes":[{"value":"/ Return a transposed view of the array.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":520435,"byte_end":520477,"line_start":1898,"line_end":1898,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":520482,"byte_end":520485,"line_start":1899,"line_end":1899,"column_start":5,"column_end":8}},{"value":"/ This is a shorthand for `self.view().reversed_axes()`.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":520490,"byte_end":520548,"line_start":1900,"line_end":1900,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":520553,"byte_end":520556,"line_start":1901,"line_end":1901,"column_start":5,"column_end":8}},{"value":"/ See also the more general methods `.reversed_axes()` and `.swap_axes()`.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":520561,"byte_end":520637,"line_start":1902,"line_end":1902,"column_start":5,"column_end":81}}]},{"kind":"Method","id":{"krate":0,"index":3236},"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":520836,"byte_end":520840,"line_start":1911,"line_end":1911,"column_start":12,"column_end":16},"name":"axes","qualname":"<ArrayBase<S, D>>::axes","value":"pub fn axes(&Self) -> Axes<, D>","parent":null,"children":[],"decl_id":null,"docs":" Return an iterator over the length and stride of each axis.\n","sig":null,"attributes":[{"value":"/ Return an iterator over the length and stride of each axis.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":520761,"byte_end":520824,"line_start":1910,"line_end":1910,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":3237},"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":521212,"byte_end":521227,"line_start":1924,"line_end":1924,"column_start":12,"column_end":27},"name":"max_stride_axis","qualname":"<ArrayBase<S, D>>::max_stride_axis","value":"pub fn max_stride_axis(&Self) -> Axis","parent":null,"children":[],"decl_id":null,"docs":" Return the axis with the greatest stride (by absolute value),\n preferring axes with len > 1.\n","sig":null,"attributes":[{"value":"/ Return the axis with the greatest stride (by absolute value),","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":521097,"byte_end":521162,"line_start":1922,"line_end":1922,"column_start":5,"column_end":70}},{"value":"/ preferring axes with len > 1.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":521167,"byte_end":521200,"line_start":1923,"line_end":1923,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":3238},"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":521408,"byte_end":521419,"line_start":1931,"line_end":1931,"column_start":12,"column_end":23},"name":"invert_axis","qualname":"<ArrayBase<S, D>>::invert_axis","value":"pub fn invert_axis(&mut Self, Axis)","parent":null,"children":[],"decl_id":null,"docs":" Reverse the stride of `axis`.","sig":null,"attributes":[{"value":"/ Reverse the stride of `axis`.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":521304,"byte_end":521337,"line_start":1928,"line_end":1928,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":521342,"byte_end":521345,"line_start":1929,"line_end":1929,"column_start":5,"column_end":8}},{"value":"/ ***Panics*** if the axis is out of bounds.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":521350,"byte_end":521396,"line_start":1930,"line_end":1930,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":3239},"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":523209,"byte_end":523219,"line_start":1977,"line_end":1977,"column_start":12,"column_end":22},"name":"merge_axes","qualname":"<ArrayBase<S, D>>::merge_axes","value":"pub fn merge_axes(&mut Self, Axis, Axis) -> bool","parent":null,"children":[],"decl_id":null,"docs":" If possible, merge in the axis `take` to `into`.","sig":null,"attributes":[{"value":"/ If possible, merge in the axis `take` to `into`.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":521742,"byte_end":521794,"line_start":1942,"line_end":1942,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":521799,"byte_end":521802,"line_start":1943,"line_end":1943,"column_start":5,"column_end":8}},{"value":"/ Returns `true` iff the axes are now merged.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":521807,"byte_end":521854,"line_start":1944,"line_end":1944,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":521859,"byte_end":521862,"line_start":1945,"line_end":1945,"column_start":5,"column_end":8}},{"value":"/ This method merges the axes if movement along the two original axes","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":521867,"byte_end":521938,"line_start":1946,"line_end":1946,"column_start":5,"column_end":76}},{"value":"/ (moving fastest along the `into` axis) can be equivalently represented","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":521943,"byte_end":522017,"line_start":1947,"line_end":1947,"column_start":5,"column_end":79}},{"value":"/ as movement along one (merged) axis. Merging the axes preserves this","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":522022,"byte_end":522094,"line_start":1948,"line_end":1948,"column_start":5,"column_end":77}},{"value":"/ order in the merged axis. If `take` and `into` are the same axis, then","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":522099,"byte_end":522173,"line_start":1949,"line_end":1949,"column_start":5,"column_end":79}},{"value":"/ the axis is \"merged\" if its length is ≤ 1.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":522178,"byte_end":522226,"line_start":1950,"line_end":1950,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":522231,"byte_end":522234,"line_start":1951,"line_end":1951,"column_start":5,"column_end":8}},{"value":"/ If the return value is `true`, then the following hold:","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":522239,"byte_end":522298,"line_start":1952,"line_end":1952,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":522303,"byte_end":522306,"line_start":1953,"line_end":1953,"column_start":5,"column_end":8}},{"value":"/ * The new length of the `into` axis is the product of the original","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":522311,"byte_end":522381,"line_start":1954,"line_end":1954,"column_start":5,"column_end":75}},{"value":"/   lengths of the two axes.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":522386,"byte_end":522416,"line_start":1955,"line_end":1955,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":522421,"byte_end":522424,"line_start":1956,"line_end":1956,"column_start":5,"column_end":8}},{"value":"/ * The new length of the `take` axis is 0 if the product of the original","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":522429,"byte_end":522504,"line_start":1957,"line_end":1957,"column_start":5,"column_end":80}},{"value":"/   lengths of the two axes is 0, and 1 otherwise.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":522509,"byte_end":522561,"line_start":1958,"line_end":1958,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":522566,"byte_end":522569,"line_start":1959,"line_end":1959,"column_start":5,"column_end":8}},{"value":"/ If the return value is `false`, then merging is not possible, and the","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":522574,"byte_end":522647,"line_start":1960,"line_end":1960,"column_start":5,"column_end":78}},{"value":"/ original shape and strides have been preserved.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":522652,"byte_end":522703,"line_start":1961,"line_end":1961,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":522708,"byte_end":522711,"line_start":1962,"line_end":1962,"column_start":5,"column_end":8}},{"value":"/ Note that the ordering constraint means that if it's possible to merge","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":522716,"byte_end":522790,"line_start":1963,"line_end":1963,"column_start":5,"column_end":79}},{"value":"/ `take` into `into`, it's usually not possible to merge `into` into","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":522795,"byte_end":522865,"line_start":1964,"line_end":1964,"column_start":5,"column_end":75}},{"value":"/ `take`, and vice versa.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":522870,"byte_end":522897,"line_start":1965,"line_end":1965,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":522902,"byte_end":522905,"line_start":1966,"line_end":1966,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":522910,"byte_end":522917,"line_start":1967,"line_end":1967,"column_start":5,"column_end":12}},{"value":"/ use ndarray::Array3;","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":522922,"byte_end":522946,"line_start":1968,"line_end":1968,"column_start":5,"column_end":29}},{"value":"/ use ndarray::Axis;","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":522951,"byte_end":522973,"line_start":1969,"line_end":1969,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":522978,"byte_end":522981,"line_start":1970,"line_end":1970,"column_start":5,"column_end":8}},{"value":"/ let mut a = Array3::<f64>::zeros((2, 3, 4));","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":522986,"byte_end":523034,"line_start":1971,"line_end":1971,"column_start":5,"column_end":53}},{"value":"/ assert!(a.merge_axes(Axis(1), Axis(2)));","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":523039,"byte_end":523083,"line_start":1972,"line_end":1972,"column_start":5,"column_end":49}},{"value":"/ assert_eq!(a.shape(), &[2, 1, 12]);","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":523088,"byte_end":523127,"line_start":1973,"line_end":1973,"column_start":5,"column_end":44}},{"value":"/ ```","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":523132,"byte_end":523139,"line_start":1974,"line_end":1974,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":523144,"byte_end":523147,"line_start":1975,"line_end":1975,"column_start":5,"column_end":8}},{"value":"/ ***Panics*** if an axis is out of bounds.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":523152,"byte_end":523197,"line_start":1976,"line_end":1976,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":3240},"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":524097,"byte_end":524108,"line_start":2002,"line_end":2002,"column_start":12,"column_end":23},"name":"insert_axis","qualname":"<ArrayBase<S, D>>::insert_axis","value":"pub fn insert_axis(Self, Axis) -> ArrayBase<S, D::Larger>","parent":null,"children":[],"decl_id":null,"docs":" Insert new array axis at `axis` and return the result.","sig":null,"attributes":[{"value":"/ Insert new array axis at `axis` and return the result.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":523341,"byte_end":523399,"line_start":1981,"line_end":1981,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":523404,"byte_end":523407,"line_start":1982,"line_end":1982,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":523412,"byte_end":523419,"line_start":1983,"line_end":1983,"column_start":5,"column_end":12}},{"value":"/ use ndarray::{Array3, Axis, arr1, arr2};","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":523424,"byte_end":523468,"line_start":1984,"line_end":1984,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":523473,"byte_end":523476,"line_start":1985,"line_end":1985,"column_start":5,"column_end":8}},{"value":"/ // Convert a 1-D array into a row vector (2-D).","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":523481,"byte_end":523532,"line_start":1986,"line_end":1986,"column_start":5,"column_end":56}},{"value":"/ let a = arr1(&[1, 2, 3]);","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":523537,"byte_end":523566,"line_start":1987,"line_end":1987,"column_start":5,"column_end":34}},{"value":"/ let row = a.insert_axis(Axis(0));","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":523571,"byte_end":523608,"line_start":1988,"line_end":1988,"column_start":5,"column_end":42}},{"value":"/ assert_eq!(row, arr2(&[[1, 2, 3]]));","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":523613,"byte_end":523653,"line_start":1989,"line_end":1989,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":523658,"byte_end":523661,"line_start":1990,"line_end":1990,"column_start":5,"column_end":8}},{"value":"/ // Convert a 1-D array into a column vector (2-D).","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":523666,"byte_end":523720,"line_start":1991,"line_end":1991,"column_start":5,"column_end":59}},{"value":"/ let b = arr1(&[1, 2, 3]);","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":523725,"byte_end":523754,"line_start":1992,"line_end":1992,"column_start":5,"column_end":34}},{"value":"/ let col = b.insert_axis(Axis(1));","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":523759,"byte_end":523796,"line_start":1993,"line_end":1993,"column_start":5,"column_end":42}},{"value":"/ assert_eq!(col, arr2(&[[1], [2], [3]]));","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":523801,"byte_end":523845,"line_start":1994,"line_end":1994,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":523850,"byte_end":523853,"line_start":1995,"line_end":1995,"column_start":5,"column_end":8}},{"value":"/ // The new axis always has length 1.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":523858,"byte_end":523898,"line_start":1996,"line_end":1996,"column_start":5,"column_end":45}},{"value":"/ let b = Array3::<f64>::zeros((3, 4, 5));","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":523903,"byte_end":523947,"line_start":1997,"line_end":1997,"column_start":5,"column_end":49}},{"value":"/ assert_eq!(b.insert_axis(Axis(2)).shape(), &[3, 4, 1, 5]);","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":523952,"byte_end":524014,"line_start":1998,"line_end":1998,"column_start":5,"column_end":67}},{"value":"/ ```","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":524019,"byte_end":524026,"line_start":1999,"line_end":1999,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":524031,"byte_end":524034,"line_start":2000,"line_end":2000,"column_start":5,"column_end":8}},{"value":"/ ***Panics*** if the axis is out of bounds.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":524039,"byte_end":524085,"line_start":2001,"line_end":2001,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":3241},"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":524757,"byte_end":524768,"line_start":2018,"line_end":2018,"column_start":12,"column_end":23},"name":"remove_axis","qualname":"<ArrayBase<S, D>>::remove_axis","value":"pub fn remove_axis(Self, Axis) -> ArrayBase<S, D::Smaller> where D: RemoveAxis","parent":null,"children":[],"decl_id":null,"docs":" Remove array axis `axis` and return the result.","sig":null,"attributes":[{"value":"/ Remove array axis `axis` and return the result.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":524475,"byte_end":524526,"line_start":2012,"line_end":2012,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":524531,"byte_end":524534,"line_start":2013,"line_end":2013,"column_start":5,"column_end":8}},{"value":"/ This is equivalent to `.index_axis_move(axis, 0)` and makes most sense to use if the","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":524539,"byte_end":524627,"line_start":2014,"line_end":2014,"column_start":5,"column_end":93}},{"value":"/ axis to remove is of length 1.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":524632,"byte_end":524666,"line_start":2015,"line_end":2015,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":524671,"byte_end":524674,"line_start":2016,"line_end":2016,"column_start":5,"column_end":8}},{"value":"/ **Panics** if the axis is out of bounds or its length is zero.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":524679,"byte_end":524745,"line_start":2017,"line_end":2017,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":3243},"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":525557,"byte_end":525563,"line_start":2044,"line_end":2044,"column_start":12,"column_end":18},"name":"assign","qualname":"<ArrayBase<S, D>>::assign","value":"pub fn assign<E: Dimension, S2>(&mut Self, &ArrayBase<S2, E>) where\nS: DataMut, A: Clone, S2: Data<Elem = A>","parent":null,"children":[],"decl_id":null,"docs":" Perform an elementwise assigment to `self` from `rhs`.","sig":null,"attributes":[{"value":"/ Perform an elementwise assigment to `self` from `rhs`.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":525341,"byte_end":525399,"line_start":2039,"line_end":2039,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":525404,"byte_end":525407,"line_start":2040,"line_end":2040,"column_start":5,"column_end":8}},{"value":"/ If their shapes disagree, `rhs` is broadcast to the shape of `self`.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":525412,"byte_end":525484,"line_start":2041,"line_end":2041,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":525489,"byte_end":525492,"line_start":2042,"line_end":2042,"column_start":5,"column_end":8}},{"value":"/ **Panics** if broadcasting isn’t possible.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":525497,"byte_end":525545,"line_start":2043,"line_end":2043,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":3247},"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":526075,"byte_end":526084,"line_start":2059,"line_end":2059,"column_start":12,"column_end":21},"name":"assign_to","qualname":"<ArrayBase<S, D>>::assign_to","value":"pub fn assign_to<P>(&Self, P) where S: Data, P: IntoNdProducer<Dim = D>,\nP::Item: AssignElem<A>, A: Clone","parent":null,"children":[],"decl_id":null,"docs":" Perform an elementwise assigment of values cloned from `self` into array or producer `to`.","sig":null,"attributes":[{"value":"/ Perform an elementwise assigment of values cloned from `self` into array or producer `to`.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":525765,"byte_end":525859,"line_start":2053,"line_end":2053,"column_start":5,"column_end":99}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":525864,"byte_end":525867,"line_start":2054,"line_end":2054,"column_start":5,"column_end":8}},{"value":"/ The destination `to` can be another array or a producer of assignable elements.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":525872,"byte_end":525955,"line_start":2055,"line_end":2055,"column_start":5,"column_end":88}},{"value":"/ [`AssignElem`] determines how elements are assigned.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":525960,"byte_end":526016,"line_start":2056,"line_end":2056,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":526021,"byte_end":526024,"line_start":2057,"line_end":2057,"column_start":5,"column_end":8}},{"value":"/ **Panics** if shapes disagree.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":526029,"byte_end":526063,"line_start":2058,"line_end":2058,"column_start":5,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":3249},"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":526376,"byte_end":526380,"line_start":2071,"line_end":2071,"column_start":12,"column_end":16},"name":"fill","qualname":"<ArrayBase<S, D>>::fill","value":"pub fn fill(&mut Self, A) where S: DataMut, A: Clone","parent":null,"children":[],"decl_id":null,"docs":" Perform an elementwise assigment to `self` from element `x`.\n","sig":null,"attributes":[{"value":"/ Perform an elementwise assigment to `self` from element `x`.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":526300,"byte_end":526364,"line_start":2070,"line_end":2070,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":3267},"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":528503,"byte_end":528515,"line_start":2138,"line_end":2138,"column_start":12,"column_end":24},"name":"zip_mut_with","qualname":"<ArrayBase<S, D>>::zip_mut_with","value":"pub fn zip_mut_with<B, S2, E, F>(&mut Self, &ArrayBase<S2, E>, F) where\nS: DataMut, S2: Data<Elem = B>, E: Dimension, F: FnMut(&mut A, &B) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Traverse two arrays in unspecified order, in lock step,\n calling the closure `f` on each element pair.","sig":null,"attributes":[{"value":"/ Traverse two arrays in unspecified order, in lock step,","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":528218,"byte_end":528277,"line_start":2131,"line_end":2131,"column_start":5,"column_end":64}},{"value":"/ calling the closure `f` on each element pair.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":528282,"byte_end":528331,"line_start":2132,"line_end":2132,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":528336,"byte_end":528339,"line_start":2133,"line_end":2133,"column_start":5,"column_end":8}},{"value":"/ If their shapes disagree, `rhs` is broadcast to the shape of `self`.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":528344,"byte_end":528416,"line_start":2134,"line_end":2134,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":528421,"byte_end":528424,"line_start":2135,"line_end":2135,"column_start":5,"column_end":8}},{"value":"/ **Panics** if broadcasting isn’t possible.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":528429,"byte_end":528477,"line_start":2136,"line_end":2136,"column_start":5,"column_end":51}},{"value":"inline","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":528482,"byte_end":528491,"line_start":2137,"line_end":2137,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3272},"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":529277,"byte_end":529281,"line_start":2160,"line_end":2160,"column_start":12,"column_end":16},"name":"fold","qualname":"<ArrayBase<S, D>>::fold","value":"pub fn fold<'a, F, B>(&'a Self, B, F) -> B where F: FnMut(B, &'a A) -> B,\nA: 'a, S: Data","parent":null,"children":[],"decl_id":null,"docs":" Traverse the array elements and apply a fold,\n returning the resulting value.","sig":null,"attributes":[{"value":"/ Traverse the array elements and apply a fold,","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":529120,"byte_end":529169,"line_start":2156,"line_end":2156,"column_start":5,"column_end":54}},{"value":"/ returning the resulting value.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":529174,"byte_end":529208,"line_start":2157,"line_end":2157,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":529213,"byte_end":529216,"line_start":2158,"line_end":2158,"column_start":5,"column_end":8}},{"value":"/ Elements are visited in arbitrary order.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":529221,"byte_end":529265,"line_start":2159,"line_end":2159,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":3276},"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":530190,"byte_end":530193,"line_start":2193,"line_end":2193,"column_start":12,"column_end":15},"name":"map","qualname":"<ArrayBase<S, D>>::map","value":"pub fn map<'a, B, F>(&'a Self, F) -> Array<B, D> where F: FnMut(&'a A) -> B,\nA: 'a, S: Data","parent":null,"children":[],"decl_id":null,"docs":" Call `f` by reference on each element and create a new array\n with the new values.","sig":null,"attributes":[{"value":"/ Call `f` by reference on each element and create a new array","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":529692,"byte_end":529756,"line_start":2175,"line_end":2175,"column_start":5,"column_end":69}},{"value":"/ with the new values.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":529761,"byte_end":529785,"line_start":2176,"line_end":2176,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":529790,"byte_end":529793,"line_start":2177,"line_end":2177,"column_start":5,"column_end":8}},{"value":"/ Elements are visited in arbitrary order.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":529798,"byte_end":529842,"line_start":2178,"line_end":2178,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":529847,"byte_end":529850,"line_start":2179,"line_end":2179,"column_start":5,"column_end":8}},{"value":"/ Return an array with the same shape as `self`.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":529855,"byte_end":529905,"line_start":2180,"line_end":2180,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":529910,"byte_end":529913,"line_start":2181,"line_end":2181,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":529918,"byte_end":529925,"line_start":2182,"line_end":2182,"column_start":5,"column_end":12}},{"value":"/ use ndarray::arr2;","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":529930,"byte_end":529952,"line_start":2183,"line_end":2183,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":529957,"byte_end":529960,"line_start":2184,"line_end":2184,"column_start":5,"column_end":8}},{"value":"/ let a = arr2(&[[ 0., 1.],","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":529965,"byte_end":529994,"line_start":2185,"line_end":2185,"column_start":5,"column_end":34}},{"value":"/                [-1., 2.]]);","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":529999,"byte_end":530030,"line_start":2186,"line_end":2186,"column_start":5,"column_end":36}},{"value":"/ assert!(","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":530035,"byte_end":530047,"line_start":2187,"line_end":2187,"column_start":5,"column_end":17}},{"value":"/     a.map(|x| *x >= 1.0)","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":530052,"byte_end":530080,"line_start":2188,"line_end":2188,"column_start":5,"column_end":33}},{"value":"/     == arr2(&[[false, true],","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":530085,"byte_end":530117,"line_start":2189,"line_end":2189,"column_start":5,"column_end":37}},{"value":"/               [false, true]])","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":530122,"byte_end":530155,"line_start":2190,"line_end":2190,"column_start":5,"column_end":38}},{"value":"/ );","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":530160,"byte_end":530166,"line_start":2191,"line_end":2191,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":530171,"byte_end":530178,"line_start":2192,"line_end":2192,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3280},"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":531058,"byte_end":531065,"line_start":2219,"line_end":2219,"column_start":12,"column_end":19},"name":"map_mut","qualname":"<ArrayBase<S, D>>::map_mut","value":"pub fn map_mut<'a, B, F>(&'a mut Self, F) -> Array<B, D> where\nF: FnMut(&'a mut A) -> B, A: 'a, S: DataMut","parent":null,"children":[],"decl_id":null,"docs":" Call `f` on a mutable reference of each element and create a new array\n with the new values.","sig":null,"attributes":[{"value":"/ Call `f` on a mutable reference of each element and create a new array","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":530823,"byte_end":530897,"line_start":2213,"line_end":2213,"column_start":5,"column_end":79}},{"value":"/ with the new values.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":530902,"byte_end":530926,"line_start":2214,"line_end":2214,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":530931,"byte_end":530934,"line_start":2215,"line_end":2215,"column_start":5,"column_end":8}},{"value":"/ Elements are visited in arbitrary order.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":530939,"byte_end":530983,"line_start":2216,"line_end":2216,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":530988,"byte_end":530991,"line_start":2217,"line_end":2217,"column_start":5,"column_end":8}},{"value":"/ Return an array with the same shape as `self`.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":530996,"byte_end":531046,"line_start":2218,"line_end":2218,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":3284},"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":532202,"byte_end":532206,"line_start":2254,"line_end":2254,"column_start":12,"column_end":16},"name":"mapv","qualname":"<ArrayBase<S, D>>::mapv","value":"pub fn mapv<B, F>(&Self, F) -> Array<B, D> where F: FnMut(A) -> B, A: Clone,\nS: Data","parent":null,"children":[],"decl_id":null,"docs":" Call `f` by **v**alue on each element and create a new array\n with the new values.","sig":null,"attributes":[{"value":"/ Call `f` by **v**alue on each element and create a new array","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":531713,"byte_end":531777,"line_start":2237,"line_end":2237,"column_start":5,"column_end":69}},{"value":"/ with the new values.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":531782,"byte_end":531806,"line_start":2238,"line_end":2238,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":531811,"byte_end":531814,"line_start":2239,"line_end":2239,"column_start":5,"column_end":8}},{"value":"/ Elements are visited in arbitrary order.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":531819,"byte_end":531863,"line_start":2240,"line_end":2240,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":531868,"byte_end":531871,"line_start":2241,"line_end":2241,"column_start":5,"column_end":8}},{"value":"/ Return an array with the same shape as `self`.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":531876,"byte_end":531926,"line_start":2242,"line_end":2242,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":531931,"byte_end":531934,"line_start":2243,"line_end":2243,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":531939,"byte_end":531946,"line_start":2244,"line_end":2244,"column_start":5,"column_end":12}},{"value":"/ use ndarray::arr2;","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":531951,"byte_end":531973,"line_start":2245,"line_end":2245,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":531978,"byte_end":531981,"line_start":2246,"line_end":2246,"column_start":5,"column_end":8}},{"value":"/ let a = arr2(&[[ 0., 1.],","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":531986,"byte_end":532015,"line_start":2247,"line_end":2247,"column_start":5,"column_end":34}},{"value":"/                [-1., 2.]]);","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":532020,"byte_end":532051,"line_start":2248,"line_end":2248,"column_start":5,"column_end":36}},{"value":"/ assert!(","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":532056,"byte_end":532068,"line_start":2249,"line_end":2249,"column_start":5,"column_end":17}},{"value":"/     a.mapv(f32::abs) == arr2(&[[0., 1.],","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":532073,"byte_end":532117,"line_start":2250,"line_end":2250,"column_start":5,"column_end":49}},{"value":"/                                [1., 2.]])","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":532122,"byte_end":532167,"line_start":2251,"line_end":2251,"column_start":5,"column_end":50}},{"value":"/ );","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":532172,"byte_end":532178,"line_start":2252,"line_end":2252,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":532183,"byte_end":532190,"line_start":2253,"line_end":2253,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3288},"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":532544,"byte_end":532553,"line_start":2267,"line_end":2267,"column_start":12,"column_end":21},"name":"mapv_into","qualname":"<ArrayBase<S, D>>::mapv_into","value":"pub fn mapv_into<F>(Self, F) -> Self where S: DataMut, F: FnMut(A) -> A,\nA: Clone","parent":null,"children":[],"decl_id":null,"docs":" Call `f` by **v**alue on each element, update the array with the new values\n and return it.","sig":null,"attributes":[{"value":"/ Call `f` by **v**alue on each element, update the array with the new values","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":532373,"byte_end":532452,"line_start":2263,"line_end":2263,"column_start":5,"column_end":84}},{"value":"/ and return it.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":532457,"byte_end":532475,"line_start":2264,"line_end":2264,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":532480,"byte_end":532483,"line_start":2265,"line_end":2265,"column_start":5,"column_end":8}},{"value":"/ Elements are visited in arbitrary order.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":532488,"byte_end":532532,"line_start":2266,"line_end":2266,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":3290},"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":532866,"byte_end":532877,"line_start":2280,"line_end":2280,"column_start":12,"column_end":23},"name":"map_inplace","qualname":"<ArrayBase<S, D>>::map_inplace","value":"pub fn map_inplace<'a, F>(&'a mut Self, F) where S: DataMut, A: 'a,\nF: FnMut(&'a mut A) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Modify the array in place by calling `f` by mutable reference on each element.","sig":null,"attributes":[{"value":"/ Modify the array in place by calling `f` by mutable reference on each element.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":532715,"byte_end":532797,"line_start":2277,"line_end":2277,"column_start":5,"column_end":87}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":532802,"byte_end":532805,"line_start":2278,"line_end":2278,"column_start":5,"column_end":8}},{"value":"/ Elements are visited in arbitrary order.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":532810,"byte_end":532854,"line_start":2279,"line_end":2279,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":3293},"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":533946,"byte_end":533958,"line_start":2317,"line_end":2317,"column_start":12,"column_end":24},"name":"mapv_inplace","qualname":"<ArrayBase<S, D>>::mapv_inplace","value":"pub fn mapv_inplace<F>(&mut Self, F) where S: DataMut, F: FnMut(A) -> A,\nA: Clone","parent":null,"children":[],"decl_id":null,"docs":" Modify the array in place by calling `f` by **v**alue on each element.\n The array is updated with the new values.","sig":null,"attributes":[{"value":"/ Modify the array in place by calling `f` by **v**alue on each element.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":533320,"byte_end":533394,"line_start":2296,"line_end":2296,"column_start":5,"column_end":79}},{"value":"/ The array is updated with the new values.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":533399,"byte_end":533444,"line_start":2297,"line_end":2297,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":533449,"byte_end":533452,"line_start":2298,"line_end":2298,"column_start":5,"column_end":8}},{"value":"/ Elements are visited in arbitrary order.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":533457,"byte_end":533501,"line_start":2299,"line_end":2299,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":533506,"byte_end":533509,"line_start":2300,"line_end":2300,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":533514,"byte_end":533521,"line_start":2301,"line_end":2301,"column_start":5,"column_end":12}},{"value":"/ use approx::assert_abs_diff_eq;","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":533526,"byte_end":533561,"line_start":2302,"line_end":2302,"column_start":5,"column_end":40}},{"value":"/ use ndarray::arr2;","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":533566,"byte_end":533588,"line_start":2303,"line_end":2303,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":533593,"byte_end":533596,"line_start":2304,"line_end":2304,"column_start":5,"column_end":8}},{"value":"/ # #[cfg(feature = \"approx\")] {","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":533601,"byte_end":533635,"line_start":2305,"line_end":2305,"column_start":5,"column_end":39}},{"value":"/ let mut a = arr2(&[[ 0., 1.],","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":533640,"byte_end":533673,"line_start":2306,"line_end":2306,"column_start":5,"column_end":38}},{"value":"/                    [-1., 2.]]);","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":533678,"byte_end":533713,"line_start":2307,"line_end":2307,"column_start":5,"column_end":40}},{"value":"/ a.mapv_inplace(f32::exp);","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":533718,"byte_end":533747,"line_start":2308,"line_end":2308,"column_start":5,"column_end":34}},{"value":"/ assert_abs_diff_eq!(","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":533752,"byte_end":533776,"line_start":2309,"line_end":2309,"column_start":5,"column_end":29}},{"value":"/     a,","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":533781,"byte_end":533791,"line_start":2310,"line_end":2310,"column_start":5,"column_end":15}},{"value":"/     arr2(&[[1.00000, 2.71828],","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":533796,"byte_end":533830,"line_start":2311,"line_end":2311,"column_start":5,"column_end":39}},{"value":"/            [0.36788, 7.38906]]),","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":533835,"byte_end":533871,"line_start":2312,"line_end":2312,"column_start":5,"column_end":41}},{"value":"/     epsilon = 1e-5,","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":533876,"byte_end":533899,"line_start":2313,"line_end":2313,"column_start":5,"column_end":28}},{"value":"/ );","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":533904,"byte_end":533910,"line_start":2314,"line_end":2314,"column_start":5,"column_end":11}},{"value":"/ # }","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":533915,"byte_end":533922,"line_start":2315,"line_end":2315,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":533927,"byte_end":533934,"line_start":2316,"line_end":2316,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3296},"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":534240,"byte_end":534248,"line_start":2329,"line_end":2329,"column_start":12,"column_end":20},"name":"for_each","qualname":"<ArrayBase<S, D>>::for_each","value":"pub fn for_each<'a, F>(&'a Self, F) where F: FnMut(&'a A) -> (), A: 'a,\nS: Data","parent":null,"children":[],"decl_id":null,"docs":" Call `f` for each element in the array.","sig":null,"attributes":[{"value":"/ Call `f` for each element in the array.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":534128,"byte_end":534171,"line_start":2326,"line_end":2326,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":534176,"byte_end":534179,"line_start":2327,"line_end":2327,"column_start":5,"column_end":8}},{"value":"/ Elements are visited in arbitrary order.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":534184,"byte_end":534228,"line_start":2328,"line_end":2328,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":3300},"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":534627,"byte_end":534632,"line_start":2343,"line_end":2343,"column_start":12,"column_end":17},"name":"visit","qualname":"<ArrayBase<S, D>>::visit","value":"pub fn visit<'a, F>(&'a Self, F) where F: FnMut(&'a A) -> (), A: 'a, S: Data","parent":null,"children":[],"decl_id":null,"docs":" Visit each element in the array by calling `f` by reference\n on each element.","sig":null,"attributes":[{"value":"/ Visit each element in the array by calling `f` by reference","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":534405,"byte_end":534468,"line_start":2338,"line_end":2338,"column_start":5,"column_end":68}},{"value":"/ on each element.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":534473,"byte_end":534493,"line_start":2339,"line_end":2339,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":534498,"byte_end":534501,"line_start":2340,"line_end":2340,"column_start":5,"column_end":8}},{"value":"/ Elements are visited in arbitrary order.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":534506,"byte_end":534550,"line_start":2341,"line_end":2341,"column_start":5,"column_end":49}},{"value":"deprecated(note = \"Renamed to .for_each()\", since = \"0.15.0\")","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":534555,"byte_end":534615,"line_start":2342,"line_end":2342,"column_start":5,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":3303},"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":535035,"byte_end":535044,"line_start":2360,"line_end":2360,"column_start":12,"column_end":21},"name":"fold_axis","qualname":"<ArrayBase<S, D>>::fold_axis","value":"pub fn fold_axis<B, F>(&Self, Axis, B, F) -> Array<B, D::Smaller> where\nD: RemoveAxis, F: FnMut(&B, &A) -> B, B: Clone, S: Data","parent":null,"children":[],"decl_id":null,"docs":" Fold along an axis.","sig":null,"attributes":[{"value":"/ Fold along an axis.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":534765,"byte_end":534788,"line_start":2352,"line_end":2352,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":534793,"byte_end":534796,"line_start":2353,"line_end":2353,"column_start":5,"column_end":8}},{"value":"/ Combine the elements of each subview with the previous using the `fold`","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":534801,"byte_end":534876,"line_start":2354,"line_end":2354,"column_start":5,"column_end":80}},{"value":"/ function and initial value `init`.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":534881,"byte_end":534919,"line_start":2355,"line_end":2355,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":534924,"byte_end":534927,"line_start":2356,"line_end":2356,"column_start":5,"column_end":8}},{"value":"/ Return the result as an `Array`.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":534932,"byte_end":534968,"line_start":2357,"line_end":2357,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":534973,"byte_end":534976,"line_start":2358,"line_end":2358,"column_start":5,"column_end":8}},{"value":"/ **Panics** if `axis` is out of bounds.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":534981,"byte_end":535023,"line_start":2359,"line_end":2359,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":3307},"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":535728,"byte_end":535736,"line_start":2382,"line_end":2382,"column_start":12,"column_end":20},"name":"map_axis","qualname":"<ArrayBase<S, D>>::map_axis","value":"pub fn map_axis<'a, B, F>(&'a Self, Axis, F) -> Array<B, D::Smaller> where\nD: RemoveAxis, F: FnMut(ArrayView1) -> B, A: 'a, S: Data","parent":null,"children":[],"decl_id":null,"docs":" Reduce the values along an axis into just one value, producing a new\n array with one less dimension.","sig":null,"attributes":[{"value":"/ Reduce the values along an axis into just one value, producing a new","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":535444,"byte_end":535516,"line_start":2374,"line_end":2374,"column_start":5,"column_end":77}},{"value":"/ array with one less dimension.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":535521,"byte_end":535555,"line_start":2375,"line_end":2375,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":535560,"byte_end":535563,"line_start":2376,"line_end":2376,"column_start":5,"column_end":8}},{"value":"/ Elements are visited in arbitrary order.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":535568,"byte_end":535612,"line_start":2377,"line_end":2377,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":535617,"byte_end":535620,"line_start":2378,"line_end":2378,"column_start":5,"column_end":8}},{"value":"/ Return the result as an `Array`.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":535625,"byte_end":535661,"line_start":2379,"line_end":2379,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":535666,"byte_end":535669,"line_start":2380,"line_end":2380,"column_start":5,"column_end":8}},{"value":"/ **Panics** if `axis` is out of bounds.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":535674,"byte_end":535716,"line_start":2381,"line_end":2381,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":3313},"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":536892,"byte_end":536904,"line_start":2413,"line_end":2413,"column_start":12,"column_end":24},"name":"map_axis_mut","qualname":"<ArrayBase<S, D>>::map_axis_mut","value":"pub fn map_axis_mut<'a, B, F>(&'a mut Self, Axis, F) -> Array<B, D::Smaller>\nwhere D: RemoveAxis, F: FnMut(ArrayViewMut1) -> B, A: 'a, S: DataMut","parent":null,"children":[],"decl_id":null,"docs":" Reduce the values along an axis into just one value, producing a new\n array with one less dimension.\n 1-dimensional lanes are passed as mutable references to the reducer,\n allowing for side-effects.","sig":null,"attributes":[{"value":"/ Reduce the values along an axis into just one value, producing a new","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":536496,"byte_end":536568,"line_start":2403,"line_end":2403,"column_start":5,"column_end":77}},{"value":"/ array with one less dimension.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":536573,"byte_end":536607,"line_start":2404,"line_end":2404,"column_start":5,"column_end":39}},{"value":"/ 1-dimensional lanes are passed as mutable references to the reducer,","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":536612,"byte_end":536684,"line_start":2405,"line_end":2405,"column_start":5,"column_end":77}},{"value":"/ allowing for side-effects.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":536689,"byte_end":536719,"line_start":2406,"line_end":2406,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":536724,"byte_end":536727,"line_start":2407,"line_end":2407,"column_start":5,"column_end":8}},{"value":"/ Elements are visited in arbitrary order.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":536732,"byte_end":536776,"line_start":2408,"line_end":2408,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":536781,"byte_end":536784,"line_start":2409,"line_end":2409,"column_start":5,"column_end":8}},{"value":"/ Return the result as an `Array`.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":536789,"byte_end":536825,"line_start":2410,"line_end":2410,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":536830,"byte_end":536833,"line_start":2411,"line_end":2411,"column_start":5,"column_end":8}},{"value":"/ **Panics** if `axis` is out of bounds.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":536838,"byte_end":536880,"line_start":2412,"line_end":2412,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":3319},"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":538695,"byte_end":538718,"line_start":2466,"line_end":2466,"column_start":12,"column_end":35},"name":"accumulate_axis_inplace","qualname":"<ArrayBase<S, D>>::accumulate_axis_inplace","value":"pub fn accumulate_axis_inplace<F>(&mut Self, Axis, F) where\nF: FnMut(&A, &mut A) -> (), S: DataMut","parent":null,"children":[],"decl_id":null,"docs":" Iterates over pairs of consecutive elements along the axis.","sig":null,"attributes":[{"value":"/ Iterates over pairs of consecutive elements along the axis.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":537771,"byte_end":537834,"line_start":2438,"line_end":2438,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":537839,"byte_end":537842,"line_start":2439,"line_end":2439,"column_start":5,"column_end":8}},{"value":"/ The first argument to the closure is an element, and the second","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":537847,"byte_end":537914,"line_start":2440,"line_end":2440,"column_start":5,"column_end":72}},{"value":"/ argument is the next element along the axis. Iteration is guaranteed to","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":537919,"byte_end":537994,"line_start":2441,"line_end":2441,"column_start":5,"column_end":80}},{"value":"/ proceed in order along the specified axis, but in all other respects","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":537999,"byte_end":538071,"line_start":2442,"line_end":2442,"column_start":5,"column_end":77}},{"value":"/ the iteration order is unspecified.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":538076,"byte_end":538115,"line_start":2443,"line_end":2443,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":538120,"byte_end":538123,"line_start":2444,"line_end":2444,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":538128,"byte_end":538141,"line_start":2445,"line_end":2445,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":538146,"byte_end":538149,"line_start":2446,"line_end":2446,"column_start":5,"column_end":8}},{"value":"/ For example, this can be used to compute the cumulative sum along an","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":538154,"byte_end":538226,"line_start":2447,"line_end":2447,"column_start":5,"column_end":77}},{"value":"/ axis:","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":538231,"byte_end":538240,"line_start":2448,"line_end":2448,"column_start":5,"column_end":14}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":538245,"byte_end":538248,"line_start":2449,"line_end":2449,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":538253,"byte_end":538260,"line_start":2450,"line_end":2450,"column_start":5,"column_end":12}},{"value":"/ use ndarray::{array, Axis};","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":538265,"byte_end":538296,"line_start":2451,"line_end":2451,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":538301,"byte_end":538304,"line_start":2452,"line_end":2452,"column_start":5,"column_end":8}},{"value":"/ let mut arr = array![","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":538309,"byte_end":538334,"line_start":2453,"line_end":2453,"column_start":5,"column_end":30}},{"value":"/     [[1, 2], [3, 4], [5, 6]],","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":538339,"byte_end":538372,"line_start":2454,"line_end":2454,"column_start":5,"column_end":38}},{"value":"/     [[7, 8], [9, 10], [11, 12]],","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":538377,"byte_end":538413,"line_start":2455,"line_end":2455,"column_start":5,"column_end":41}},{"value":"/ ];","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":538418,"byte_end":538424,"line_start":2456,"line_end":2456,"column_start":5,"column_end":11}},{"value":"/ arr.accumulate_axis_inplace(Axis(1), |&prev, curr| *curr += prev);","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":538429,"byte_end":538499,"line_start":2457,"line_end":2457,"column_start":5,"column_end":75}},{"value":"/ assert_eq!(","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":538504,"byte_end":538519,"line_start":2458,"line_end":2458,"column_start":5,"column_end":20}},{"value":"/     arr,","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":538524,"byte_end":538536,"line_start":2459,"line_end":2459,"column_start":5,"column_end":17}},{"value":"/     array![","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":538541,"byte_end":538556,"line_start":2460,"line_end":2460,"column_start":5,"column_end":20}},{"value":"/         [[1, 2], [4, 6], [9, 12]],","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":538561,"byte_end":538599,"line_start":2461,"line_end":2461,"column_start":5,"column_end":43}},{"value":"/         [[7, 8], [16, 18], [27, 30]],","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":538604,"byte_end":538645,"line_start":2462,"line_end":2462,"column_start":5,"column_end":46}},{"value":"/     ],","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":538650,"byte_end":538660,"line_start":2463,"line_end":2463,"column_start":5,"column_end":15}},{"value":"/ );","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":538665,"byte_end":538671,"line_start":2464,"line_end":2464,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":538676,"byte_end":538683,"line_start":2465,"line_end":2465,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3333},"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_owned_array.rs","byte_start":540998,"byte_end":541009,"line_start":24,"line_end":24,"column_start":12,"column_end":23},"name":"into_scalar","qualname":"<Array<A, Ix0>>::into_scalar","value":"pub fn into_scalar(Self) -> A","parent":null,"children":[],"decl_id":null,"docs":" Returns the single element in the array without cloning it.","sig":null,"attributes":[{"value":"/ Returns the single element in the array without cloning it.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_owned_array.rs","byte_start":540610,"byte_end":540673,"line_start":11,"line_end":11,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_owned_array.rs","byte_start":540678,"byte_end":540681,"line_start":12,"line_end":12,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_owned_array.rs","byte_start":540686,"byte_end":540693,"line_start":13,"line_end":13,"column_start":5,"column_end":12}},{"value":"/ use ndarray::{arr0, Array0};","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_owned_array.rs","byte_start":540698,"byte_end":540730,"line_start":14,"line_end":14,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_owned_array.rs","byte_start":540735,"byte_end":540738,"line_start":15,"line_end":15,"column_start":5,"column_end":8}},{"value":"/ // `Foo` doesn't implement `Clone`.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_owned_array.rs","byte_start":540743,"byte_end":540782,"line_start":16,"line_end":16,"column_start":5,"column_end":44}},{"value":"/ #[derive(Debug, Eq, PartialEq)]","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_owned_array.rs","byte_start":540787,"byte_end":540822,"line_start":17,"line_end":17,"column_start":5,"column_end":40}},{"value":"/ struct Foo;","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_owned_array.rs","byte_start":540827,"byte_end":540842,"line_start":18,"line_end":18,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_owned_array.rs","byte_start":540847,"byte_end":540850,"line_start":19,"line_end":19,"column_start":5,"column_end":8}},{"value":"/ let array: Array0<Foo> = arr0(Foo);","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_owned_array.rs","byte_start":540855,"byte_end":540894,"line_start":20,"line_end":20,"column_start":5,"column_end":44}},{"value":"/ let scalar: Foo = array.into_scalar();","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_owned_array.rs","byte_start":540899,"byte_end":540941,"line_start":21,"line_end":21,"column_start":5,"column_end":47}},{"value":"/ assert_eq!(scalar, Foo);","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_owned_array.rs","byte_start":540946,"byte_end":540974,"line_start":22,"line_end":22,"column_start":5,"column_end":33}},{"value":"/ ```","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_owned_array.rs","byte_start":540979,"byte_end":540986,"line_start":23,"line_end":23,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3337},"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_owned_array.rs","byte_start":542320,"byte_end":542332,"line_start":58,"line_end":58,"column_start":12,"column_end":24},"name":"into_raw_vec","qualname":"<Array<A, D>>::into_raw_vec","value":"pub fn into_raw_vec(Self) -> Vec<A>","parent":null,"children":[],"decl_id":null,"docs":" Return a vector of the elements in the array, in the way they are\n stored internally.","sig":null,"attributes":[{"value":"/ Return a vector of the elements in the array, in the way they are","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_owned_array.rs","byte_start":542043,"byte_end":542112,"line_start":53,"line_end":53,"column_start":5,"column_end":74}},{"value":"/ stored internally.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_owned_array.rs","byte_start":542117,"byte_end":542139,"line_start":54,"line_end":54,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_owned_array.rs","byte_start":542144,"byte_end":542147,"line_start":55,"line_end":55,"column_start":5,"column_end":8}},{"value":"/ If the array is in standard memory layout, the logical element order","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_owned_array.rs","byte_start":542152,"byte_end":542224,"line_start":56,"line_end":56,"column_start":5,"column_end":77}},{"value":"/ of the array (`.iter()` order) and of the returned vector will be the same.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_owned_array.rs","byte_start":542229,"byte_end":542308,"line_start":57,"line_end":57,"column_start":5,"column_end":84}}]},{"kind":"Method","id":{"krate":0,"index":3346},"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_special_element_types.rs","byte_start":543702,"byte_end":543713,"line_start":37,"line_end":37,"column_start":19,"column_end":30},"name":"assume_init","qualname":"<ArrayBase<S, D>>::assume_init","value":"pub unsafe fn assume_init(Self)\n-> ArrayBase<<S as RawDataSubst<A>>::Output, D>","parent":null,"children":[],"decl_id":null,"docs":" **Promise** that the array's elements are all fully initialized, and convert\n the array from element type `MaybeUninit<A>` to `A`.","sig":null,"attributes":[{"value":"/ **Promise** that the array's elements are all fully initialized, and convert","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_special_element_types.rs","byte_start":543086,"byte_end":543166,"line_start":25,"line_end":25,"column_start":5,"column_end":85}},{"value":"/ the array from element type `MaybeUninit<A>` to `A`.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_special_element_types.rs","byte_start":543171,"byte_end":543227,"line_start":26,"line_end":26,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_special_element_types.rs","byte_start":543232,"byte_end":543235,"line_start":27,"line_end":27,"column_start":5,"column_end":8}},{"value":"/ For example, it can convert an `Array<MaybeUninit<f64>, D>` to `Array<f64, D>`.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_special_element_types.rs","byte_start":543240,"byte_end":543323,"line_start":28,"line_end":28,"column_start":5,"column_end":88}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_special_element_types.rs","byte_start":543328,"byte_end":543331,"line_start":29,"line_end":29,"column_start":5,"column_end":8}},{"value":"/ ## Safety","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_special_element_types.rs","byte_start":543336,"byte_end":543349,"line_start":30,"line_end":30,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_special_element_types.rs","byte_start":543354,"byte_end":543357,"line_start":31,"line_end":31,"column_start":5,"column_end":8}},{"value":"/ Safe to use if all the array's elements have been initialized.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_special_element_types.rs","byte_start":543362,"byte_end":543428,"line_start":32,"line_end":32,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_special_element_types.rs","byte_start":543433,"byte_end":543436,"line_start":33,"line_end":33,"column_start":5,"column_end":8}},{"value":"/ Note that for owned and shared ownership arrays, the promise must include all of the","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_special_element_types.rs","byte_start":543441,"byte_end":543529,"line_start":34,"line_end":34,"column_start":5,"column_end":93}},{"value":"/ array's storage; it is for example possible to slice these in place, but that must","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_special_element_types.rs","byte_start":543534,"byte_end":543620,"line_start":35,"line_end":35,"column_start":5,"column_end":91}},{"value":"/ only be done after all elements have been initialized.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_special_element_types.rs","byte_start":543625,"byte_end":543683,"line_start":36,"line_end":36,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":3367},"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_1d.rs","byte_start":544675,"byte_end":544681,"line_start":19,"line_end":19,"column_start":12,"column_end":18},"name":"to_vec","qualname":"<ArrayBase<S, Ix1>>::to_vec","value":"pub fn to_vec(&Self) -> Vec<A> where A: Clone, S: Data","parent":null,"children":[],"decl_id":null,"docs":" Return an vector with the elements of the one-dimensional array.\n","sig":null,"attributes":[{"value":"/ Return an vector with the elements of the one-dimensional array.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_1d.rs","byte_start":544595,"byte_end":544663,"line_start":18,"line_end":18,"column_start":5,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":3373},"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_2d.rs","byte_start":545702,"byte_end":545705,"line_start":26,"line_end":26,"column_start":12,"column_end":15},"name":"row","qualname":"<ArrayBase<S, Ix2>>::row","value":"pub fn row(&Self, Ix) -> ArrayView1<, A> where S: Data","parent":null,"children":[],"decl_id":null,"docs":" Return an array view of row `index`.","sig":null,"attributes":[{"value":"/ Return an array view of row `index`.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_2d.rs","byte_start":545436,"byte_end":545476,"line_start":17,"line_end":17,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_2d.rs","byte_start":545481,"byte_end":545484,"line_start":18,"line_end":18,"column_start":5,"column_end":8}},{"value":"/ **Panics** if `index` is out of bounds.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_2d.rs","byte_start":545489,"byte_end":545532,"line_start":19,"line_end":19,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_2d.rs","byte_start":545537,"byte_end":545540,"line_start":20,"line_end":20,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_2d.rs","byte_start":545545,"byte_end":545552,"line_start":21,"line_end":21,"column_start":5,"column_end":12}},{"value":"/ use ndarray::array;","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_2d.rs","byte_start":545557,"byte_end":545580,"line_start":22,"line_end":22,"column_start":5,"column_end":28}},{"value":"/ let array = array![[1., 2.], [3., 4.]];","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_2d.rs","byte_start":545585,"byte_end":545628,"line_start":23,"line_end":23,"column_start":5,"column_end":48}},{"value":"/ assert_eq!(array.row(0), array![1., 2.]);","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_2d.rs","byte_start":545633,"byte_end":545678,"line_start":24,"line_end":24,"column_start":5,"column_end":50}},{"value":"/ ```","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_2d.rs","byte_start":545683,"byte_end":545690,"line_start":25,"line_end":25,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3374},"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_2d.rs","byte_start":546145,"byte_end":546152,"line_start":43,"line_end":43,"column_start":12,"column_end":19},"name":"row_mut","qualname":"<ArrayBase<S, Ix2>>::row_mut","value":"pub fn row_mut(&mut Self, Ix) -> ArrayViewMut1<, A> where S: DataMut","parent":null,"children":[],"decl_id":null,"docs":" Return a mutable array view of row `index`.","sig":null,"attributes":[{"value":"/ Return a mutable array view of row `index`.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_2d.rs","byte_start":545829,"byte_end":545876,"line_start":33,"line_end":33,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_2d.rs","byte_start":545881,"byte_end":545884,"line_start":34,"line_end":34,"column_start":5,"column_end":8}},{"value":"/ **Panics** if `index` is out of bounds.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_2d.rs","byte_start":545889,"byte_end":545932,"line_start":35,"line_end":35,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_2d.rs","byte_start":545937,"byte_end":545940,"line_start":36,"line_end":36,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_2d.rs","byte_start":545945,"byte_end":545952,"line_start":37,"line_end":37,"column_start":5,"column_end":12}},{"value":"/ use ndarray::array;","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_2d.rs","byte_start":545957,"byte_end":545980,"line_start":38,"line_end":38,"column_start":5,"column_end":28}},{"value":"/ let mut array = array![[1., 2.], [3., 4.]];","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_2d.rs","byte_start":545985,"byte_end":546032,"line_start":39,"line_end":39,"column_start":5,"column_end":52}},{"value":"/ array.row_mut(0)[1] = 5.;","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_2d.rs","byte_start":546037,"byte_end":546066,"line_start":40,"line_end":40,"column_start":5,"column_end":34}},{"value":"/ assert_eq!(array, array![[1., 5.], [3., 4.]]);","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_2d.rs","byte_start":546071,"byte_end":546121,"line_start":41,"line_end":41,"column_start":5,"column_end":55}},{"value":"/ ```","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_2d.rs","byte_start":546126,"byte_end":546133,"line_start":42,"line_end":42,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3375},"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_2d.rs","byte_start":546534,"byte_end":546539,"line_start":57,"line_end":57,"column_start":12,"column_end":17},"name":"nrows","qualname":"<ArrayBase<S, Ix2>>::nrows","value":"pub fn nrows(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Return the number of rows (length of `Axis(0)`) in the two-dimensional array.","sig":null,"attributes":[{"value":"/ Return the number of rows (length of `Axis(0)`) in the two-dimensional array.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_2d.rs","byte_start":546290,"byte_end":546371,"line_start":50,"line_end":50,"column_start":5,"column_end":86}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_2d.rs","byte_start":546376,"byte_end":546379,"line_start":51,"line_end":51,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_2d.rs","byte_start":546384,"byte_end":546391,"line_start":52,"line_end":52,"column_start":5,"column_end":12}},{"value":"/ use ndarray::array;","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_2d.rs","byte_start":546396,"byte_end":546419,"line_start":53,"line_end":53,"column_start":5,"column_end":28}},{"value":"/ let array = array![[1., 2.], [3., 4.]];","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_2d.rs","byte_start":546424,"byte_end":546467,"line_start":54,"line_end":54,"column_start":5,"column_end":48}},{"value":"/ assert_eq!(array.nrows(), 2usize);","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_2d.rs","byte_start":546472,"byte_end":546510,"line_start":55,"line_end":55,"column_start":5,"column_end":43}},{"value":"/ ```","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_2d.rs","byte_start":546515,"byte_end":546522,"line_start":56,"line_end":56,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3376},"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_2d.rs","byte_start":546870,"byte_end":546876,"line_start":70,"line_end":70,"column_start":12,"column_end":18},"name":"column","qualname":"<ArrayBase<S, Ix2>>::column","value":"pub fn column(&Self, Ix) -> ArrayView1<, A> where S: Data","parent":null,"children":[],"decl_id":null,"docs":" Return an array view of column `index`.","sig":null,"attributes":[{"value":"/ Return an array view of column `index`.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_2d.rs","byte_start":546598,"byte_end":546641,"line_start":61,"line_end":61,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_2d.rs","byte_start":546646,"byte_end":546649,"line_start":62,"line_end":62,"column_start":5,"column_end":8}},{"value":"/ **Panics** if `index` is out of bounds.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_2d.rs","byte_start":546654,"byte_end":546697,"line_start":63,"line_end":63,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_2d.rs","byte_start":546702,"byte_end":546705,"line_start":64,"line_end":64,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_2d.rs","byte_start":546710,"byte_end":546717,"line_start":65,"line_end":65,"column_start":5,"column_end":12}},{"value":"/ use ndarray::array;","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_2d.rs","byte_start":546722,"byte_end":546745,"line_start":66,"line_end":66,"column_start":5,"column_end":28}},{"value":"/ let array = array![[1., 2.], [3., 4.]];","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_2d.rs","byte_start":546750,"byte_end":546793,"line_start":67,"line_end":67,"column_start":5,"column_end":48}},{"value":"/ assert_eq!(array.column(0), array![1., 3.]);","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_2d.rs","byte_start":546798,"byte_end":546846,"line_start":68,"line_end":68,"column_start":5,"column_end":53}},{"value":"/ ```","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_2d.rs","byte_start":546851,"byte_end":546858,"line_start":69,"line_end":69,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3377},"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_2d.rs","byte_start":547322,"byte_end":547332,"line_start":87,"line_end":87,"column_start":12,"column_end":22},"name":"column_mut","qualname":"<ArrayBase<S, Ix2>>::column_mut","value":"pub fn column_mut(&mut Self, Ix) -> ArrayViewMut1<, A> where S: DataMut","parent":null,"children":[],"decl_id":null,"docs":" Return a mutable array view of column `index`.","sig":null,"attributes":[{"value":"/ Return a mutable array view of column `index`.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_2d.rs","byte_start":547000,"byte_end":547050,"line_start":77,"line_end":77,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_2d.rs","byte_start":547055,"byte_end":547058,"line_start":78,"line_end":78,"column_start":5,"column_end":8}},{"value":"/ **Panics** if `index` is out of bounds.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_2d.rs","byte_start":547063,"byte_end":547106,"line_start":79,"line_end":79,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_2d.rs","byte_start":547111,"byte_end":547114,"line_start":80,"line_end":80,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_2d.rs","byte_start":547119,"byte_end":547126,"line_start":81,"line_end":81,"column_start":5,"column_end":12}},{"value":"/ use ndarray::array;","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_2d.rs","byte_start":547131,"byte_end":547154,"line_start":82,"line_end":82,"column_start":5,"column_end":28}},{"value":"/ let mut array = array![[1., 2.], [3., 4.]];","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_2d.rs","byte_start":547159,"byte_end":547206,"line_start":83,"line_end":83,"column_start":5,"column_end":52}},{"value":"/ array.column_mut(0)[1] = 5.;","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_2d.rs","byte_start":547211,"byte_end":547243,"line_start":84,"line_end":84,"column_start":5,"column_end":37}},{"value":"/ assert_eq!(array, array![[1., 2.], [5., 4.]]);","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_2d.rs","byte_start":547248,"byte_end":547298,"line_start":85,"line_end":85,"column_start":5,"column_end":55}},{"value":"/ ```","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_2d.rs","byte_start":547303,"byte_end":547310,"line_start":86,"line_end":86,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3378},"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_2d.rs","byte_start":547717,"byte_end":547722,"line_start":101,"line_end":101,"column_start":12,"column_end":17},"name":"ncols","qualname":"<ArrayBase<S, Ix2>>::ncols","value":"pub fn ncols(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Return the number of columns (length of `Axis(1)`) in the two-dimensional array.","sig":null,"attributes":[{"value":"/ Return the number of columns (length of `Axis(1)`) in the two-dimensional array.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_2d.rs","byte_start":547470,"byte_end":547554,"line_start":94,"line_end":94,"column_start":5,"column_end":89}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_2d.rs","byte_start":547559,"byte_end":547562,"line_start":95,"line_end":95,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_2d.rs","byte_start":547567,"byte_end":547574,"line_start":96,"line_end":96,"column_start":5,"column_end":12}},{"value":"/ use ndarray::array;","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_2d.rs","byte_start":547579,"byte_end":547602,"line_start":97,"line_end":97,"column_start":5,"column_end":28}},{"value":"/ let array = array![[1., 2.], [3., 4.]];","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_2d.rs","byte_start":547607,"byte_end":547650,"line_start":98,"line_end":98,"column_start":5,"column_end":48}},{"value":"/ assert_eq!(array.ncols(), 2usize);","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_2d.rs","byte_start":547655,"byte_end":547693,"line_start":99,"line_end":99,"column_start":5,"column_end":43}},{"value":"/ ```","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_2d.rs","byte_start":547698,"byte_end":547705,"line_start":100,"line_end":100,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3379},"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_2d.rs","byte_start":548193,"byte_end":548202,"line_start":120,"line_end":120,"column_start":12,"column_end":21},"name":"is_square","qualname":"<ArrayBase<S, Ix2>>::is_square","value":"pub fn is_square(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Return true if the array is square, false otherwise.","sig":null,"attributes":[{"value":"/ Return true if the array is square, false otherwise.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_2d.rs","byte_start":547781,"byte_end":547837,"line_start":105,"line_end":105,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_2d.rs","byte_start":547842,"byte_end":547845,"line_start":106,"line_end":106,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_2d.rs","byte_start":547850,"byte_end":547864,"line_start":107,"line_end":107,"column_start":5,"column_end":19}},{"value":"/ Sqaure:","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_2d.rs","byte_start":547869,"byte_end":547880,"line_start":108,"line_end":108,"column_start":5,"column_end":16}},{"value":"/ ```","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_2d.rs","byte_start":547885,"byte_end":547892,"line_start":109,"line_end":109,"column_start":5,"column_end":12}},{"value":"/ use ndarray::array;","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_2d.rs","byte_start":547897,"byte_end":547920,"line_start":110,"line_end":110,"column_start":5,"column_end":28}},{"value":"/ let array = array![[1., 2.], [3., 4.]];","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_2d.rs","byte_start":547925,"byte_end":547968,"line_start":111,"line_end":111,"column_start":5,"column_end":48}},{"value":"/ assert!(array.is_square());","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_2d.rs","byte_start":547973,"byte_end":548004,"line_start":112,"line_end":112,"column_start":5,"column_end":36}},{"value":"/ ```","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_2d.rs","byte_start":548009,"byte_end":548016,"line_start":113,"line_end":113,"column_start":5,"column_end":12}},{"value":"/ Not sqaure:","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_2d.rs","byte_start":548021,"byte_end":548036,"line_start":114,"line_end":114,"column_start":5,"column_end":20}},{"value":"/ ```","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_2d.rs","byte_start":548041,"byte_end":548048,"line_start":115,"line_end":115,"column_start":5,"column_end":12}},{"value":"/ use ndarray::array;","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_2d.rs","byte_start":548053,"byte_end":548076,"line_start":116,"line_end":116,"column_start":5,"column_end":28}},{"value":"/ let array = array![[1., 2., 5.], [3., 4., 6.]];","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_2d.rs","byte_start":548081,"byte_end":548132,"line_start":117,"line_end":117,"column_start":5,"column_end":56}},{"value":"/ assert!(!array.is_square());","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_2d.rs","byte_start":548137,"byte_end":548169,"line_start":118,"line_end":118,"column_start":5,"column_end":37}},{"value":"/ ```","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_2d.rs","byte_start":548174,"byte_end":548181,"line_start":119,"line_end":119,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3385},"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_dyn.rs","byte_start":549322,"byte_end":549341,"line_start":32,"line_end":32,"column_start":12,"column_end":31},"name":"insert_axis_inplace","qualname":"<ArrayBase<S, IxDyn>>::insert_axis_inplace","value":"pub fn insert_axis_inplace(&mut Self, Axis)","parent":null,"children":[],"decl_id":null,"docs":" Insert new array axis of length 1 at `axis`, modifying the shape and\n strides in-place.","sig":null,"attributes":[{"value":"/ Insert new array axis of length 1 at `axis`, modifying the shape and","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_dyn.rs","byte_start":548812,"byte_end":548884,"line_start":17,"line_end":17,"column_start":5,"column_end":77}},{"value":"/ strides in-place.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_dyn.rs","byte_start":548889,"byte_end":548910,"line_start":18,"line_end":18,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_dyn.rs","byte_start":548915,"byte_end":548918,"line_start":19,"line_end":19,"column_start":5,"column_end":8}},{"value":"/ **Panics** if the axis is out of bounds.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_dyn.rs","byte_start":548923,"byte_end":548967,"line_start":20,"line_end":20,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_dyn.rs","byte_start":548972,"byte_end":548975,"line_start":21,"line_end":21,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_dyn.rs","byte_start":548980,"byte_end":548987,"line_start":22,"line_end":22,"column_start":5,"column_end":12}},{"value":"/ use ndarray::{Axis, arr2, arr3};","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_dyn.rs","byte_start":548992,"byte_end":549028,"line_start":23,"line_end":23,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_dyn.rs","byte_start":549033,"byte_end":549036,"line_start":24,"line_end":24,"column_start":5,"column_end":8}},{"value":"/ let mut a = arr2(&[[1, 2, 3], [4, 5, 6]]).into_dyn();","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_dyn.rs","byte_start":549041,"byte_end":549098,"line_start":25,"line_end":25,"column_start":5,"column_end":62}},{"value":"/ assert_eq!(a.shape(), &[2, 3]);","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_dyn.rs","byte_start":549103,"byte_end":549138,"line_start":26,"line_end":26,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_dyn.rs","byte_start":549143,"byte_end":549146,"line_start":27,"line_end":27,"column_start":5,"column_end":8}},{"value":"/ a.insert_axis_inplace(Axis(1));","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_dyn.rs","byte_start":549151,"byte_end":549186,"line_start":28,"line_end":28,"column_start":5,"column_end":40}},{"value":"/ assert_eq!(a, arr3(&[[[1, 2, 3]], [[4, 5, 6]]]).into_dyn());","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_dyn.rs","byte_start":549191,"byte_end":549255,"line_start":29,"line_end":29,"column_start":5,"column_end":69}},{"value":"/ assert_eq!(a.shape(), &[2, 1, 3]);","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_dyn.rs","byte_start":549260,"byte_end":549298,"line_start":30,"line_end":30,"column_start":5,"column_end":43}},{"value":"/ ```","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_dyn.rs","byte_start":549303,"byte_end":549310,"line_start":31,"line_end":31,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3386},"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_dyn.rs","byte_start":550044,"byte_end":550062,"line_start":53,"line_end":53,"column_start":12,"column_end":30},"name":"index_axis_inplace","qualname":"<ArrayBase<S, IxDyn>>::index_axis_inplace","value":"pub fn index_axis_inplace(&mut Self, Axis, usize)","parent":null,"children":[],"decl_id":null,"docs":" Collapses the array to `index` along the axis and removes the axis,\n modifying the shape and strides in-place.","sig":null,"attributes":[{"value":"/ Collapses the array to `index` along the axis and removes the axis,","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_dyn.rs","byte_start":549526,"byte_end":549597,"line_start":38,"line_end":38,"column_start":5,"column_end":76}},{"value":"/ modifying the shape and strides in-place.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_dyn.rs","byte_start":549602,"byte_end":549647,"line_start":39,"line_end":39,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_dyn.rs","byte_start":549652,"byte_end":549655,"line_start":40,"line_end":40,"column_start":5,"column_end":8}},{"value":"/ **Panics** if `axis` or `index` is out of bounds.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_dyn.rs","byte_start":549660,"byte_end":549713,"line_start":41,"line_end":41,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_dyn.rs","byte_start":549718,"byte_end":549721,"line_start":42,"line_end":42,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_dyn.rs","byte_start":549726,"byte_end":549733,"line_start":43,"line_end":43,"column_start":5,"column_end":12}},{"value":"/ use ndarray::{Axis, arr1, arr2};","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_dyn.rs","byte_start":549738,"byte_end":549774,"line_start":44,"line_end":44,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_dyn.rs","byte_start":549779,"byte_end":549782,"line_start":45,"line_end":45,"column_start":5,"column_end":8}},{"value":"/ let mut a = arr2(&[[1, 2, 3], [4, 5, 6]]).into_dyn();","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_dyn.rs","byte_start":549787,"byte_end":549844,"line_start":46,"line_end":46,"column_start":5,"column_end":62}},{"value":"/ assert_eq!(a.shape(), &[2, 3]);","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_dyn.rs","byte_start":549849,"byte_end":549884,"line_start":47,"line_end":47,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_dyn.rs","byte_start":549889,"byte_end":549892,"line_start":48,"line_end":48,"column_start":5,"column_end":8}},{"value":"/ a.index_axis_inplace(Axis(1), 1);","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_dyn.rs","byte_start":549897,"byte_end":549934,"line_start":49,"line_end":49,"column_start":5,"column_end":42}},{"value":"/ assert_eq!(a, arr1(&[2, 5]).into_dyn());","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_dyn.rs","byte_start":549939,"byte_end":549983,"line_start":50,"line_end":50,"column_start":5,"column_end":49}},{"value":"/ assert_eq!(a.shape(), &[2]);","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_dyn.rs","byte_start":549988,"byte_end":550020,"line_start":51,"line_end":51,"column_start":5,"column_end":37}},{"value":"/ ```","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_dyn.rs","byte_start":550025,"byte_end":550032,"line_start":52,"line_end":52,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3405},"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/numeric/impl_numeric.rs","byte_start":551187,"byte_end":551190,"line_start":33,"line_end":33,"column_start":12,"column_end":15},"name":"sum","qualname":"<ArrayBase<S, D>>::sum","value":"pub fn sum(&Self) -> A where A: Clone + Add<Output = A> + num_traits::Zero","parent":null,"children":[],"decl_id":null,"docs":" Return the sum of all elements in the array.","sig":null,"attributes":[{"value":"/ Return the sum of all elements in the array.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/numeric/impl_numeric.rs","byte_start":550958,"byte_end":551006,"line_start":24,"line_end":24,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/numeric/impl_numeric.rs","byte_start":551011,"byte_end":551014,"line_start":25,"line_end":25,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/numeric/impl_numeric.rs","byte_start":551019,"byte_end":551026,"line_start":26,"line_end":26,"column_start":5,"column_end":12}},{"value":"/ use ndarray::arr2;","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/numeric/impl_numeric.rs","byte_start":551031,"byte_end":551053,"line_start":27,"line_end":27,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/numeric/impl_numeric.rs","byte_start":551058,"byte_end":551061,"line_start":28,"line_end":28,"column_start":5,"column_end":8}},{"value":"/ let a = arr2(&[[1., 2.],","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/numeric/impl_numeric.rs","byte_start":551066,"byte_end":551094,"line_start":29,"line_end":29,"column_start":5,"column_end":33}},{"value":"/                [3., 4.]]);","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/numeric/impl_numeric.rs","byte_start":551099,"byte_end":551129,"line_start":30,"line_end":30,"column_start":5,"column_end":35}},{"value":"/ assert_eq!(a.sum(), 10.);","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/numeric/impl_numeric.rs","byte_start":551134,"byte_end":551163,"line_start":31,"line_end":31,"column_start":5,"column_end":34}},{"value":"/ ```","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/numeric/impl_numeric.rs","byte_start":551168,"byte_end":551175,"line_start":32,"line_end":32,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3407},"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/numeric/impl_numeric.rs","byte_start":551943,"byte_end":551953,"line_start":55,"line_end":55,"column_start":12,"column_end":22},"name":"scalar_sum","qualname":"<ArrayBase<S, D>>::scalar_sum","value":"pub fn scalar_sum(&Self) -> A where A: Clone + Add<Output = A> +\nnum_traits::Zero","parent":null,"children":[],"decl_id":null,"docs":" Return the sum of all elements in the array.","sig":null,"attributes":[{"value":"/ Return the sum of all elements in the array.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/numeric/impl_numeric.rs","byte_start":551765,"byte_end":551813,"line_start":51,"line_end":51,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/numeric/impl_numeric.rs","byte_start":551818,"byte_end":551821,"line_start":52,"line_end":52,"column_start":5,"column_end":8}},{"value":"/ *This method has been renamed to `.sum()`*","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/numeric/impl_numeric.rs","byte_start":551826,"byte_end":551872,"line_start":53,"line_end":53,"column_start":5,"column_end":51}},{"value":"deprecated(note = \"renamed to `sum`\", since = \"0.15.0\")","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/numeric/impl_numeric.rs","byte_start":551877,"byte_end":551931,"line_start":54,"line_end":54,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":3408},"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/numeric/impl_numeric.rs","byte_start":552490,"byte_end":552494,"line_start":75,"line_end":75,"column_start":12,"column_end":16},"name":"mean","qualname":"<ArrayBase<S, D>>::mean","value":"pub fn mean(&Self) -> Option<A> where A: Clone + FromPrimitive + Add<Output =\nA> + Div<Output = A> + Zero","parent":null,"children":[],"decl_id":null,"docs":" Returns the [arithmetic mean] x̅ of all elements in the array:","sig":null,"attributes":[{"value":"/ Returns the [arithmetic mean] x̅ of all elements in the array:","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/numeric/impl_numeric.rs","byte_start":552067,"byte_end":552134,"line_start":62,"line_end":62,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/numeric/impl_numeric.rs","byte_start":552139,"byte_end":552142,"line_start":63,"line_end":63,"column_start":5,"column_end":8}},{"value":"/ ```text","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/numeric/impl_numeric.rs","byte_start":552147,"byte_end":552158,"line_start":64,"line_end":64,"column_start":5,"column_end":16}},{"value":"/     1   n","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/numeric/impl_numeric.rs","byte_start":552163,"byte_end":552176,"line_start":65,"line_end":65,"column_start":5,"column_end":18}},{"value":"/ x̅ = ―   ∑ xᵢ","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/numeric/impl_numeric.rs","byte_start":552181,"byte_end":552205,"line_start":66,"line_end":66,"column_start":5,"column_end":22}},{"value":"/     n  i=1","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/numeric/impl_numeric.rs","byte_start":552210,"byte_end":552224,"line_start":67,"line_end":67,"column_start":5,"column_end":19}},{"value":"/ ```","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/numeric/impl_numeric.rs","byte_start":552229,"byte_end":552236,"line_start":68,"line_end":68,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/numeric/impl_numeric.rs","byte_start":552241,"byte_end":552244,"line_start":69,"line_end":69,"column_start":5,"column_end":8}},{"value":"/ If the array is empty, `None` is returned.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/numeric/impl_numeric.rs","byte_start":552249,"byte_end":552295,"line_start":70,"line_end":70,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/numeric/impl_numeric.rs","byte_start":552300,"byte_end":552303,"line_start":71,"line_end":71,"column_start":5,"column_end":8}},{"value":"/ **Panics** if `A::from_usize()` fails to convert the number of elements in the array.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/numeric/impl_numeric.rs","byte_start":552308,"byte_end":552397,"line_start":72,"line_end":72,"column_start":5,"column_end":94}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/numeric/impl_numeric.rs","byte_start":552402,"byte_end":552405,"line_start":73,"line_end":73,"column_start":5,"column_end":8}},{"value":"/ [arithmetic mean]: https://en.wikipedia.org/wiki/Arithmetic_mean","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/numeric/impl_numeric.rs","byte_start":552410,"byte_end":552478,"line_start":74,"line_end":74,"column_start":5,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":3409},"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/numeric/impl_numeric.rs","byte_start":553143,"byte_end":553150,"line_start":98,"line_end":98,"column_start":12,"column_end":19},"name":"product","qualname":"<ArrayBase<S, D>>::product","value":"pub fn product(&Self) -> A where A: Clone + Mul<Output = A> + num_traits::One","parent":null,"children":[],"decl_id":null,"docs":" Return the product of all elements in the array.","sig":null,"attributes":[{"value":"/ Return the product of all elements in the array.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/numeric/impl_numeric.rs","byte_start":552906,"byte_end":552958,"line_start":89,"line_end":89,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/numeric/impl_numeric.rs","byte_start":552963,"byte_end":552966,"line_start":90,"line_end":90,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/numeric/impl_numeric.rs","byte_start":552971,"byte_end":552978,"line_start":91,"line_end":91,"column_start":5,"column_end":12}},{"value":"/ use ndarray::arr2;","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/numeric/impl_numeric.rs","byte_start":552983,"byte_end":553005,"line_start":92,"line_end":92,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/numeric/impl_numeric.rs","byte_start":553010,"byte_end":553013,"line_start":93,"line_end":93,"column_start":5,"column_end":8}},{"value":"/ let a = arr2(&[[1., 2.],","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/numeric/impl_numeric.rs","byte_start":553018,"byte_end":553046,"line_start":94,"line_end":94,"column_start":5,"column_end":33}},{"value":"/                [3., 4.]]);","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/numeric/impl_numeric.rs","byte_start":553051,"byte_end":553081,"line_start":95,"line_end":95,"column_start":5,"column_end":35}},{"value":"/ assert_eq!(a.product(), 24.);","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/numeric/impl_numeric.rs","byte_start":553086,"byte_end":553119,"line_start":96,"line_end":96,"column_start":5,"column_end":38}},{"value":"/ ```","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/numeric/impl_numeric.rs","byte_start":553124,"byte_end":553131,"line_start":97,"line_end":97,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3411},"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/numeric/impl_numeric.rs","byte_start":554876,"byte_end":554879,"line_start":156,"line_end":156,"column_start":12,"column_end":15},"name":"var","qualname":"<ArrayBase<S, D>>::var","value":"pub fn var(&Self, A) -> A where A: Float + FromPrimitive","parent":null,"children":[],"decl_id":null,"docs":" Return variance of elements in the array.","sig":null,"attributes":[{"value":"/ Return variance of elements in the array.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/numeric/impl_numeric.rs","byte_start":553720,"byte_end":553765,"line_start":116,"line_end":116,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/numeric/impl_numeric.rs","byte_start":553770,"byte_end":553773,"line_start":117,"line_end":117,"column_start":5,"column_end":8}},{"value":"/ The variance is computed using the [Welford one-pass","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/numeric/impl_numeric.rs","byte_start":553778,"byte_end":553834,"line_start":118,"line_end":118,"column_start":5,"column_end":61}},{"value":"/ algorithm](https://www.jstor.org/stable/1266577).","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/numeric/impl_numeric.rs","byte_start":553839,"byte_end":553892,"line_start":119,"line_end":119,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/numeric/impl_numeric.rs","byte_start":553897,"byte_end":553900,"line_start":120,"line_end":120,"column_start":5,"column_end":8}},{"value":"/ The parameter `ddof` specifies the \"delta degrees of freedom\". For","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/numeric/impl_numeric.rs","byte_start":553905,"byte_end":553975,"line_start":121,"line_end":121,"column_start":5,"column_end":75}},{"value":"/ example, to calculate the population variance, use `ddof = 0`, or to","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/numeric/impl_numeric.rs","byte_start":553980,"byte_end":554052,"line_start":122,"line_end":122,"column_start":5,"column_end":77}},{"value":"/ calculate the sample variance, use `ddof = 1`.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/numeric/impl_numeric.rs","byte_start":554057,"byte_end":554107,"line_start":123,"line_end":123,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/numeric/impl_numeric.rs","byte_start":554112,"byte_end":554115,"line_start":124,"line_end":124,"column_start":5,"column_end":8}},{"value":"/ The variance is defined as:","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/numeric/impl_numeric.rs","byte_start":554120,"byte_end":554151,"line_start":125,"line_end":125,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/numeric/impl_numeric.rs","byte_start":554156,"byte_end":554159,"line_start":126,"line_end":126,"column_start":5,"column_end":8}},{"value":"/ ```text","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/numeric/impl_numeric.rs","byte_start":554164,"byte_end":554175,"line_start":127,"line_end":127,"column_start":5,"column_end":16}},{"value":"/               1       n","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/numeric/impl_numeric.rs","byte_start":554180,"byte_end":554207,"line_start":128,"line_end":128,"column_start":5,"column_end":32}},{"value":"/ variance = ――――――――   ∑ (xᵢ - x̅)²","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/numeric/impl_numeric.rs","byte_start":554212,"byte_end":554272,"line_start":129,"line_end":129,"column_start":5,"column_end":43}},{"value":"/            n - ddof  i=1","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/numeric/impl_numeric.rs","byte_start":554277,"byte_end":554305,"line_start":130,"line_end":130,"column_start":5,"column_end":33}},{"value":"/ ```","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/numeric/impl_numeric.rs","byte_start":554310,"byte_end":554317,"line_start":131,"line_end":131,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/numeric/impl_numeric.rs","byte_start":554322,"byte_end":554325,"line_start":132,"line_end":132,"column_start":5,"column_end":8}},{"value":"/ where","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/numeric/impl_numeric.rs","byte_start":554330,"byte_end":554339,"line_start":133,"line_end":133,"column_start":5,"column_end":14}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/numeric/impl_numeric.rs","byte_start":554344,"byte_end":554347,"line_start":134,"line_end":134,"column_start":5,"column_end":8}},{"value":"/ ```text","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/numeric/impl_numeric.rs","byte_start":554352,"byte_end":554363,"line_start":135,"line_end":135,"column_start":5,"column_end":16}},{"value":"/     1   n","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/numeric/impl_numeric.rs","byte_start":554368,"byte_end":554381,"line_start":136,"line_end":136,"column_start":5,"column_end":18}},{"value":"/ x̅ = ―   ∑ xᵢ","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/numeric/impl_numeric.rs","byte_start":554386,"byte_end":554410,"line_start":137,"line_end":137,"column_start":5,"column_end":22}},{"value":"/     n  i=1","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/numeric/impl_numeric.rs","byte_start":554415,"byte_end":554429,"line_start":138,"line_end":138,"column_start":5,"column_end":19}},{"value":"/ ```","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/numeric/impl_numeric.rs","byte_start":554434,"byte_end":554441,"line_start":139,"line_end":139,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/numeric/impl_numeric.rs","byte_start":554446,"byte_end":554449,"line_start":140,"line_end":140,"column_start":5,"column_end":8}},{"value":"/ and `n` is the length of the array.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/numeric/impl_numeric.rs","byte_start":554454,"byte_end":554493,"line_start":141,"line_end":141,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/numeric/impl_numeric.rs","byte_start":554498,"byte_end":554501,"line_start":142,"line_end":142,"column_start":5,"column_end":8}},{"value":"/ **Panics** if `ddof` is less than zero or greater than `n`","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/numeric/impl_numeric.rs","byte_start":554506,"byte_end":554568,"line_start":143,"line_end":143,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/numeric/impl_numeric.rs","byte_start":554573,"byte_end":554576,"line_start":144,"line_end":144,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/numeric/impl_numeric.rs","byte_start":554581,"byte_end":554594,"line_start":145,"line_end":145,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/numeric/impl_numeric.rs","byte_start":554599,"byte_end":554602,"line_start":146,"line_end":146,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/numeric/impl_numeric.rs","byte_start":554607,"byte_end":554614,"line_start":147,"line_end":147,"column_start":5,"column_end":12}},{"value":"/ use ndarray::array;","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/numeric/impl_numeric.rs","byte_start":554619,"byte_end":554642,"line_start":148,"line_end":148,"column_start":5,"column_end":28}},{"value":"/ use approx::assert_abs_diff_eq;","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/numeric/impl_numeric.rs","byte_start":554647,"byte_end":554682,"line_start":149,"line_end":149,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/numeric/impl_numeric.rs","byte_start":554687,"byte_end":554690,"line_start":150,"line_end":150,"column_start":5,"column_end":8}},{"value":"/ let a = array![1., -4.32, 1.14, 0.32];","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/numeric/impl_numeric.rs","byte_start":554695,"byte_end":554737,"line_start":151,"line_end":151,"column_start":5,"column_end":47}},{"value":"/ let var = a.var(1.);","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/numeric/impl_numeric.rs","byte_start":554742,"byte_end":554766,"line_start":152,"line_end":152,"column_start":5,"column_end":29}},{"value":"/ assert_abs_diff_eq!(var, 6.7331, epsilon = 1e-4);","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/numeric/impl_numeric.rs","byte_start":554771,"byte_end":554824,"line_start":153,"line_end":153,"column_start":5,"column_end":58}},{"value":"/ ```","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/numeric/impl_numeric.rs","byte_start":554829,"byte_end":554836,"line_start":154,"line_end":154,"column_start":5,"column_end":12}},{"value":"cfg(feature = \"std\")","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/numeric/impl_numeric.rs","byte_start":554841,"byte_end":554864,"line_start":155,"line_end":155,"column_start":5,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":3413},"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/numeric/impl_numeric.rs","byte_start":557017,"byte_end":557020,"line_start":221,"line_end":221,"column_start":12,"column_end":15},"name":"std","qualname":"<ArrayBase<S, D>>::std","value":"pub fn std(&Self, A) -> A where A: Float + FromPrimitive","parent":null,"children":[],"decl_id":null,"docs":" Return standard deviation of elements in the array.","sig":null,"attributes":[{"value":"/ Return standard deviation of elements in the array.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/numeric/impl_numeric.rs","byte_start":555737,"byte_end":555792,"line_start":181,"line_end":181,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/numeric/impl_numeric.rs","byte_start":555797,"byte_end":555800,"line_start":182,"line_end":182,"column_start":5,"column_end":8}},{"value":"/ The standard deviation is computed from the variance using","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/numeric/impl_numeric.rs","byte_start":555805,"byte_end":555867,"line_start":183,"line_end":183,"column_start":5,"column_end":67}},{"value":"/ the [Welford one-pass algorithm](https://www.jstor.org/stable/1266577).","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/numeric/impl_numeric.rs","byte_start":555872,"byte_end":555947,"line_start":184,"line_end":184,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/numeric/impl_numeric.rs","byte_start":555952,"byte_end":555955,"line_start":185,"line_end":185,"column_start":5,"column_end":8}},{"value":"/ The parameter `ddof` specifies the \"delta degrees of freedom\". For","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/numeric/impl_numeric.rs","byte_start":555960,"byte_end":556030,"line_start":186,"line_end":186,"column_start":5,"column_end":75}},{"value":"/ example, to calculate the population standard deviation, use `ddof = 0`,","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/numeric/impl_numeric.rs","byte_start":556035,"byte_end":556111,"line_start":187,"line_end":187,"column_start":5,"column_end":81}},{"value":"/ or to calculate the sample standard deviation, use `ddof = 1`.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/numeric/impl_numeric.rs","byte_start":556116,"byte_end":556182,"line_start":188,"line_end":188,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/numeric/impl_numeric.rs","byte_start":556187,"byte_end":556190,"line_start":189,"line_end":189,"column_start":5,"column_end":8}},{"value":"/ The standard deviation is defined as:","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/numeric/impl_numeric.rs","byte_start":556195,"byte_end":556236,"line_start":190,"line_end":190,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/numeric/impl_numeric.rs","byte_start":556241,"byte_end":556244,"line_start":191,"line_end":191,"column_start":5,"column_end":8}},{"value":"/ ```text","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/numeric/impl_numeric.rs","byte_start":556249,"byte_end":556260,"line_start":192,"line_end":192,"column_start":5,"column_end":16}},{"value":"/               ⎛    1       n          ⎞","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/numeric/impl_numeric.rs","byte_start":556265,"byte_end":556312,"line_start":193,"line_end":193,"column_start":5,"column_end":48}},{"value":"/ stddev = sqrt ⎜ ――――――――   ∑ (xᵢ - x̅)²⎟","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/numeric/impl_numeric.rs","byte_start":556317,"byte_end":556387,"line_start":194,"line_end":194,"column_start":5,"column_end":49}},{"value":"/               ⎝ n - ddof  i=1         ⎠","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/numeric/impl_numeric.rs","byte_start":556392,"byte_end":556439,"line_start":195,"line_end":195,"column_start":5,"column_end":48}},{"value":"/ ```","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/numeric/impl_numeric.rs","byte_start":556444,"byte_end":556451,"line_start":196,"line_end":196,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/numeric/impl_numeric.rs","byte_start":556456,"byte_end":556459,"line_start":197,"line_end":197,"column_start":5,"column_end":8}},{"value":"/ where","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/numeric/impl_numeric.rs","byte_start":556464,"byte_end":556473,"line_start":198,"line_end":198,"column_start":5,"column_end":14}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/numeric/impl_numeric.rs","byte_start":556478,"byte_end":556481,"line_start":199,"line_end":199,"column_start":5,"column_end":8}},{"value":"/ ```text","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/numeric/impl_numeric.rs","byte_start":556486,"byte_end":556497,"line_start":200,"line_end":200,"column_start":5,"column_end":16}},{"value":"/     1   n","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/numeric/impl_numeric.rs","byte_start":556502,"byte_end":556515,"line_start":201,"line_end":201,"column_start":5,"column_end":18}},{"value":"/ x̅ = ―   ∑ xᵢ","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/numeric/impl_numeric.rs","byte_start":556520,"byte_end":556544,"line_start":202,"line_end":202,"column_start":5,"column_end":22}},{"value":"/     n  i=1","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/numeric/impl_numeric.rs","byte_start":556549,"byte_end":556563,"line_start":203,"line_end":203,"column_start":5,"column_end":19}},{"value":"/ ```","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/numeric/impl_numeric.rs","byte_start":556568,"byte_end":556575,"line_start":204,"line_end":204,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/numeric/impl_numeric.rs","byte_start":556580,"byte_end":556583,"line_start":205,"line_end":205,"column_start":5,"column_end":8}},{"value":"/ and `n` is the length of the array.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/numeric/impl_numeric.rs","byte_start":556588,"byte_end":556627,"line_start":206,"line_end":206,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/numeric/impl_numeric.rs","byte_start":556632,"byte_end":556635,"line_start":207,"line_end":207,"column_start":5,"column_end":8}},{"value":"/ **Panics** if `ddof` is less than zero or greater than `n`","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/numeric/impl_numeric.rs","byte_start":556640,"byte_end":556702,"line_start":208,"line_end":208,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/numeric/impl_numeric.rs","byte_start":556707,"byte_end":556710,"line_start":209,"line_end":209,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/numeric/impl_numeric.rs","byte_start":556715,"byte_end":556728,"line_start":210,"line_end":210,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/numeric/impl_numeric.rs","byte_start":556733,"byte_end":556736,"line_start":211,"line_end":211,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/numeric/impl_numeric.rs","byte_start":556741,"byte_end":556748,"line_start":212,"line_end":212,"column_start":5,"column_end":12}},{"value":"/ use ndarray::array;","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/numeric/impl_numeric.rs","byte_start":556753,"byte_end":556776,"line_start":213,"line_end":213,"column_start":5,"column_end":28}},{"value":"/ use approx::assert_abs_diff_eq;","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/numeric/impl_numeric.rs","byte_start":556781,"byte_end":556816,"line_start":214,"line_end":214,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/numeric/impl_numeric.rs","byte_start":556821,"byte_end":556824,"line_start":215,"line_end":215,"column_start":5,"column_end":8}},{"value":"/ let a = array![1., -4.32, 1.14, 0.32];","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/numeric/impl_numeric.rs","byte_start":556829,"byte_end":556871,"line_start":216,"line_end":216,"column_start":5,"column_end":47}},{"value":"/ let stddev = a.std(1.);","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/numeric/impl_numeric.rs","byte_start":556876,"byte_end":556903,"line_start":217,"line_end":217,"column_start":5,"column_end":32}},{"value":"/ assert_abs_diff_eq!(stddev, 2.59483, epsilon = 1e-4);","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/numeric/impl_numeric.rs","byte_start":556908,"byte_end":556965,"line_start":218,"line_end":218,"column_start":5,"column_end":62}},{"value":"/ ```","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/numeric/impl_numeric.rs","byte_start":556970,"byte_end":556977,"line_start":219,"line_end":219,"column_start":5,"column_end":12}},{"value":"cfg(feature = \"std\")","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/numeric/impl_numeric.rs","byte_start":556982,"byte_end":557005,"line_start":220,"line_end":220,"column_start":5,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":3414},"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/numeric/impl_numeric.rs","byte_start":557614,"byte_end":557622,"line_start":244,"line_end":244,"column_start":12,"column_end":20},"name":"sum_axis","qualname":"<ArrayBase<S, D>>::sum_axis","value":"pub fn sum_axis(&Self, Axis) -> Array<A, D::Smaller> where A: Clone + Zero +\nAdd<Output = A>, D: RemoveAxis","parent":null,"children":[],"decl_id":null,"docs":" Return sum along `axis`.","sig":null,"attributes":[{"value":"/ Return sum along `axis`.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/numeric/impl_numeric.rs","byte_start":557133,"byte_end":557161,"line_start":228,"line_end":228,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/numeric/impl_numeric.rs","byte_start":557166,"byte_end":557169,"line_start":229,"line_end":229,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/numeric/impl_numeric.rs","byte_start":557174,"byte_end":557181,"line_start":230,"line_end":230,"column_start":5,"column_end":12}},{"value":"/ use ndarray::{aview0, aview1, arr2, Axis};","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/numeric/impl_numeric.rs","byte_start":557186,"byte_end":557232,"line_start":231,"line_end":231,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/numeric/impl_numeric.rs","byte_start":557237,"byte_end":557240,"line_start":232,"line_end":232,"column_start":5,"column_end":8}},{"value":"/ let a = arr2(&[[1., 2., 3.],","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/numeric/impl_numeric.rs","byte_start":557245,"byte_end":557277,"line_start":233,"line_end":233,"column_start":5,"column_end":37}},{"value":"/                [4., 5., 6.]]);","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/numeric/impl_numeric.rs","byte_start":557282,"byte_end":557316,"line_start":234,"line_end":234,"column_start":5,"column_end":39}},{"value":"/ assert!(","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/numeric/impl_numeric.rs","byte_start":557321,"byte_end":557333,"line_start":235,"line_end":235,"column_start":5,"column_end":17}},{"value":"/     a.sum_axis(Axis(0)) == aview1(&[5., 7., 9.]) &&","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/numeric/impl_numeric.rs","byte_start":557338,"byte_end":557393,"line_start":236,"line_end":236,"column_start":5,"column_end":60}},{"value":"/     a.sum_axis(Axis(1)) == aview1(&[6., 15.]) &&","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/numeric/impl_numeric.rs","byte_start":557398,"byte_end":557450,"line_start":237,"line_end":237,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/numeric/impl_numeric.rs","byte_start":557455,"byte_end":557458,"line_start":238,"line_end":238,"column_start":5,"column_end":8}},{"value":"/     a.sum_axis(Axis(0)).sum_axis(Axis(0)) == aview0(&21.)","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/numeric/impl_numeric.rs","byte_start":557463,"byte_end":557524,"line_start":239,"line_end":239,"column_start":5,"column_end":66}},{"value":"/ );","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/numeric/impl_numeric.rs","byte_start":557529,"byte_end":557535,"line_start":240,"line_end":240,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/numeric/impl_numeric.rs","byte_start":557540,"byte_end":557547,"line_start":241,"line_end":241,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/numeric/impl_numeric.rs","byte_start":557552,"byte_end":557555,"line_start":242,"line_end":242,"column_start":5,"column_end":8}},{"value":"/ **Panics** if `axis` is out of bounds.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/numeric/impl_numeric.rs","byte_start":557560,"byte_end":557602,"line_start":243,"line_end":243,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":3415},"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/numeric/impl_numeric.rs","byte_start":558994,"byte_end":559003,"line_start":286,"line_end":286,"column_start":12,"column_end":21},"name":"mean_axis","qualname":"<ArrayBase<S, D>>::mean_axis","value":"pub fn mean_axis(&Self, Axis) -> Option<Array<A, D::Smaller>> where A: Clone +\nZero + FromPrimitive + Add<Output = A> + Div<Output = A>, D: RemoveAxis","parent":null,"children":[],"decl_id":null,"docs":" Return mean along `axis`.","sig":null,"attributes":[{"value":"/ Return mean along `axis`.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/numeric/impl_numeric.rs","byte_start":558347,"byte_end":558376,"line_start":267,"line_end":267,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/numeric/impl_numeric.rs","byte_start":558381,"byte_end":558384,"line_start":268,"line_end":268,"column_start":5,"column_end":8}},{"value":"/ Return `None` if the length of the axis is zero.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/numeric/impl_numeric.rs","byte_start":558389,"byte_end":558441,"line_start":269,"line_end":269,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/numeric/impl_numeric.rs","byte_start":558446,"byte_end":558449,"line_start":270,"line_end":270,"column_start":5,"column_end":8}},{"value":"/ **Panics** if `axis` is out of bounds or if `A::from_usize()`","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/numeric/impl_numeric.rs","byte_start":558454,"byte_end":558519,"line_start":271,"line_end":271,"column_start":5,"column_end":70}},{"value":"/ fails for the axis length.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/numeric/impl_numeric.rs","byte_start":558524,"byte_end":558554,"line_start":272,"line_end":272,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/numeric/impl_numeric.rs","byte_start":558559,"byte_end":558562,"line_start":273,"line_end":273,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/numeric/impl_numeric.rs","byte_start":558567,"byte_end":558574,"line_start":274,"line_end":274,"column_start":5,"column_end":12}},{"value":"/ use ndarray::{aview0, aview1, arr2, Axis};","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/numeric/impl_numeric.rs","byte_start":558579,"byte_end":558625,"line_start":275,"line_end":275,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/numeric/impl_numeric.rs","byte_start":558630,"byte_end":558633,"line_start":276,"line_end":276,"column_start":5,"column_end":8}},{"value":"/ let a = arr2(&[[1., 2., 3.],","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/numeric/impl_numeric.rs","byte_start":558638,"byte_end":558670,"line_start":277,"line_end":277,"column_start":5,"column_end":37}},{"value":"/                [4., 5., 6.]]);","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/numeric/impl_numeric.rs","byte_start":558675,"byte_end":558709,"line_start":278,"line_end":278,"column_start":5,"column_end":39}},{"value":"/ assert!(","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/numeric/impl_numeric.rs","byte_start":558714,"byte_end":558726,"line_start":279,"line_end":279,"column_start":5,"column_end":17}},{"value":"/     a.mean_axis(Axis(0)).unwrap() == aview1(&[2.5, 3.5, 4.5]) &&","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/numeric/impl_numeric.rs","byte_start":558731,"byte_end":558799,"line_start":280,"line_end":280,"column_start":5,"column_end":73}},{"value":"/     a.mean_axis(Axis(1)).unwrap() == aview1(&[2., 5.]) &&","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/numeric/impl_numeric.rs","byte_start":558804,"byte_end":558865,"line_start":281,"line_end":281,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/numeric/impl_numeric.rs","byte_start":558870,"byte_end":558873,"line_start":282,"line_end":282,"column_start":5,"column_end":8}},{"value":"/     a.mean_axis(Axis(0)).unwrap().mean_axis(Axis(0)).unwrap() == aview0(&3.5)","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/numeric/impl_numeric.rs","byte_start":558878,"byte_end":558959,"line_start":283,"line_end":283,"column_start":5,"column_end":86}},{"value":"/ );","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/numeric/impl_numeric.rs","byte_start":558964,"byte_end":558970,"line_start":284,"line_end":284,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/numeric/impl_numeric.rs","byte_start":558975,"byte_end":558982,"line_start":285,"line_end":285,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3416},"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/numeric/impl_numeric.rs","byte_start":560814,"byte_end":560822,"line_start":345,"line_end":345,"column_start":12,"column_end":20},"name":"var_axis","qualname":"<ArrayBase<S, D>>::var_axis","value":"pub fn var_axis(&Self, Axis, A) -> Array<A, D::Smaller> where A: Float +\nFromPrimitive, D: RemoveAxis","parent":null,"children":[],"decl_id":null,"docs":" Return variance along `axis`.","sig":null,"attributes":[{"value":"/ Return variance along `axis`.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/numeric/impl_numeric.rs","byte_start":559518,"byte_end":559551,"line_start":302,"line_end":302,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/numeric/impl_numeric.rs","byte_start":559556,"byte_end":559559,"line_start":303,"line_end":303,"column_start":5,"column_end":8}},{"value":"/ The variance is computed using the [Welford one-pass","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/numeric/impl_numeric.rs","byte_start":559564,"byte_end":559620,"line_start":304,"line_end":304,"column_start":5,"column_end":61}},{"value":"/ algorithm](https://www.jstor.org/stable/1266577).","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/numeric/impl_numeric.rs","byte_start":559625,"byte_end":559678,"line_start":305,"line_end":305,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/numeric/impl_numeric.rs","byte_start":559683,"byte_end":559686,"line_start":306,"line_end":306,"column_start":5,"column_end":8}},{"value":"/ The parameter `ddof` specifies the \"delta degrees of freedom\". For","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/numeric/impl_numeric.rs","byte_start":559691,"byte_end":559761,"line_start":307,"line_end":307,"column_start":5,"column_end":75}},{"value":"/ example, to calculate the population variance, use `ddof = 0`, or to","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/numeric/impl_numeric.rs","byte_start":559766,"byte_end":559838,"line_start":308,"line_end":308,"column_start":5,"column_end":77}},{"value":"/ calculate the sample variance, use `ddof = 1`.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/numeric/impl_numeric.rs","byte_start":559843,"byte_end":559893,"line_start":309,"line_end":309,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/numeric/impl_numeric.rs","byte_start":559898,"byte_end":559901,"line_start":310,"line_end":310,"column_start":5,"column_end":8}},{"value":"/ The variance is defined as:","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/numeric/impl_numeric.rs","byte_start":559906,"byte_end":559937,"line_start":311,"line_end":311,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/numeric/impl_numeric.rs","byte_start":559942,"byte_end":559945,"line_start":312,"line_end":312,"column_start":5,"column_end":8}},{"value":"/ ```text","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/numeric/impl_numeric.rs","byte_start":559950,"byte_end":559961,"line_start":313,"line_end":313,"column_start":5,"column_end":16}},{"value":"/               1       n","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/numeric/impl_numeric.rs","byte_start":559966,"byte_end":559993,"line_start":314,"line_end":314,"column_start":5,"column_end":32}},{"value":"/ variance = ――――――――   ∑ (xᵢ - x̅)²","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/numeric/impl_numeric.rs","byte_start":559998,"byte_end":560058,"line_start":315,"line_end":315,"column_start":5,"column_end":43}},{"value":"/            n - ddof  i=1","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/numeric/impl_numeric.rs","byte_start":560063,"byte_end":560091,"line_start":316,"line_end":316,"column_start":5,"column_end":33}},{"value":"/ ```","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/numeric/impl_numeric.rs","byte_start":560096,"byte_end":560103,"line_start":317,"line_end":317,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/numeric/impl_numeric.rs","byte_start":560108,"byte_end":560111,"line_start":318,"line_end":318,"column_start":5,"column_end":8}},{"value":"/ where","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/numeric/impl_numeric.rs","byte_start":560116,"byte_end":560125,"line_start":319,"line_end":319,"column_start":5,"column_end":14}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/numeric/impl_numeric.rs","byte_start":560130,"byte_end":560133,"line_start":320,"line_end":320,"column_start":5,"column_end":8}},{"value":"/ ```text","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/numeric/impl_numeric.rs","byte_start":560138,"byte_end":560149,"line_start":321,"line_end":321,"column_start":5,"column_end":16}},{"value":"/     1   n","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/numeric/impl_numeric.rs","byte_start":560154,"byte_end":560167,"line_start":322,"line_end":322,"column_start":5,"column_end":18}},{"value":"/ x̅ = ―   ∑ xᵢ","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/numeric/impl_numeric.rs","byte_start":560172,"byte_end":560196,"line_start":323,"line_end":323,"column_start":5,"column_end":22}},{"value":"/     n  i=1","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/numeric/impl_numeric.rs","byte_start":560201,"byte_end":560215,"line_start":324,"line_end":324,"column_start":5,"column_end":19}},{"value":"/ ```","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/numeric/impl_numeric.rs","byte_start":560220,"byte_end":560227,"line_start":325,"line_end":325,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/numeric/impl_numeric.rs","byte_start":560232,"byte_end":560235,"line_start":326,"line_end":326,"column_start":5,"column_end":8}},{"value":"/ and `n` is the length of the axis.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/numeric/impl_numeric.rs","byte_start":560240,"byte_end":560278,"line_start":327,"line_end":327,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/numeric/impl_numeric.rs","byte_start":560283,"byte_end":560286,"line_start":328,"line_end":328,"column_start":5,"column_end":8}},{"value":"/ **Panics** if `ddof` is less than zero or greater than `n`, if `axis`","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/numeric/impl_numeric.rs","byte_start":560291,"byte_end":560364,"line_start":329,"line_end":329,"column_start":5,"column_end":78}},{"value":"/ is out of bounds, or if `A::from_usize()` fails for any any of the","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/numeric/impl_numeric.rs","byte_start":560369,"byte_end":560439,"line_start":330,"line_end":330,"column_start":5,"column_end":75}},{"value":"/ numbers in the range `0..=n`.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/numeric/impl_numeric.rs","byte_start":560444,"byte_end":560477,"line_start":331,"line_end":331,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/numeric/impl_numeric.rs","byte_start":560482,"byte_end":560485,"line_start":332,"line_end":332,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/numeric/impl_numeric.rs","byte_start":560490,"byte_end":560503,"line_start":333,"line_end":333,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/numeric/impl_numeric.rs","byte_start":560508,"byte_end":560511,"line_start":334,"line_end":334,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/numeric/impl_numeric.rs","byte_start":560516,"byte_end":560523,"line_start":335,"line_end":335,"column_start":5,"column_end":12}},{"value":"/ use ndarray::{aview1, arr2, Axis};","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/numeric/impl_numeric.rs","byte_start":560528,"byte_end":560566,"line_start":336,"line_end":336,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/numeric/impl_numeric.rs","byte_start":560571,"byte_end":560574,"line_start":337,"line_end":337,"column_start":5,"column_end":8}},{"value":"/ let a = arr2(&[[1., 2.],","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/numeric/impl_numeric.rs","byte_start":560579,"byte_end":560607,"line_start":338,"line_end":338,"column_start":5,"column_end":33}},{"value":"/                [3., 4.],","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/numeric/impl_numeric.rs","byte_start":560612,"byte_end":560640,"line_start":339,"line_end":339,"column_start":5,"column_end":33}},{"value":"/                [5., 6.]]);","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/numeric/impl_numeric.rs","byte_start":560645,"byte_end":560675,"line_start":340,"line_end":340,"column_start":5,"column_end":35}},{"value":"/ let var = a.var_axis(Axis(0), 1.);","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/numeric/impl_numeric.rs","byte_start":560680,"byte_end":560718,"line_start":341,"line_end":341,"column_start":5,"column_end":43}},{"value":"/ assert_eq!(var, aview1(&[4., 4.]));","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/numeric/impl_numeric.rs","byte_start":560723,"byte_end":560762,"line_start":342,"line_end":342,"column_start":5,"column_end":44}},{"value":"/ ```","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/numeric/impl_numeric.rs","byte_start":560767,"byte_end":560774,"line_start":343,"line_end":343,"column_start":5,"column_end":12}},{"value":"cfg(feature = \"std\")","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/numeric/impl_numeric.rs","byte_start":560779,"byte_end":560802,"line_start":344,"line_end":344,"column_start":5,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":3418},"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/numeric/impl_numeric.rs","byte_start":563357,"byte_end":563365,"line_start":414,"line_end":414,"column_start":12,"column_end":20},"name":"std_axis","qualname":"<ArrayBase<S, D>>::std_axis","value":"pub fn std_axis(&Self, Axis, A) -> Array<A, D::Smaller> where A: Float +\nFromPrimitive, D: RemoveAxis","parent":null,"children":[],"decl_id":null,"docs":" Return standard deviation along `axis`.","sig":null,"attributes":[{"value":"/ Return standard deviation along `axis`.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/numeric/impl_numeric.rs","byte_start":561938,"byte_end":561981,"line_start":371,"line_end":371,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/numeric/impl_numeric.rs","byte_start":561986,"byte_end":561989,"line_start":372,"line_end":372,"column_start":5,"column_end":8}},{"value":"/ The standard deviation is computed from the variance using","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/numeric/impl_numeric.rs","byte_start":561994,"byte_end":562056,"line_start":373,"line_end":373,"column_start":5,"column_end":67}},{"value":"/ the [Welford one-pass algorithm](https://www.jstor.org/stable/1266577).","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/numeric/impl_numeric.rs","byte_start":562061,"byte_end":562136,"line_start":374,"line_end":374,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/numeric/impl_numeric.rs","byte_start":562141,"byte_end":562144,"line_start":375,"line_end":375,"column_start":5,"column_end":8}},{"value":"/ The parameter `ddof` specifies the \"delta degrees of freedom\". For","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/numeric/impl_numeric.rs","byte_start":562149,"byte_end":562219,"line_start":376,"line_end":376,"column_start":5,"column_end":75}},{"value":"/ example, to calculate the population standard deviation, use `ddof = 0`,","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/numeric/impl_numeric.rs","byte_start":562224,"byte_end":562300,"line_start":377,"line_end":377,"column_start":5,"column_end":81}},{"value":"/ or to calculate the sample standard deviation, use `ddof = 1`.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/numeric/impl_numeric.rs","byte_start":562305,"byte_end":562371,"line_start":378,"line_end":378,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/numeric/impl_numeric.rs","byte_start":562376,"byte_end":562379,"line_start":379,"line_end":379,"column_start":5,"column_end":8}},{"value":"/ The standard deviation is defined as:","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/numeric/impl_numeric.rs","byte_start":562384,"byte_end":562425,"line_start":380,"line_end":380,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/numeric/impl_numeric.rs","byte_start":562430,"byte_end":562433,"line_start":381,"line_end":381,"column_start":5,"column_end":8}},{"value":"/ ```text","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/numeric/impl_numeric.rs","byte_start":562438,"byte_end":562449,"line_start":382,"line_end":382,"column_start":5,"column_end":16}},{"value":"/               ⎛    1       n          ⎞","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/numeric/impl_numeric.rs","byte_start":562454,"byte_end":562501,"line_start":383,"line_end":383,"column_start":5,"column_end":48}},{"value":"/ stddev = sqrt ⎜ ――――――――   ∑ (xᵢ - x̅)²⎟","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/numeric/impl_numeric.rs","byte_start":562506,"byte_end":562576,"line_start":384,"line_end":384,"column_start":5,"column_end":49}},{"value":"/               ⎝ n - ddof  i=1         ⎠","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/numeric/impl_numeric.rs","byte_start":562581,"byte_end":562628,"line_start":385,"line_end":385,"column_start":5,"column_end":48}},{"value":"/ ```","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/numeric/impl_numeric.rs","byte_start":562633,"byte_end":562640,"line_start":386,"line_end":386,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/numeric/impl_numeric.rs","byte_start":562645,"byte_end":562648,"line_start":387,"line_end":387,"column_start":5,"column_end":8}},{"value":"/ where","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/numeric/impl_numeric.rs","byte_start":562653,"byte_end":562662,"line_start":388,"line_end":388,"column_start":5,"column_end":14}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/numeric/impl_numeric.rs","byte_start":562667,"byte_end":562670,"line_start":389,"line_end":389,"column_start":5,"column_end":8}},{"value":"/ ```text","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/numeric/impl_numeric.rs","byte_start":562675,"byte_end":562686,"line_start":390,"line_end":390,"column_start":5,"column_end":16}},{"value":"/     1   n","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/numeric/impl_numeric.rs","byte_start":562691,"byte_end":562704,"line_start":391,"line_end":391,"column_start":5,"column_end":18}},{"value":"/ x̅ = ―   ∑ xᵢ","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/numeric/impl_numeric.rs","byte_start":562709,"byte_end":562733,"line_start":392,"line_end":392,"column_start":5,"column_end":22}},{"value":"/     n  i=1","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/numeric/impl_numeric.rs","byte_start":562738,"byte_end":562752,"line_start":393,"line_end":393,"column_start":5,"column_end":19}},{"value":"/ ```","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/numeric/impl_numeric.rs","byte_start":562757,"byte_end":562764,"line_start":394,"line_end":394,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/numeric/impl_numeric.rs","byte_start":562769,"byte_end":562772,"line_start":395,"line_end":395,"column_start":5,"column_end":8}},{"value":"/ and `n` is the length of the axis.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/numeric/impl_numeric.rs","byte_start":562777,"byte_end":562815,"line_start":396,"line_end":396,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/numeric/impl_numeric.rs","byte_start":562820,"byte_end":562823,"line_start":397,"line_end":397,"column_start":5,"column_end":8}},{"value":"/ **Panics** if `ddof` is less than zero or greater than `n`, if `axis`","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/numeric/impl_numeric.rs","byte_start":562828,"byte_end":562901,"line_start":398,"line_end":398,"column_start":5,"column_end":78}},{"value":"/ is out of bounds, or if `A::from_usize()` fails for any any of the","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/numeric/impl_numeric.rs","byte_start":562906,"byte_end":562976,"line_start":399,"line_end":399,"column_start":5,"column_end":75}},{"value":"/ numbers in the range `0..=n`.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/numeric/impl_numeric.rs","byte_start":562981,"byte_end":563014,"line_start":400,"line_end":400,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/numeric/impl_numeric.rs","byte_start":563019,"byte_end":563022,"line_start":401,"line_end":401,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/numeric/impl_numeric.rs","byte_start":563027,"byte_end":563040,"line_start":402,"line_end":402,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/numeric/impl_numeric.rs","byte_start":563045,"byte_end":563048,"line_start":403,"line_end":403,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/numeric/impl_numeric.rs","byte_start":563053,"byte_end":563060,"line_start":404,"line_end":404,"column_start":5,"column_end":12}},{"value":"/ use ndarray::{aview1, arr2, Axis};","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/numeric/impl_numeric.rs","byte_start":563065,"byte_end":563103,"line_start":405,"line_end":405,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/numeric/impl_numeric.rs","byte_start":563108,"byte_end":563111,"line_start":406,"line_end":406,"column_start":5,"column_end":8}},{"value":"/ let a = arr2(&[[1., 2.],","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/numeric/impl_numeric.rs","byte_start":563116,"byte_end":563144,"line_start":407,"line_end":407,"column_start":5,"column_end":33}},{"value":"/                [3., 4.],","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/numeric/impl_numeric.rs","byte_start":563149,"byte_end":563177,"line_start":408,"line_end":408,"column_start":5,"column_end":33}},{"value":"/                [5., 6.]]);","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/numeric/impl_numeric.rs","byte_start":563182,"byte_end":563212,"line_start":409,"line_end":409,"column_start":5,"column_end":35}},{"value":"/ let stddev = a.std_axis(Axis(0), 1.);","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/numeric/impl_numeric.rs","byte_start":563217,"byte_end":563258,"line_start":410,"line_end":410,"column_start":5,"column_end":46}},{"value":"/ assert_eq!(stddev, aview1(&[2., 2.]));","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/numeric/impl_numeric.rs","byte_start":563263,"byte_end":563305,"line_start":411,"line_end":411,"column_start":5,"column_end":47}},{"value":"/ ```","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/numeric/impl_numeric.rs","byte_start":563310,"byte_end":563317,"line_start":412,"line_end":412,"column_start":5,"column_end":12}},{"value":"cfg(feature = \"std\")","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/numeric/impl_numeric.rs","byte_start":563322,"byte_end":563345,"line_start":413,"line_end":413,"column_start":5,"column_end":28}}]},{"kind":"Mod","id":{"krate":0,"index":3420},"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/linalg/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"linalg","qualname":"::linalg","value":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/linalg/mod.rs","parent":null,"children":[{"krate":0,"index":3421},{"krate":0,"index":3422},{"krate":0,"index":3423},{"krate":0,"index":3424}],"decl_id":null,"docs":" Linear algebra.\n","sig":null,"attributes":[{"value":"/ Linear algebra.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/linalg/mod.rs","byte_start":563910,"byte_end":563929,"line_start":9,"line_end":9,"column_start":1,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":3435},"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/linalg/impl_linalg.rs","byte_start":566082,"byte_end":566085,"line_start":60,"line_end":60,"column_start":12,"column_end":15},"name":"dot","qualname":"<ArrayBase<S, Ix1>>::dot","value":"pub fn dot<Rhs>(&Self, &Rhs) -> <Self as Dot<Rhs>>::Output where\nSelf: Dot<Rhs>","parent":null,"children":[],"decl_id":null,"docs":" Perform dot product or matrix multiplication of arrays `self` and `rhs`.","sig":null,"attributes":[{"value":"/ Perform dot product or matrix multiplication of arrays `self` and `rhs`.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/linalg/impl_linalg.rs","byte_start":565198,"byte_end":565274,"line_start":43,"line_end":43,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/linalg/impl_linalg.rs","byte_start":565279,"byte_end":565282,"line_start":44,"line_end":44,"column_start":5,"column_end":8}},{"value":"/ `Rhs` may be either a one-dimensional or a two-dimensional array.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/linalg/impl_linalg.rs","byte_start":565287,"byte_end":565356,"line_start":45,"line_end":45,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/linalg/impl_linalg.rs","byte_start":565361,"byte_end":565364,"line_start":46,"line_end":46,"column_start":5,"column_end":8}},{"value":"/ If `Rhs` is one-dimensional, then the operation is a vector dot","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/linalg/impl_linalg.rs","byte_start":565369,"byte_end":565436,"line_start":47,"line_end":47,"column_start":5,"column_end":72}},{"value":"/ product, which is the sum of the elementwise products (no conjugation","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/linalg/impl_linalg.rs","byte_start":565441,"byte_end":565514,"line_start":48,"line_end":48,"column_start":5,"column_end":78}},{"value":"/ of complex operands, and thus not their inner product). In this case,","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/linalg/impl_linalg.rs","byte_start":565519,"byte_end":565592,"line_start":49,"line_end":49,"column_start":5,"column_end":78}},{"value":"/ `self` and `rhs` must be the same length.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/linalg/impl_linalg.rs","byte_start":565597,"byte_end":565642,"line_start":50,"line_end":50,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/linalg/impl_linalg.rs","byte_start":565647,"byte_end":565650,"line_start":51,"line_end":51,"column_start":5,"column_end":8}},{"value":"/ If `Rhs` is two-dimensional, then the operation is matrix","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/linalg/impl_linalg.rs","byte_start":565655,"byte_end":565716,"line_start":52,"line_end":52,"column_start":5,"column_end":66}},{"value":"/ multiplication, where `self` is treated as a row vector. In this case,","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/linalg/impl_linalg.rs","byte_start":565721,"byte_end":565795,"line_start":53,"line_end":53,"column_start":5,"column_end":79}},{"value":"/ if `self` is shape *M*, then `rhs` is shape *M* × *N* and the result is","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/linalg/impl_linalg.rs","byte_start":565800,"byte_end":565876,"line_start":54,"line_end":54,"column_start":5,"column_end":80}},{"value":"/ shape *N*.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/linalg/impl_linalg.rs","byte_start":565881,"byte_end":565895,"line_start":55,"line_end":55,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/linalg/impl_linalg.rs","byte_start":565900,"byte_end":565903,"line_start":56,"line_end":56,"column_start":5,"column_end":8}},{"value":"/ **Panics** if the array shapes are incompatible.<br>","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/linalg/impl_linalg.rs","byte_start":565908,"byte_end":565964,"line_start":57,"line_end":57,"column_start":5,"column_end":61}},{"value":"/ *Note:* If enabled, uses blas `dot` for elements of `f32, f64` when memory","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/linalg/impl_linalg.rs","byte_start":565969,"byte_end":566047,"line_start":58,"line_end":58,"column_start":5,"column_end":83}},{"value":"/ layout allows.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/linalg/impl_linalg.rs","byte_start":566052,"byte_end":566070,"line_start":59,"line_end":59,"column_start":5,"column_end":23}}]},{"kind":"Trait","id":{"krate":0,"index":3441},"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/linalg/impl_linalg.rs","byte_start":569290,"byte_end":569293,"line_start":162,"line_end":162,"column_start":11,"column_end":14},"name":"Dot","qualname":"::linalg::impl_linalg::Dot","value":"Dot<Rhs>","parent":null,"children":[{"krate":0,"index":3443},{"krate":0,"index":3444}],"decl_id":null,"docs":" Matrix Multiplication","sig":null,"attributes":[{"value":"/ Matrix Multiplication","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/linalg/impl_linalg.rs","byte_start":569163,"byte_end":569188,"line_start":158,"line_end":158,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/linalg/impl_linalg.rs","byte_start":569189,"byte_end":569192,"line_start":159,"line_end":159,"column_start":1,"column_end":4}},{"value":"/ For two-dimensional arrays, the dot method computes the matrix","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/linalg/impl_linalg.rs","byte_start":569193,"byte_end":569259,"line_start":160,"line_end":160,"column_start":1,"column_end":67}},{"value":"/ multiplication.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/linalg/impl_linalg.rs","byte_start":569260,"byte_end":569279,"line_start":161,"line_end":161,"column_start":1,"column_end":20}}]},{"kind":"Type","id":{"krate":0,"index":3443},"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/linalg/impl_linalg.rs","byte_start":569412,"byte_end":569418,"line_start":166,"line_end":166,"column_start":10,"column_end":16},"name":"Output","qualname":"::linalg::impl_linalg::Dot::Output","value":"type Output;","parent":{"krate":0,"index":3441},"children":[],"decl_id":null,"docs":" The result of the operation.","sig":null,"attributes":[{"value":"/ The result of the operation.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/linalg/impl_linalg.rs","byte_start":569305,"byte_end":569337,"line_start":163,"line_end":163,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/linalg/impl_linalg.rs","byte_start":569342,"byte_end":569345,"line_start":164,"line_end":164,"column_start":5,"column_end":8}},{"value":"/ For two-dimensional arrays: a rectangular array.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/linalg/impl_linalg.rs","byte_start":569350,"byte_end":569402,"line_start":165,"line_end":165,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":3444},"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/linalg/impl_linalg.rs","byte_start":569427,"byte_end":569430,"line_start":167,"line_end":167,"column_start":8,"column_end":11},"name":"dot","qualname":"::linalg::impl_linalg::Dot::dot","value":"pub fn dot(&Self, &Rhs) -> Self::Output","parent":{"krate":0,"index":3441},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3460},"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/linalg/impl_linalg.rs","byte_start":571806,"byte_end":571809,"line_start":246,"line_end":246,"column_start":12,"column_end":15},"name":"dot","qualname":"<ArrayBase<S, Ix2>>::dot","value":"pub fn dot<Rhs>(&Self, &Rhs) -> <Self as Dot<Rhs>>::Output where\nSelf: Dot<Rhs>","parent":null,"children":[],"decl_id":null,"docs":" Perform matrix multiplication of rectangular arrays `self` and `rhs`.","sig":null,"attributes":[{"value":"/ Perform matrix multiplication of rectangular arrays `self` and `rhs`.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/linalg/impl_linalg.rs","byte_start":570761,"byte_end":570834,"line_start":217,"line_end":217,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/linalg/impl_linalg.rs","byte_start":570839,"byte_end":570842,"line_start":218,"line_end":218,"column_start":5,"column_end":8}},{"value":"/ `Rhs` may be either a one-dimensional or a two-dimensional array.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/linalg/impl_linalg.rs","byte_start":570847,"byte_end":570916,"line_start":219,"line_end":219,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/linalg/impl_linalg.rs","byte_start":570921,"byte_end":570924,"line_start":220,"line_end":220,"column_start":5,"column_end":8}},{"value":"/ If Rhs is two-dimensional, they array shapes must agree in the way that","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/linalg/impl_linalg.rs","byte_start":570929,"byte_end":571004,"line_start":221,"line_end":221,"column_start":5,"column_end":80}},{"value":"/ if `self` is *M* × *N*, then `rhs` is *N* × *K*.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/linalg/impl_linalg.rs","byte_start":571009,"byte_end":571063,"line_start":222,"line_end":222,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/linalg/impl_linalg.rs","byte_start":571068,"byte_end":571071,"line_start":223,"line_end":223,"column_start":5,"column_end":8}},{"value":"/ Return a result array with shape *M* × *K*.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/linalg/impl_linalg.rs","byte_start":571076,"byte_end":571124,"line_start":224,"line_end":224,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/linalg/impl_linalg.rs","byte_start":571129,"byte_end":571132,"line_start":225,"line_end":225,"column_start":5,"column_end":8}},{"value":"/ **Panics** if shapes are incompatible or the number of elements in the","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/linalg/impl_linalg.rs","byte_start":571137,"byte_end":571211,"line_start":226,"line_end":226,"column_start":5,"column_end":79}},{"value":"/ result would overflow `isize`.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/linalg/impl_linalg.rs","byte_start":571216,"byte_end":571250,"line_start":227,"line_end":227,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/linalg/impl_linalg.rs","byte_start":571255,"byte_end":571258,"line_start":228,"line_end":228,"column_start":5,"column_end":8}},{"value":"/ *Note:* If enabled, uses blas `gemv/gemm` for elements of `f32, f64`","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/linalg/impl_linalg.rs","byte_start":571263,"byte_end":571335,"line_start":229,"line_end":229,"column_start":5,"column_end":77}},{"value":"/ when memory layout allows. The default matrixmultiply backend","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/linalg/impl_linalg.rs","byte_start":571340,"byte_end":571405,"line_start":230,"line_end":230,"column_start":5,"column_end":70}},{"value":"/ is otherwise used for `f32, f64` for all memory layouts.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/linalg/impl_linalg.rs","byte_start":571410,"byte_end":571470,"line_start":231,"line_end":231,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/linalg/impl_linalg.rs","byte_start":571475,"byte_end":571478,"line_start":232,"line_end":232,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/linalg/impl_linalg.rs","byte_start":571483,"byte_end":571490,"line_start":233,"line_end":233,"column_start":5,"column_end":12}},{"value":"/ use ndarray::arr2;","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/linalg/impl_linalg.rs","byte_start":571495,"byte_end":571517,"line_start":234,"line_end":234,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/linalg/impl_linalg.rs","byte_start":571522,"byte_end":571525,"line_start":235,"line_end":235,"column_start":5,"column_end":8}},{"value":"/ let a = arr2(&[[1., 2.],","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/linalg/impl_linalg.rs","byte_start":571530,"byte_end":571558,"line_start":236,"line_end":236,"column_start":5,"column_end":33}},{"value":"/                [0., 1.]]);","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/linalg/impl_linalg.rs","byte_start":571563,"byte_end":571593,"line_start":237,"line_end":237,"column_start":5,"column_end":35}},{"value":"/ let b = arr2(&[[1., 2.],","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/linalg/impl_linalg.rs","byte_start":571598,"byte_end":571626,"line_start":238,"line_end":238,"column_start":5,"column_end":33}},{"value":"/                [2., 3.]]);","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/linalg/impl_linalg.rs","byte_start":571631,"byte_end":571661,"line_start":239,"line_end":239,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/linalg/impl_linalg.rs","byte_start":571666,"byte_end":571669,"line_start":240,"line_end":240,"column_start":5,"column_end":8}},{"value":"/ assert!(","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/linalg/impl_linalg.rs","byte_start":571674,"byte_end":571686,"line_start":241,"line_end":241,"column_start":5,"column_end":17}},{"value":"/     a.dot(&b) == arr2(&[[5., 8.],","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/linalg/impl_linalg.rs","byte_start":571691,"byte_end":571728,"line_start":242,"line_end":242,"column_start":5,"column_end":42}},{"value":"/                         [2., 3.]])","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/linalg/impl_linalg.rs","byte_start":571733,"byte_end":571771,"line_start":243,"line_end":243,"column_start":5,"column_end":43}},{"value":"/ );","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/linalg/impl_linalg.rs","byte_start":571776,"byte_end":571782,"line_start":244,"line_end":244,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/linalg/impl_linalg.rs","byte_start":571787,"byte_end":571794,"line_start":245,"line_end":245,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3480},"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/linalg/impl_linalg.rs","byte_start":574899,"byte_end":574909,"line_start":348,"line_end":348,"column_start":12,"column_end":22},"name":"scaled_add","qualname":"<ArrayBase<S, D>>::scaled_add","value":"pub fn scaled_add<S2, E>(&mut Self, A, &ArrayBase<S2, E>) where S: DataMut,\nS2: Data<Elem = A>, A: LinalgScalar, E: Dimension","parent":null,"children":[],"decl_id":null,"docs":" Perform the operation `self += alpha * rhs` efficiently, where\n `alpha` is a scalar and `rhs` is another array. This operation is\n also known as `axpy` in BLAS.","sig":null,"attributes":[{"value":"/ Perform the operation `self += alpha * rhs` efficiently, where","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/linalg/impl_linalg.rs","byte_start":574563,"byte_end":574629,"line_start":341,"line_end":341,"column_start":5,"column_end":71}},{"value":"/ `alpha` is a scalar and `rhs` is another array. This operation is","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/linalg/impl_linalg.rs","byte_start":574634,"byte_end":574703,"line_start":342,"line_end":342,"column_start":5,"column_end":74}},{"value":"/ also known as `axpy` in BLAS.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/linalg/impl_linalg.rs","byte_start":574708,"byte_end":574741,"line_start":343,"line_end":343,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/linalg/impl_linalg.rs","byte_start":574746,"byte_end":574749,"line_start":344,"line_end":344,"column_start":5,"column_end":8}},{"value":"/ If their shapes disagree, `rhs` is broadcast to the shape of `self`.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/linalg/impl_linalg.rs","byte_start":574754,"byte_end":574826,"line_start":345,"line_end":345,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/linalg/impl_linalg.rs","byte_start":574831,"byte_end":574834,"line_start":346,"line_end":346,"column_start":5,"column_end":8}},{"value":"/ **Panics** if broadcasting isn’t possible.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/linalg/impl_linalg.rs","byte_start":574839,"byte_end":574887,"line_start":347,"line_end":347,"column_start":5,"column_end":51}}]},{"kind":"Function","id":{"krate":0,"index":3488},"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/linalg/impl_linalg.rs","byte_start":581876,"byte_end":581891,"line_start":559,"line_end":559,"column_start":8,"column_end":23},"name":"general_mat_mul","qualname":"::linalg::impl_linalg::general_mat_mul","value":"pub fn general_mat_mul<A, S1, S2,\n                       S3>(A, &ArrayBase<S1, Ix2>, &ArrayBase<S2, Ix2>, A,\n                           &mut ArrayBase<S3, Ix2>) where S1: Data<Elem = A>,\nS2: Data<Elem = A>, S3: DataMut<Elem = A>, A: LinalgScalar","parent":null,"children":[],"decl_id":null,"docs":" General matrix-matrix multiplication.","sig":null,"attributes":[{"value":"/ General matrix-matrix multiplication.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/linalg/impl_linalg.rs","byte_start":581411,"byte_end":581452,"line_start":548,"line_end":548,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/linalg/impl_linalg.rs","byte_start":581453,"byte_end":581456,"line_start":549,"line_end":549,"column_start":1,"column_end":4}},{"value":"/ Compute C ← α A B + β C","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/linalg/impl_linalg.rs","byte_start":581457,"byte_end":581488,"line_start":550,"line_end":550,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/linalg/impl_linalg.rs","byte_start":581489,"byte_end":581492,"line_start":551,"line_end":551,"column_start":1,"column_end":4}},{"value":"/ The array shapes must agree in the way that","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/linalg/impl_linalg.rs","byte_start":581493,"byte_end":581540,"line_start":552,"line_end":552,"column_start":1,"column_end":48}},{"value":"/ if `a` is *M* × *N*, then `b` is *N* × *K* and `c` is *M* × *K*.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/linalg/impl_linalg.rs","byte_start":581541,"byte_end":581612,"line_start":553,"line_end":553,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/linalg/impl_linalg.rs","byte_start":581613,"byte_end":581616,"line_start":554,"line_end":554,"column_start":1,"column_end":4}},{"value":"/ ***Panics*** if array shapes are not compatible<br>","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/linalg/impl_linalg.rs","byte_start":581617,"byte_end":581672,"line_start":555,"line_end":555,"column_start":1,"column_end":56}},{"value":"/ *Note:* If enabled, uses blas `gemm` for elements of `f32, f64` when memory","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/linalg/impl_linalg.rs","byte_start":581673,"byte_end":581752,"line_start":556,"line_end":556,"column_start":1,"column_end":80}},{"value":"/ layout allows.  The default matrixmultiply backend is otherwise used for","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/linalg/impl_linalg.rs","byte_start":581753,"byte_end":581829,"line_start":557,"line_end":557,"column_start":1,"column_end":77}},{"value":"/ `f32, f64` for all memory layouts.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/linalg/impl_linalg.rs","byte_start":581830,"byte_end":581868,"line_start":558,"line_end":558,"column_start":1,"column_end":39}}]},{"kind":"Function","id":{"krate":0,"index":3493},"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/linalg/impl_linalg.rs","byte_start":582815,"byte_end":582834,"line_start":591,"line_end":591,"column_start":8,"column_end":27},"name":"general_mat_vec_mul","qualname":"::linalg::impl_linalg::general_mat_vec_mul","value":"pub fn general_mat_vec_mul<A, S1, S2,\n                           S3>(A, &ArrayBase<S1, Ix2>, &ArrayBase<S2, Ix1>, A,\n                               &mut ArrayBase<S3, Ix1>) where S1: Data<Elem =\nA>, S2: Data<Elem = A>, S3: DataMut<Elem = A>, A: LinalgScalar","parent":null,"children":[],"decl_id":null,"docs":" General matrix-vector multiplication.","sig":null,"attributes":[{"value":"/ General matrix-vector multiplication.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/linalg/impl_linalg.rs","byte_start":582396,"byte_end":582437,"line_start":580,"line_end":580,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/linalg/impl_linalg.rs","byte_start":582438,"byte_end":582441,"line_start":581,"line_end":581,"column_start":1,"column_end":4}},{"value":"/ Compute y ← α A x + β y","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/linalg/impl_linalg.rs","byte_start":582442,"byte_end":582473,"line_start":582,"line_end":582,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/linalg/impl_linalg.rs","byte_start":582474,"byte_end":582477,"line_start":583,"line_end":583,"column_start":1,"column_end":4}},{"value":"/ where A is a *M* × *N* matrix and x is an *N*-element column vector and","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/linalg/impl_linalg.rs","byte_start":582478,"byte_end":582554,"line_start":584,"line_end":584,"column_start":1,"column_end":76}},{"value":"/ y an *M*-element column vector (one dimensional arrays).","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/linalg/impl_linalg.rs","byte_start":582555,"byte_end":582615,"line_start":585,"line_end":585,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/linalg/impl_linalg.rs","byte_start":582616,"byte_end":582619,"line_start":586,"line_end":586,"column_start":1,"column_end":4}},{"value":"/ ***Panics*** if array shapes are not compatible<br>","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/linalg/impl_linalg.rs","byte_start":582620,"byte_end":582675,"line_start":587,"line_end":587,"column_start":1,"column_end":56}},{"value":"/ *Note:* If enabled, uses blas `gemv` for elements of `f32, f64` when memory","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/linalg/impl_linalg.rs","byte_start":582676,"byte_end":582755,"line_start":588,"line_end":588,"column_start":1,"column_end":80}},{"value":"/ layout allows.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/linalg/impl_linalg.rs","byte_start":582756,"byte_end":582774,"line_start":589,"line_end":589,"column_start":1,"column_end":19}},{"value":"allow(clippy :: collapsible_if)","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/linalg/impl_linalg.rs","byte_start":582775,"byte_end":582807,"line_start":590,"line_end":590,"column_start":1,"column_end":33}}]},{"kind":"Trait","id":{"krate":0,"index":3514},"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_ops.rs","byte_start":592036,"byte_end":592049,"line_start":34,"line_end":34,"column_start":11,"column_end":24},"name":"ScalarOperand","qualname":"::impl_ops::ScalarOperand","value":"ScalarOperand: 'static + Clone","parent":null,"children":[],"decl_id":null,"docs":" Elements that can be used as direct operands in arithmetic with arrays.","sig":null,"attributes":[{"value":"/ Elements that can be used as direct operands in arithmetic with arrays.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_ops.rs","byte_start":590953,"byte_end":591028,"line_start":13,"line_end":13,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_ops.rs","byte_start":591029,"byte_end":591032,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ For example, `f64` is a `ScalarOperand` which means that for an array `a`,","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_ops.rs","byte_start":591033,"byte_end":591111,"line_start":15,"line_end":15,"column_start":1,"column_end":79}},{"value":"/ arithmetic like `a + 1.0`, and, `a * 2.`, and `a += 3.` are allowed.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_ops.rs","byte_start":591112,"byte_end":591184,"line_start":16,"line_end":16,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_ops.rs","byte_start":591185,"byte_end":591188,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ In the description below, let `A` be an array or array view,","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_ops.rs","byte_start":591189,"byte_end":591253,"line_start":18,"line_end":18,"column_start":1,"column_end":65}},{"value":"/ let `B` be an array with owned data,","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_ops.rs","byte_start":591254,"byte_end":591294,"line_start":19,"line_end":19,"column_start":1,"column_end":41}},{"value":"/ and let `C` be an array with mutable data.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_ops.rs","byte_start":591295,"byte_end":591341,"line_start":20,"line_end":20,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_ops.rs","byte_start":591342,"byte_end":591345,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ `ScalarOperand` determines for which scalars `K` operations `&A @ K`, and `B @ K`,","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_ops.rs","byte_start":591346,"byte_end":591432,"line_start":22,"line_end":22,"column_start":1,"column_end":87}},{"value":"/ and `C @= K` are defined, as ***right hand side operands***, for applicable","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_ops.rs","byte_start":591433,"byte_end":591512,"line_start":23,"line_end":23,"column_start":1,"column_end":80}},{"value":"/ arithmetic operators (denoted `@`).","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_ops.rs","byte_start":591513,"byte_end":591552,"line_start":24,"line_end":24,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_ops.rs","byte_start":591553,"byte_end":591556,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ ***Left hand side*** scalar operands are not related to this trait","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_ops.rs","byte_start":591557,"byte_end":591627,"line_start":26,"line_end":26,"column_start":1,"column_end":71}},{"value":"/ (they need one `impl` per concrete scalar type); but they are still","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_ops.rs","byte_start":591628,"byte_end":591699,"line_start":27,"line_end":27,"column_start":1,"column_end":72}},{"value":"/ implemented for the same types, allowing operations","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_ops.rs","byte_start":591700,"byte_end":591755,"line_start":28,"line_end":28,"column_start":1,"column_end":56}},{"value":"/ `K @ &A`, and `K @ B` for primitive numeric types `K`.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_ops.rs","byte_start":591756,"byte_end":591814,"line_start":29,"line_end":29,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_ops.rs","byte_start":591815,"byte_end":591818,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ This trait ***does not*** limit which elements can be stored in an array in general.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_ops.rs","byte_start":591819,"byte_end":591907,"line_start":31,"line_end":31,"column_start":1,"column_end":89}},{"value":"/ Non-`ScalarOperand` types can still participate in arithmetic as array elements in","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_ops.rs","byte_start":591908,"byte_end":591994,"line_start":32,"line_end":32,"column_start":1,"column_end":87}},{"value":"/ in array-array operations.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_ops.rs","byte_start":591995,"byte_end":592025,"line_start":33,"line_end":33,"column_start":1,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":3608},"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_views/constructors.rs","byte_start":608837,"byte_end":608847,"line_start":48,"line_end":48,"column_start":12,"column_end":22},"name":"from_shape","qualname":"<ArrayView>::from_shape","value":"pub fn from_shape<Sh>(Sh, &'a [A]) -> Result<Self, ShapeError> where\nSh: Into<StrideShape<D>>","parent":null,"children":[],"decl_id":null,"docs":" Create a read-only array view borrowing its data from a slice.","sig":null,"attributes":[{"value":"/ Create a read-only array view borrowing its data from a slice.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_views/constructors.rs","byte_start":607938,"byte_end":608004,"line_start":23,"line_end":23,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_views/constructors.rs","byte_start":608009,"byte_end":608012,"line_start":24,"line_end":24,"column_start":5,"column_end":8}},{"value":"/ Checks whether `shape` are compatible with the slice's","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_views/constructors.rs","byte_start":608017,"byte_end":608075,"line_start":25,"line_end":25,"column_start":5,"column_end":63}},{"value":"/ length, returning an `Err` if not compatible.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_views/constructors.rs","byte_start":608080,"byte_end":608129,"line_start":26,"line_end":26,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_views/constructors.rs","byte_start":608134,"byte_end":608137,"line_start":27,"line_end":27,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_views/constructors.rs","byte_start":608142,"byte_end":608149,"line_start":28,"line_end":28,"column_start":5,"column_end":12}},{"value":"/ use ndarray::ArrayView;","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_views/constructors.rs","byte_start":608154,"byte_end":608181,"line_start":29,"line_end":29,"column_start":5,"column_end":32}},{"value":"/ use ndarray::arr3;","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_views/constructors.rs","byte_start":608186,"byte_end":608208,"line_start":30,"line_end":30,"column_start":5,"column_end":27}},{"value":"/ use ndarray::ShapeBuilder;","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_views/constructors.rs","byte_start":608213,"byte_end":608243,"line_start":31,"line_end":31,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_views/constructors.rs","byte_start":608248,"byte_end":608251,"line_start":32,"line_end":32,"column_start":5,"column_end":8}},{"value":"/ // advanced example where we are even specifying exact strides to use (which is optional).","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_views/constructors.rs","byte_start":608256,"byte_end":608350,"line_start":33,"line_end":33,"column_start":5,"column_end":99}},{"value":"/ let s = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12];","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_views/constructors.rs","byte_start":608355,"byte_end":608410,"line_start":34,"line_end":34,"column_start":5,"column_end":60}},{"value":"/ let a = ArrayView::from_shape((2, 3, 2).strides((1, 4, 2)),","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_views/constructors.rs","byte_start":608415,"byte_end":608478,"line_start":35,"line_end":35,"column_start":5,"column_end":68}},{"value":"/                               &s).unwrap();","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_views/constructors.rs","byte_start":608483,"byte_end":608530,"line_start":36,"line_end":36,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_views/constructors.rs","byte_start":608535,"byte_end":608538,"line_start":37,"line_end":37,"column_start":5,"column_end":8}},{"value":"/ assert!(","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_views/constructors.rs","byte_start":608543,"byte_end":608555,"line_start":38,"line_end":38,"column_start":5,"column_end":17}},{"value":"/     a == arr3(&[[[0, 2],","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_views/constructors.rs","byte_start":608560,"byte_end":608588,"line_start":39,"line_end":39,"column_start":5,"column_end":33}},{"value":"/                  [4, 6],","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_views/constructors.rs","byte_start":608593,"byte_end":608621,"line_start":40,"line_end":40,"column_start":5,"column_end":33}},{"value":"/                  [8, 10]],","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_views/constructors.rs","byte_start":608626,"byte_end":608656,"line_start":41,"line_end":41,"column_start":5,"column_end":35}},{"value":"/                 [[1, 3],","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_views/constructors.rs","byte_start":608661,"byte_end":608689,"line_start":42,"line_end":42,"column_start":5,"column_end":33}},{"value":"/                  [5, 7],","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_views/constructors.rs","byte_start":608694,"byte_end":608722,"line_start":43,"line_end":43,"column_start":5,"column_end":33}},{"value":"/                  [9, 11]]])","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_views/constructors.rs","byte_start":608727,"byte_end":608758,"line_start":44,"line_end":44,"column_start":5,"column_end":36}},{"value":"/ );","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_views/constructors.rs","byte_start":608763,"byte_end":608769,"line_start":45,"line_end":45,"column_start":5,"column_end":11}},{"value":"/ assert!(a.strides() == &[1, 4, 2]);","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_views/constructors.rs","byte_start":608774,"byte_end":608813,"line_start":46,"line_end":46,"column_start":5,"column_end":44}},{"value":"/ ```","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_views/constructors.rs","byte_start":608818,"byte_end":608825,"line_start":47,"line_end":47,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3611},"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_views/constructors.rs","byte_start":611684,"byte_end":611698,"line_start":107,"line_end":107,"column_start":19,"column_end":33},"name":"from_shape_ptr","qualname":"<ArrayView>::from_shape_ptr","value":"pub unsafe fn from_shape_ptr<Sh>(Sh, *const A) -> Self where\nSh: Into<StrideShape<D>>","parent":null,"children":[],"decl_id":null,"docs":" Create an `ArrayView<A, D>` from shape information and a raw pointer to\n the elements.","sig":null,"attributes":[{"value":"/ Create an `ArrayView<A, D>` from shape information and a raw pointer to","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_views/constructors.rs","byte_start":609448,"byte_end":609523,"line_start":63,"line_end":63,"column_start":5,"column_end":80}},{"value":"/ the elements.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_views/constructors.rs","byte_start":609528,"byte_end":609545,"line_start":64,"line_end":64,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_views/constructors.rs","byte_start":609550,"byte_end":609553,"line_start":65,"line_end":65,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_views/constructors.rs","byte_start":609558,"byte_end":609570,"line_start":66,"line_end":66,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_views/constructors.rs","byte_start":609575,"byte_end":609578,"line_start":67,"line_end":67,"column_start":5,"column_end":8}},{"value":"/ The caller is responsible for ensuring all of the following:","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_views/constructors.rs","byte_start":609583,"byte_end":609647,"line_start":68,"line_end":68,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_views/constructors.rs","byte_start":609652,"byte_end":609655,"line_start":69,"line_end":69,"column_start":5,"column_end":8}},{"value":"/ * The elements seen by moving `ptr` according to the shape and strides","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_views/constructors.rs","byte_start":609660,"byte_end":609734,"line_start":70,"line_end":70,"column_start":5,"column_end":79}},{"value":"/   must live at least as long as `'a` and must not be not mutably","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_views/constructors.rs","byte_start":609739,"byte_end":609807,"line_start":71,"line_end":71,"column_start":5,"column_end":73}},{"value":"/   aliased for the duration of `'a`.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_views/constructors.rs","byte_start":609812,"byte_end":609851,"line_start":72,"line_end":72,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_views/constructors.rs","byte_start":609856,"byte_end":609859,"line_start":73,"line_end":73,"column_start":5,"column_end":8}},{"value":"/ * `ptr` must be non-null and aligned, and it must be safe to","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_views/constructors.rs","byte_start":609864,"byte_end":609928,"line_start":74,"line_end":74,"column_start":5,"column_end":69}},{"value":"/   [`.offset()`] `ptr` by zero.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_views/constructors.rs","byte_start":609933,"byte_end":609967,"line_start":75,"line_end":75,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_views/constructors.rs","byte_start":609972,"byte_end":609975,"line_start":76,"line_end":76,"column_start":5,"column_end":8}},{"value":"/ * It must be safe to [`.offset()`] the pointer repeatedly along all","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_views/constructors.rs","byte_start":609980,"byte_end":610051,"line_start":77,"line_end":77,"column_start":5,"column_end":76}},{"value":"/   axes and calculate the `count`s for the `.offset()` calls without","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_views/constructors.rs","byte_start":610056,"byte_end":610127,"line_start":78,"line_end":78,"column_start":5,"column_end":76}},{"value":"/   overflow, even if the array is empty or the elements are zero-sized.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_views/constructors.rs","byte_start":610132,"byte_end":610206,"line_start":79,"line_end":79,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_views/constructors.rs","byte_start":610211,"byte_end":610214,"line_start":80,"line_end":80,"column_start":5,"column_end":8}},{"value":"/   In other words,","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_views/constructors.rs","byte_start":610219,"byte_end":610240,"line_start":81,"line_end":81,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_views/constructors.rs","byte_start":610245,"byte_end":610248,"line_start":82,"line_end":82,"column_start":5,"column_end":8}},{"value":"/   * All possible pointers generated by moving along all axes must be in","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_views/constructors.rs","byte_start":610253,"byte_end":610328,"line_start":83,"line_end":83,"column_start":5,"column_end":80}},{"value":"/     bounds or one byte past the end of a single allocation with element","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_views/constructors.rs","byte_start":610333,"byte_end":610408,"line_start":84,"line_end":84,"column_start":5,"column_end":80}},{"value":"/     type `A`. The only exceptions are if the array is empty or the element","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_views/constructors.rs","byte_start":610413,"byte_end":610491,"line_start":85,"line_end":85,"column_start":5,"column_end":83}},{"value":"/     type is zero-sized. In these cases, `ptr` may be dangling, but it must","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_views/constructors.rs","byte_start":610496,"byte_end":610574,"line_start":86,"line_end":86,"column_start":5,"column_end":83}},{"value":"/     still be safe to [`.offset()`] the pointer along the axes.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_views/constructors.rs","byte_start":610579,"byte_end":610645,"line_start":87,"line_end":87,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_views/constructors.rs","byte_start":610650,"byte_end":610653,"line_start":88,"line_end":88,"column_start":5,"column_end":8}},{"value":"/   * The offset in units of bytes between the least address and greatest","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_views/constructors.rs","byte_start":610658,"byte_end":610733,"line_start":89,"line_end":89,"column_start":5,"column_end":80}},{"value":"/     address by moving along all axes must not exceed `isize::MAX`. This","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_views/constructors.rs","byte_start":610738,"byte_end":610813,"line_start":90,"line_end":90,"column_start":5,"column_end":80}},{"value":"/     constraint prevents the computed offset, in bytes, from overflowing","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_views/constructors.rs","byte_start":610818,"byte_end":610893,"line_start":91,"line_end":91,"column_start":5,"column_end":80}},{"value":"/     `isize` regardless of the starting point due to past offsets.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_views/constructors.rs","byte_start":610898,"byte_end":610967,"line_start":92,"line_end":92,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_views/constructors.rs","byte_start":610972,"byte_end":610975,"line_start":93,"line_end":93,"column_start":5,"column_end":8}},{"value":"/   * The offset in units of `A` between the least address and greatest","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_views/constructors.rs","byte_start":610980,"byte_end":611053,"line_start":94,"line_end":94,"column_start":5,"column_end":78}},{"value":"/     address by moving along all axes must not exceed `isize::MAX`. This","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_views/constructors.rs","byte_start":611058,"byte_end":611133,"line_start":95,"line_end":95,"column_start":5,"column_end":80}},{"value":"/     constraint prevents overflow when calculating the `count` parameter to","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_views/constructors.rs","byte_start":611138,"byte_end":611216,"line_start":96,"line_end":96,"column_start":5,"column_end":83}},{"value":"/     [`.offset()`] regardless of the starting point due to past offsets.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_views/constructors.rs","byte_start":611221,"byte_end":611296,"line_start":97,"line_end":97,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_views/constructors.rs","byte_start":611301,"byte_end":611304,"line_start":98,"line_end":98,"column_start":5,"column_end":8}},{"value":"/ * The product of non-zero axis lengths must not exceed `isize::MAX`.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_views/constructors.rs","byte_start":611309,"byte_end":611381,"line_start":99,"line_end":99,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_views/constructors.rs","byte_start":611386,"byte_end":611389,"line_start":100,"line_end":100,"column_start":5,"column_end":8}},{"value":"/ * Strides must be non-negative.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_views/constructors.rs","byte_start":611394,"byte_end":611429,"line_start":101,"line_end":101,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_views/constructors.rs","byte_start":611434,"byte_end":611437,"line_start":102,"line_end":102,"column_start":5,"column_end":8}},{"value":"/ This function can use debug assertions to check some of these requirements,","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_views/constructors.rs","byte_start":611442,"byte_end":611521,"line_start":103,"line_end":103,"column_start":5,"column_end":84}},{"value":"/ but it's not a complete check.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_views/constructors.rs","byte_start":611526,"byte_end":611560,"line_start":104,"line_end":104,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_views/constructors.rs","byte_start":611565,"byte_end":611568,"line_start":105,"line_end":105,"column_start":5,"column_end":8}},{"value":"/ [`.offset()`]: https://doc.rust-lang.org/stable/std/primitive.pointer.html#method.offset","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_views/constructors.rs","byte_start":611573,"byte_end":611665,"line_start":106,"line_end":106,"column_start":5,"column_end":97}}]},{"kind":"Method","id":{"krate":0,"index":3617},"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_views/constructors.rs","byte_start":612835,"byte_end":612845,"line_start":145,"line_end":145,"column_start":12,"column_end":22},"name":"from_shape","qualname":"<ArrayViewMut>::from_shape","value":"pub fn from_shape<Sh>(Sh, &'a mut [A]) -> Result<Self, ShapeError> where\nSh: Into<StrideShape<D>>","parent":null,"children":[],"decl_id":null,"docs":" Create a read-write array view borrowing its data from a slice.","sig":null,"attributes":[{"value":"/ Create a read-write array view borrowing its data from a slice.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_views/constructors.rs","byte_start":611971,"byte_end":612038,"line_start":120,"line_end":120,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_views/constructors.rs","byte_start":612043,"byte_end":612046,"line_start":121,"line_end":121,"column_start":5,"column_end":8}},{"value":"/ Checks whether `dim` and `strides` are compatible with the slice's","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_views/constructors.rs","byte_start":612051,"byte_end":612121,"line_start":122,"line_end":122,"column_start":5,"column_end":75}},{"value":"/ length, returning an `Err` if not compatible.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_views/constructors.rs","byte_start":612126,"byte_end":612175,"line_start":123,"line_end":123,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_views/constructors.rs","byte_start":612180,"byte_end":612183,"line_start":124,"line_end":124,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_views/constructors.rs","byte_start":612188,"byte_end":612195,"line_start":125,"line_end":125,"column_start":5,"column_end":12}},{"value":"/ use ndarray::ArrayViewMut;","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_views/constructors.rs","byte_start":612200,"byte_end":612230,"line_start":126,"line_end":126,"column_start":5,"column_end":35}},{"value":"/ use ndarray::arr3;","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_views/constructors.rs","byte_start":612235,"byte_end":612257,"line_start":127,"line_end":127,"column_start":5,"column_end":27}},{"value":"/ use ndarray::ShapeBuilder;","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_views/constructors.rs","byte_start":612262,"byte_end":612292,"line_start":128,"line_end":128,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_views/constructors.rs","byte_start":612297,"byte_end":612300,"line_start":129,"line_end":129,"column_start":5,"column_end":8}},{"value":"/ let mut s = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12];","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_views/constructors.rs","byte_start":612305,"byte_end":612364,"line_start":130,"line_end":130,"column_start":5,"column_end":64}},{"value":"/ let mut a = ArrayViewMut::from_shape((2, 3, 2).strides((1, 4, 2)),","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_views/constructors.rs","byte_start":612369,"byte_end":612439,"line_start":131,"line_end":131,"column_start":5,"column_end":75}},{"value":"/                                      &mut s).unwrap();","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_views/constructors.rs","byte_start":612444,"byte_end":612502,"line_start":132,"line_end":132,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_views/constructors.rs","byte_start":612507,"byte_end":612510,"line_start":133,"line_end":133,"column_start":5,"column_end":8}},{"value":"/ a[[0, 0, 0]] = 1;","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_views/constructors.rs","byte_start":612515,"byte_end":612536,"line_start":134,"line_end":134,"column_start":5,"column_end":26}},{"value":"/ assert!(","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_views/constructors.rs","byte_start":612541,"byte_end":612553,"line_start":135,"line_end":135,"column_start":5,"column_end":17}},{"value":"/     a == arr3(&[[[1, 2],","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_views/constructors.rs","byte_start":612558,"byte_end":612586,"line_start":136,"line_end":136,"column_start":5,"column_end":33}},{"value":"/                  [4, 6],","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_views/constructors.rs","byte_start":612591,"byte_end":612619,"line_start":137,"line_end":137,"column_start":5,"column_end":33}},{"value":"/                  [8, 10]],","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_views/constructors.rs","byte_start":612624,"byte_end":612654,"line_start":138,"line_end":138,"column_start":5,"column_end":35}},{"value":"/                 [[1, 3],","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_views/constructors.rs","byte_start":612659,"byte_end":612687,"line_start":139,"line_end":139,"column_start":5,"column_end":33}},{"value":"/                  [5, 7],","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_views/constructors.rs","byte_start":612692,"byte_end":612720,"line_start":140,"line_end":140,"column_start":5,"column_end":33}},{"value":"/                  [9, 11]]])","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_views/constructors.rs","byte_start":612725,"byte_end":612756,"line_start":141,"line_end":141,"column_start":5,"column_end":36}},{"value":"/ );","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_views/constructors.rs","byte_start":612761,"byte_end":612767,"line_start":142,"line_end":142,"column_start":5,"column_end":11}},{"value":"/ assert!(a.strides() == &[1, 4, 2]);","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_views/constructors.rs","byte_start":612772,"byte_end":612811,"line_start":143,"line_end":143,"column_start":5,"column_end":44}},{"value":"/ ```","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_views/constructors.rs","byte_start":612816,"byte_end":612823,"line_start":144,"line_end":144,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3620},"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_views/constructors.rs","byte_start":615685,"byte_end":615699,"line_start":204,"line_end":204,"column_start":19,"column_end":33},"name":"from_shape_ptr","qualname":"<ArrayViewMut>::from_shape_ptr","value":"pub unsafe fn from_shape_ptr<Sh>(Sh, *mut A) -> Self where\nSh: Into<StrideShape<D>>","parent":null,"children":[],"decl_id":null,"docs":" Create an `ArrayViewMut<A, D>` from shape information and a\n raw pointer to the elements.","sig":null,"attributes":[{"value":"/ Create an `ArrayViewMut<A, D>` from shape information and a","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_views/constructors.rs","byte_start":613458,"byte_end":613521,"line_start":160,"line_end":160,"column_start":5,"column_end":68}},{"value":"/ raw pointer to the elements.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_views/constructors.rs","byte_start":613526,"byte_end":613558,"line_start":161,"line_end":161,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_views/constructors.rs","byte_start":613563,"byte_end":613566,"line_start":162,"line_end":162,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_views/constructors.rs","byte_start":613571,"byte_end":613583,"line_start":163,"line_end":163,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_views/constructors.rs","byte_start":613588,"byte_end":613591,"line_start":164,"line_end":164,"column_start":5,"column_end":8}},{"value":"/ The caller is responsible for ensuring all of the following:","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_views/constructors.rs","byte_start":613596,"byte_end":613660,"line_start":165,"line_end":165,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_views/constructors.rs","byte_start":613665,"byte_end":613668,"line_start":166,"line_end":166,"column_start":5,"column_end":8}},{"value":"/ * The elements seen by moving `ptr` according to the shape and strides","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_views/constructors.rs","byte_start":613673,"byte_end":613747,"line_start":167,"line_end":167,"column_start":5,"column_end":79}},{"value":"/   must live at least as long as `'a` and must not be aliased for the","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_views/constructors.rs","byte_start":613752,"byte_end":613824,"line_start":168,"line_end":168,"column_start":5,"column_end":77}},{"value":"/   duration of `'a`.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_views/constructors.rs","byte_start":613829,"byte_end":613852,"line_start":169,"line_end":169,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_views/constructors.rs","byte_start":613857,"byte_end":613860,"line_start":170,"line_end":170,"column_start":5,"column_end":8}},{"value":"/ * `ptr` must be non-null and aligned, and it must be safe to","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_views/constructors.rs","byte_start":613865,"byte_end":613929,"line_start":171,"line_end":171,"column_start":5,"column_end":69}},{"value":"/   [`.offset()`] `ptr` by zero.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_views/constructors.rs","byte_start":613934,"byte_end":613968,"line_start":172,"line_end":172,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_views/constructors.rs","byte_start":613973,"byte_end":613976,"line_start":173,"line_end":173,"column_start":5,"column_end":8}},{"value":"/ * It must be safe to [`.offset()`] the pointer repeatedly along all","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_views/constructors.rs","byte_start":613981,"byte_end":614052,"line_start":174,"line_end":174,"column_start":5,"column_end":76}},{"value":"/   axes and calculate the `count`s for the `.offset()` calls without","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_views/constructors.rs","byte_start":614057,"byte_end":614128,"line_start":175,"line_end":175,"column_start":5,"column_end":76}},{"value":"/   overflow, even if the array is empty or the elements are zero-sized.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_views/constructors.rs","byte_start":614133,"byte_end":614207,"line_start":176,"line_end":176,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_views/constructors.rs","byte_start":614212,"byte_end":614215,"line_start":177,"line_end":177,"column_start":5,"column_end":8}},{"value":"/   In other words,","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_views/constructors.rs","byte_start":614220,"byte_end":614241,"line_start":178,"line_end":178,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_views/constructors.rs","byte_start":614246,"byte_end":614249,"line_start":179,"line_end":179,"column_start":5,"column_end":8}},{"value":"/   * All possible pointers generated by moving along all axes must be in","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_views/constructors.rs","byte_start":614254,"byte_end":614329,"line_start":180,"line_end":180,"column_start":5,"column_end":80}},{"value":"/     bounds or one byte past the end of a single allocation with element","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_views/constructors.rs","byte_start":614334,"byte_end":614409,"line_start":181,"line_end":181,"column_start":5,"column_end":80}},{"value":"/     type `A`. The only exceptions are if the array is empty or the element","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_views/constructors.rs","byte_start":614414,"byte_end":614492,"line_start":182,"line_end":182,"column_start":5,"column_end":83}},{"value":"/     type is zero-sized. In these cases, `ptr` may be dangling, but it must","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_views/constructors.rs","byte_start":614497,"byte_end":614575,"line_start":183,"line_end":183,"column_start":5,"column_end":83}},{"value":"/     still be safe to [`.offset()`] the pointer along the axes.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_views/constructors.rs","byte_start":614580,"byte_end":614646,"line_start":184,"line_end":184,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_views/constructors.rs","byte_start":614651,"byte_end":614654,"line_start":185,"line_end":185,"column_start":5,"column_end":8}},{"value":"/   * The offset in units of bytes between the least address and greatest","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_views/constructors.rs","byte_start":614659,"byte_end":614734,"line_start":186,"line_end":186,"column_start":5,"column_end":80}},{"value":"/     address by moving along all axes must not exceed `isize::MAX`. This","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_views/constructors.rs","byte_start":614739,"byte_end":614814,"line_start":187,"line_end":187,"column_start":5,"column_end":80}},{"value":"/     constraint prevents the computed offset, in bytes, from overflowing","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_views/constructors.rs","byte_start":614819,"byte_end":614894,"line_start":188,"line_end":188,"column_start":5,"column_end":80}},{"value":"/     `isize` regardless of the starting point due to past offsets.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_views/constructors.rs","byte_start":614899,"byte_end":614968,"line_start":189,"line_end":189,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_views/constructors.rs","byte_start":614973,"byte_end":614976,"line_start":190,"line_end":190,"column_start":5,"column_end":8}},{"value":"/   * The offset in units of `A` between the least address and greatest","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_views/constructors.rs","byte_start":614981,"byte_end":615054,"line_start":191,"line_end":191,"column_start":5,"column_end":78}},{"value":"/     address by moving along all axes must not exceed `isize::MAX`. This","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_views/constructors.rs","byte_start":615059,"byte_end":615134,"line_start":192,"line_end":192,"column_start":5,"column_end":80}},{"value":"/     constraint prevents overflow when calculating the `count` parameter to","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_views/constructors.rs","byte_start":615139,"byte_end":615217,"line_start":193,"line_end":193,"column_start":5,"column_end":83}},{"value":"/     [`.offset()`] regardless of the starting point due to past offsets.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_views/constructors.rs","byte_start":615222,"byte_end":615297,"line_start":194,"line_end":194,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_views/constructors.rs","byte_start":615302,"byte_end":615305,"line_start":195,"line_end":195,"column_start":5,"column_end":8}},{"value":"/ * The product of non-zero axis lengths must not exceed `isize::MAX`.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_views/constructors.rs","byte_start":615310,"byte_end":615382,"line_start":196,"line_end":196,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_views/constructors.rs","byte_start":615387,"byte_end":615390,"line_start":197,"line_end":197,"column_start":5,"column_end":8}},{"value":"/ * Strides must be non-negative.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_views/constructors.rs","byte_start":615395,"byte_end":615430,"line_start":198,"line_end":198,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_views/constructors.rs","byte_start":615435,"byte_end":615438,"line_start":199,"line_end":199,"column_start":5,"column_end":8}},{"value":"/ This function can use debug assertions to check some of these requirements,","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_views/constructors.rs","byte_start":615443,"byte_end":615522,"line_start":200,"line_end":200,"column_start":5,"column_end":84}},{"value":"/ but it's not a complete check.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_views/constructors.rs","byte_start":615527,"byte_end":615561,"line_start":201,"line_end":201,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_views/constructors.rs","byte_start":615566,"byte_end":615569,"line_start":202,"line_end":202,"column_start":5,"column_end":8}},{"value":"/ [`.offset()`]: https://doc.rust-lang.org/stable/std/primitive.pointer.html#method.offset","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_views/constructors.rs","byte_start":615574,"byte_end":615666,"line_start":203,"line_end":203,"column_start":5,"column_end":97}}]},{"kind":"Method","id":{"krate":0,"index":3622},"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_views/constructors.rs","byte_start":615988,"byte_end":615996,"line_start":213,"line_end":213,"column_start":12,"column_end":20},"name":"reborrow","qualname":"<ArrayViewMut>::reborrow","value":"pub fn reborrow<'b>(Self) -> ArrayViewMut where 'a:'b","parent":null,"children":[],"decl_id":null,"docs":" Convert the view into an `ArrayViewMut<'b, A, D>` where `'b` is a lifetime\n outlived by `'a'`.\n","sig":null,"attributes":[{"value":"/ Convert the view into an `ArrayViewMut<'b, A, D>` where `'b` is a lifetime","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_views/constructors.rs","byte_start":615871,"byte_end":615949,"line_start":211,"line_end":211,"column_start":5,"column_end":83}},{"value":"/ outlived by `'a'`.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_views/constructors.rs","byte_start":615954,"byte_end":615976,"line_start":212,"line_end":212,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":3655},"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_views/conversions.rs","byte_start":618704,"byte_end":618712,"line_start":26,"line_end":26,"column_start":12,"column_end":20},"name":"reborrow","qualname":"<ArrayView>::reborrow","value":"pub fn reborrow<'b>(Self) -> ArrayView where 'a:'b","parent":null,"children":[],"decl_id":null,"docs":" Convert the view into an `ArrayView<'b, A, D>` where `'b` is a lifetime\n outlived by `'a'`.\n","sig":null,"attributes":[{"value":"/ Convert the view into an `ArrayView<'b, A, D>` where `'b` is a lifetime","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_views/conversions.rs","byte_start":618590,"byte_end":618665,"line_start":24,"line_end":24,"column_start":5,"column_end":80}},{"value":"/ outlived by `'a'`.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_views/conversions.rs","byte_start":618670,"byte_end":618692,"line_start":25,"line_end":25,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":3657},"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_views/conversions.rs","byte_start":619163,"byte_end":619171,"line_start":38,"line_end":38,"column_start":12,"column_end":20},"name":"to_slice","qualname":"<ArrayView>::to_slice","value":"pub fn to_slice(&Self) -> Option<&'a [A]>","parent":null,"children":[],"decl_id":null,"docs":" Return the array’s data as a slice, if it is contiguous and in standard order.\n Return `None` otherwise.","sig":null,"attributes":[{"value":"/ Return the array’s data as a slice, if it is contiguous and in standard order.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_views/conversions.rs","byte_start":618857,"byte_end":618941,"line_start":33,"line_end":33,"column_start":5,"column_end":87}},{"value":"/ Return `None` otherwise.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_views/conversions.rs","byte_start":618946,"byte_end":618974,"line_start":34,"line_end":34,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_views/conversions.rs","byte_start":618979,"byte_end":618982,"line_start":35,"line_end":35,"column_start":5,"column_end":8}},{"value":"/ Note that while the method is similar to [`ArrayBase::as_slice()`], this method tranfers","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_views/conversions.rs","byte_start":618987,"byte_end":619079,"line_start":36,"line_end":36,"column_start":5,"column_end":97}},{"value":"/ the view's lifetime to the slice, so it is a bit more powerful.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_views/conversions.rs","byte_start":619084,"byte_end":619151,"line_start":37,"line_end":37,"column_start":5,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":3662},"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_views/conversions.rs","byte_start":620353,"byte_end":620364,"line_start":76,"line_end":76,"column_start":12,"column_end":23},"name":"into_scalar","qualname":"<ArrayView>::into_scalar","value":"pub fn into_scalar(Self) -> &'a A","parent":null,"children":[],"decl_id":null,"docs":" Consume the view and return a reference to the single element in the array.","sig":null,"attributes":[{"value":"/ Consume the view and return a reference to the single element in the array.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_views/conversions.rs","byte_start":619787,"byte_end":619866,"line_start":59,"line_end":59,"column_start":5,"column_end":84}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_views/conversions.rs","byte_start":619871,"byte_end":619874,"line_start":60,"line_end":60,"column_start":5,"column_end":8}},{"value":"/ The lifetime of the returned reference matches the lifetime of the data","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_views/conversions.rs","byte_start":619879,"byte_end":619954,"line_start":61,"line_end":61,"column_start":5,"column_end":80}},{"value":"/ the array view was pointing to.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_views/conversions.rs","byte_start":619959,"byte_end":619994,"line_start":62,"line_end":62,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_views/conversions.rs","byte_start":619999,"byte_end":620002,"line_start":63,"line_end":63,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_views/conversions.rs","byte_start":620007,"byte_end":620014,"line_start":64,"line_end":64,"column_start":5,"column_end":12}},{"value":"/ use ndarray::{arr0, Array0};","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_views/conversions.rs","byte_start":620019,"byte_end":620051,"line_start":65,"line_end":65,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_views/conversions.rs","byte_start":620056,"byte_end":620059,"line_start":66,"line_end":66,"column_start":5,"column_end":8}},{"value":"/ // `Foo` doesn't implement `Clone`.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_views/conversions.rs","byte_start":620064,"byte_end":620103,"line_start":67,"line_end":67,"column_start":5,"column_end":44}},{"value":"/ #[derive(Debug, Eq, PartialEq)]","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_views/conversions.rs","byte_start":620108,"byte_end":620143,"line_start":68,"line_end":68,"column_start":5,"column_end":40}},{"value":"/ struct Foo;","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_views/conversions.rs","byte_start":620148,"byte_end":620163,"line_start":69,"line_end":69,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_views/conversions.rs","byte_start":620168,"byte_end":620171,"line_start":70,"line_end":70,"column_start":5,"column_end":8}},{"value":"/ let array: Array0<Foo> = arr0(Foo);","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_views/conversions.rs","byte_start":620176,"byte_end":620215,"line_start":71,"line_end":71,"column_start":5,"column_end":44}},{"value":"/ let view = array.view();","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_views/conversions.rs","byte_start":620220,"byte_end":620248,"line_start":72,"line_end":72,"column_start":5,"column_end":33}},{"value":"/ let scalar: &Foo = view.into_scalar();","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_views/conversions.rs","byte_start":620253,"byte_end":620295,"line_start":73,"line_end":73,"column_start":5,"column_end":47}},{"value":"/ assert_eq!(scalar, &Foo);","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_views/conversions.rs","byte_start":620300,"byte_end":620329,"line_start":74,"line_end":74,"column_start":5,"column_end":34}},{"value":"/ ```","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_views/conversions.rs","byte_start":620334,"byte_end":620341,"line_start":75,"line_end":75,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3666},"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_views/conversions.rs","byte_start":621198,"byte_end":621209,"line_start":103,"line_end":103,"column_start":12,"column_end":23},"name":"into_scalar","qualname":"<ArrayViewMut>::into_scalar","value":"pub fn into_scalar(Self) -> &'a mut A","parent":null,"children":[],"decl_id":null,"docs":" Consume the mutable view and return a mutable reference to the single element in the array.","sig":null,"attributes":[{"value":"/ Consume the mutable view and return a mutable reference to the single element in the array.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_views/conversions.rs","byte_start":620667,"byte_end":620762,"line_start":88,"line_end":88,"column_start":5,"column_end":100}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_views/conversions.rs","byte_start":620767,"byte_end":620770,"line_start":89,"line_end":89,"column_start":5,"column_end":8}},{"value":"/ The lifetime of the returned reference matches the lifetime of the data","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_views/conversions.rs","byte_start":620775,"byte_end":620850,"line_start":90,"line_end":90,"column_start":5,"column_end":80}},{"value":"/ the array view was pointing to.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_views/conversions.rs","byte_start":620855,"byte_end":620890,"line_start":91,"line_end":91,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_views/conversions.rs","byte_start":620895,"byte_end":620898,"line_start":92,"line_end":92,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_views/conversions.rs","byte_start":620903,"byte_end":620910,"line_start":93,"line_end":93,"column_start":5,"column_end":12}},{"value":"/ use ndarray::{arr0, Array0};","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_views/conversions.rs","byte_start":620915,"byte_end":620947,"line_start":94,"line_end":94,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_views/conversions.rs","byte_start":620952,"byte_end":620955,"line_start":95,"line_end":95,"column_start":5,"column_end":8}},{"value":"/ let mut array: Array0<f64> = arr0(5.);","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_views/conversions.rs","byte_start":620960,"byte_end":621002,"line_start":96,"line_end":96,"column_start":5,"column_end":47}},{"value":"/ let view = array.view_mut();","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_views/conversions.rs","byte_start":621007,"byte_end":621039,"line_start":97,"line_end":97,"column_start":5,"column_end":37}},{"value":"/ let mut scalar = view.into_scalar();","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_views/conversions.rs","byte_start":621044,"byte_end":621084,"line_start":98,"line_end":98,"column_start":5,"column_end":45}},{"value":"/ *scalar = 7.;","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_views/conversions.rs","byte_start":621089,"byte_end":621106,"line_start":99,"line_end":99,"column_start":5,"column_end":22}},{"value":"/ assert_eq!(scalar, &7.);","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_views/conversions.rs","byte_start":621111,"byte_end":621139,"line_start":100,"line_end":100,"column_start":5,"column_end":33}},{"value":"/ assert_eq!(array[()], 7.);","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_views/conversions.rs","byte_start":621144,"byte_end":621174,"line_start":101,"line_end":101,"column_start":5,"column_end":35}},{"value":"/ ```","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_views/conversions.rs","byte_start":621179,"byte_end":621186,"line_start":102,"line_end":102,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3671},"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_views/conversions.rs","byte_start":621648,"byte_end":621658,"line_start":118,"line_end":118,"column_start":12,"column_end":22},"name":"into_slice","qualname":"<ArrayViewMut>::into_slice","value":"pub fn into_slice(Self) -> Option<&'a mut [A]>","parent":null,"children":[],"decl_id":null,"docs":" Return the array’s data as a slice, if it is contiguous and in standard order.\n Return `None` otherwise.","sig":null,"attributes":[{"value":"/ Return the array’s data as a slice, if it is contiguous and in standard order.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_views/conversions.rs","byte_start":621374,"byte_end":621458,"line_start":113,"line_end":113,"column_start":5,"column_end":87}},{"value":"/ Return `None` otherwise.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_views/conversions.rs","byte_start":621463,"byte_end":621491,"line_start":114,"line_end":114,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_views/conversions.rs","byte_start":621496,"byte_end":621499,"line_start":115,"line_end":115,"column_start":5,"column_end":8}},{"value":"/ Note that while this is similar to [`ArrayBase::as_slice_mut()`], this method tranfers the","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_views/conversions.rs","byte_start":621504,"byte_end":621598,"line_start":116,"line_end":116,"column_start":5,"column_end":99}},{"value":"/ view's lifetime to the slice.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_views/conversions.rs","byte_start":621603,"byte_end":621636,"line_start":117,"line_end":117,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":3672},"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_views/conversions.rs","byte_start":622090,"byte_end":622104,"line_start":128,"line_end":128,"column_start":12,"column_end":26},"name":"into_cell_view","qualname":"<ArrayViewMut>::into_cell_view","value":"pub fn into_cell_view(Self) -> ArrayView","parent":null,"children":[],"decl_id":null,"docs":" Return a shared view of the array with elements as if they were embedded in cells.","sig":null,"attributes":[{"value":"/ Return a shared view of the array with elements as if they were embedded in cells.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_views/conversions.rs","byte_start":621736,"byte_end":621822,"line_start":122,"line_end":122,"column_start":5,"column_end":91}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_views/conversions.rs","byte_start":621827,"byte_end":621830,"line_start":123,"line_end":123,"column_start":5,"column_end":8}},{"value":"/ The cell view itself can be copied and accessed without exclusivity.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_views/conversions.rs","byte_start":621835,"byte_end":621907,"line_start":124,"line_end":124,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_views/conversions.rs","byte_start":621912,"byte_end":621915,"line_start":125,"line_end":125,"column_start":5,"column_end":8}},{"value":"/ The view acts \"as if\" the elements are temporarily in cells, and elements","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_views/conversions.rs","byte_start":621920,"byte_end":621997,"line_start":126,"line_end":126,"column_start":5,"column_end":82}},{"value":"/ can be changed through shared references using the regular cell methods.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_views/conversions.rs","byte_start":622002,"byte_end":622078,"line_start":127,"line_end":127,"column_start":5,"column_end":81}}]},{"kind":"Method","id":{"krate":0,"index":3680},"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_views/conversions.rs","byte_start":623053,"byte_end":623068,"line_start":160,"line_end":160,"column_start":12,"column_end":27},"name":"into_outer_iter","qualname":"<ArrayView>::into_outer_iter","value":"pub fn into_outer_iter(Self) -> iter::AxisIter where D: RemoveAxis","parent":null,"children":[],"decl_id":null,"docs":" Return an outer iterator for this view.\n","sig":null,"attributes":[{"value":"/ Return an outer iterator for this view.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_views/conversions.rs","byte_start":622905,"byte_end":622948,"line_start":157,"line_end":157,"column_start":5,"column_end":48}},{"value":"deprecated(note = \"This method will be replaced.\")","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_views/conversions.rs","byte_start":622988,"byte_end":623041,"line_start":159,"line_end":159,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":3691},"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_views/conversions.rs","byte_start":624559,"byte_end":624574,"line_start":209,"line_end":209,"column_start":12,"column_end":27},"name":"into_outer_iter","qualname":"<ArrayViewMut>::into_outer_iter","value":"pub fn into_outer_iter(Self) -> iter::AxisIterMut where D: RemoveAxis","parent":null,"children":[],"decl_id":null,"docs":" Return an outer iterator for this view.\n","sig":null,"attributes":[{"value":"/ Return an outer iterator for this view.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_views/conversions.rs","byte_start":624411,"byte_end":624454,"line_start":206,"line_end":206,"column_start":5,"column_end":48}},{"value":"deprecated(note = \"This method will be replaced.\")","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_views/conversions.rs","byte_start":624494,"byte_end":624547,"line_start":208,"line_end":208,"column_start":5,"column_end":58}}]},{"kind":"Trait","id":{"krate":0,"index":3696},"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_views/indexing.rs","byte_start":626573,"byte_end":626584,"line_start":49,"line_end":49,"column_start":11,"column_end":22},"name":"IndexLonger","qualname":"::impl_views::indexing::IndexLonger","value":"IndexLonger<I>","parent":null,"children":[{"krate":0,"index":3698},{"krate":0,"index":3699},{"krate":0,"index":3700},{"krate":0,"index":3701}],"decl_id":null,"docs":" Extra indexing methods for array views","sig":null,"attributes":[{"value":"/ Extra indexing methods for array views","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_views/indexing.rs","byte_start":625159,"byte_end":625201,"line_start":13,"line_end":13,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_views/indexing.rs","byte_start":625202,"byte_end":625205,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ These methods are very similar to regular indexing or calling of the","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_views/indexing.rs","byte_start":625206,"byte_end":625278,"line_start":15,"line_end":15,"column_start":1,"column_end":73}},{"value":"/ `get`/`get_mut` methods that we can use on any array or array view. The","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_views/indexing.rs","byte_start":625279,"byte_end":625354,"line_start":16,"line_end":16,"column_start":1,"column_end":76}},{"value":"/ difference here is in the length of lifetime in the resulting reference.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_views/indexing.rs","byte_start":625355,"byte_end":625431,"line_start":17,"line_end":17,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_views/indexing.rs","byte_start":625432,"byte_end":625435,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ **Note** that the `ArrayView` (read-only) and `ArrayViewMut` (read-write) differ","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_views/indexing.rs","byte_start":625436,"byte_end":625520,"line_start":19,"line_end":19,"column_start":1,"column_end":85}},{"value":"/ in how they are allowed implement this trait -- `ArrayView`'s implementation","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_views/indexing.rs","byte_start":625521,"byte_end":625601,"line_start":20,"line_end":20,"column_start":1,"column_end":81}},{"value":"/ is usual. If you put in a `ArrayView<'a, T, D>` here, you get references","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_views/indexing.rs","byte_start":625602,"byte_end":625678,"line_start":21,"line_end":21,"column_start":1,"column_end":77}},{"value":"/ `&'a T` out.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_views/indexing.rs","byte_start":625679,"byte_end":625695,"line_start":22,"line_end":22,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_views/indexing.rs","byte_start":625696,"byte_end":625699,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ For `ArrayViewMut` to obey the borrowing rules we have to consume the","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_views/indexing.rs","byte_start":625700,"byte_end":625773,"line_start":24,"line_end":24,"column_start":1,"column_end":74}},{"value":"/ view if we call any of these methods. (The equivalent of reborrow is","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_views/indexing.rs","byte_start":625774,"byte_end":625846,"line_start":25,"line_end":25,"column_start":1,"column_end":73}},{"value":"/ `.view_mut()` for read-write array views, but if you can use that,","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_views/indexing.rs","byte_start":625847,"byte_end":625917,"line_start":26,"line_end":26,"column_start":1,"column_end":71}},{"value":"/ then the regular indexing / `get_mut` should suffice, too.)","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_views/indexing.rs","byte_start":625918,"byte_end":625981,"line_start":27,"line_end":27,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_views/indexing.rs","byte_start":625982,"byte_end":625985,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_views/indexing.rs","byte_start":625986,"byte_end":625993,"line_start":29,"line_end":29,"column_start":1,"column_end":8}},{"value":"/ use ndarray::IndexLonger;","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_views/indexing.rs","byte_start":625994,"byte_end":626023,"line_start":30,"line_end":30,"column_start":1,"column_end":30}},{"value":"/ use ndarray::ArrayView;","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_views/indexing.rs","byte_start":626024,"byte_end":626051,"line_start":31,"line_end":31,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_views/indexing.rs","byte_start":626052,"byte_end":626055,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ let data = [0.; 256];","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_views/indexing.rs","byte_start":626056,"byte_end":626081,"line_start":33,"line_end":33,"column_start":1,"column_end":26}},{"value":"/ let long_life_ref = {","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_views/indexing.rs","byte_start":626082,"byte_end":626107,"line_start":34,"line_end":34,"column_start":1,"column_end":26}},{"value":"/     // make a 16 × 16 array view","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_views/indexing.rs","byte_start":626108,"byte_end":626145,"line_start":35,"line_end":35,"column_start":1,"column_end":37}},{"value":"/     let view = ArrayView::from(&data[..]).into_shape((16, 16)).unwrap();","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_views/indexing.rs","byte_start":626146,"byte_end":626222,"line_start":36,"line_end":36,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_views/indexing.rs","byte_start":626223,"byte_end":626226,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/     // index the view and with `IndexLonger`.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_views/indexing.rs","byte_start":626227,"byte_end":626276,"line_start":38,"line_end":38,"column_start":1,"column_end":50}},{"value":"/     // Note here that we get a reference with a life that is derived from","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_views/indexing.rs","byte_start":626277,"byte_end":626354,"line_start":39,"line_end":39,"column_start":1,"column_end":78}},{"value":"/     // `data`, the base data, instead of being derived from the view","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_views/indexing.rs","byte_start":626355,"byte_end":626427,"line_start":40,"line_end":40,"column_start":1,"column_end":73}},{"value":"/     IndexLonger::index(&view, [0, 1])","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_views/indexing.rs","byte_start":626428,"byte_end":626469,"line_start":41,"line_end":41,"column_start":1,"column_end":42}},{"value":"/ };","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_views/indexing.rs","byte_start":626470,"byte_end":626476,"line_start":42,"line_end":42,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_views/indexing.rs","byte_start":626477,"byte_end":626480,"line_start":43,"line_end":43,"column_start":1,"column_end":4}},{"value":"/ // view goes out of scope","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_views/indexing.rs","byte_start":626481,"byte_end":626510,"line_start":44,"line_end":44,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_views/indexing.rs","byte_start":626511,"byte_end":626514,"line_start":45,"line_end":45,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(long_life_ref, &0.);","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_views/indexing.rs","byte_start":626515,"byte_end":626550,"line_start":46,"line_end":46,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_views/indexing.rs","byte_start":626551,"byte_end":626554,"line_start":47,"line_end":47,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_views/indexing.rs","byte_start":626555,"byte_end":626562,"line_start":48,"line_end":48,"column_start":1,"column_end":8}}]},{"kind":"Type","id":{"krate":0,"index":3698},"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_views/indexing.rs","byte_start":626698,"byte_end":626704,"line_start":52,"line_end":52,"column_start":10,"column_end":16},"name":"Output","qualname":"::impl_views::indexing::IndexLonger::Output","value":"type Output;","parent":{"krate":0,"index":3696},"children":[],"decl_id":null,"docs":" The type of the reference to the element that is produced, including\n its lifetime.\n","sig":null,"attributes":[{"value":"/ The type of the reference to the element that is produced, including","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_views/indexing.rs","byte_start":626594,"byte_end":626666,"line_start":50,"line_end":50,"column_start":5,"column_end":77}},{"value":"/ its lifetime.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_views/indexing.rs","byte_start":626671,"byte_end":626688,"line_start":51,"line_end":51,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":3699},"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_views/indexing.rs","byte_start":627166,"byte_end":627171,"line_start":65,"line_end":65,"column_start":8,"column_end":13},"name":"index","qualname":"::impl_views::indexing::IndexLonger::index","value":"pub fn index(Self, I) -> Self::Output","parent":{"krate":0,"index":3696},"children":[],"decl_id":null,"docs":" Get a reference of a element through the view.","sig":null,"attributes":[{"value":"/ Get a reference of a element through the view.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_views/indexing.rs","byte_start":626710,"byte_end":626760,"line_start":53,"line_end":53,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_views/indexing.rs","byte_start":626765,"byte_end":626768,"line_start":54,"line_end":54,"column_start":5,"column_end":8}},{"value":"/ This method is like `Index::index` but with a longer lifetime (matching","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_views/indexing.rs","byte_start":626773,"byte_end":626848,"line_start":55,"line_end":55,"column_start":5,"column_end":80}},{"value":"/ the array view); which we can only do for the array view and not in the","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_views/indexing.rs","byte_start":626853,"byte_end":626928,"line_start":56,"line_end":56,"column_start":5,"column_end":80}},{"value":"/ `Index` trait.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_views/indexing.rs","byte_start":626933,"byte_end":626951,"line_start":57,"line_end":57,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_views/indexing.rs","byte_start":626956,"byte_end":626959,"line_start":58,"line_end":58,"column_start":5,"column_end":8}},{"value":"/ See also [the `get` method][1] which works for all arrays and array","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_views/indexing.rs","byte_start":626964,"byte_end":627035,"line_start":59,"line_end":59,"column_start":5,"column_end":76}},{"value":"/ views.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_views/indexing.rs","byte_start":627040,"byte_end":627050,"line_start":60,"line_end":60,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_views/indexing.rs","byte_start":627055,"byte_end":627058,"line_start":61,"line_end":61,"column_start":5,"column_end":8}},{"value":"/ [1]: struct.ArrayBase.html#method.get","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_views/indexing.rs","byte_start":627063,"byte_end":627104,"line_start":62,"line_end":62,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_views/indexing.rs","byte_start":627109,"byte_end":627112,"line_start":63,"line_end":63,"column_start":5,"column_end":8}},{"value":"/ **Panics** if index is out of bounds.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_views/indexing.rs","byte_start":627117,"byte_end":627158,"line_start":64,"line_end":64,"column_start":5,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":3700},"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_views/indexing.rs","byte_start":627739,"byte_end":627742,"line_start":80,"line_end":80,"column_start":8,"column_end":11},"name":"get","qualname":"::impl_views::indexing::IndexLonger::get","value":"pub fn get(Self, I) -> Option<Self::Output>","parent":{"krate":0,"index":3696},"children":[],"decl_id":null,"docs":" Get a reference of a element through the view.","sig":null,"attributes":[{"value":"/ Get a reference of a element through the view.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_views/indexing.rs","byte_start":627210,"byte_end":627260,"line_start":67,"line_end":67,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_views/indexing.rs","byte_start":627265,"byte_end":627268,"line_start":68,"line_end":68,"column_start":5,"column_end":8}},{"value":"/ This method is like `ArrayBase::get` but with a longer lifetime (matching","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_views/indexing.rs","byte_start":627273,"byte_end":627350,"line_start":69,"line_end":69,"column_start":5,"column_end":82}},{"value":"/ the array view); which we can only do for the array view and not in the","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_views/indexing.rs","byte_start":627355,"byte_end":627430,"line_start":70,"line_end":70,"column_start":5,"column_end":80}},{"value":"/ `Index` trait.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_views/indexing.rs","byte_start":627435,"byte_end":627453,"line_start":71,"line_end":71,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_views/indexing.rs","byte_start":627458,"byte_end":627461,"line_start":72,"line_end":72,"column_start":5,"column_end":8}},{"value":"/ See also [the `get` method][1] (and [`get_mut`][2]) which works for all arrays and array","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_views/indexing.rs","byte_start":627466,"byte_end":627558,"line_start":73,"line_end":73,"column_start":5,"column_end":97}},{"value":"/ views.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_views/indexing.rs","byte_start":627563,"byte_end":627573,"line_start":74,"line_end":74,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_views/indexing.rs","byte_start":627578,"byte_end":627581,"line_start":75,"line_end":75,"column_start":5,"column_end":8}},{"value":"/ [1]: struct.ArrayBase.html#method.get","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_views/indexing.rs","byte_start":627586,"byte_end":627627,"line_start":76,"line_end":76,"column_start":5,"column_end":46}},{"value":"/ [2]: struct.ArrayBase.html#method.get_mut","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_views/indexing.rs","byte_start":627632,"byte_end":627677,"line_start":77,"line_end":77,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_views/indexing.rs","byte_start":627682,"byte_end":627685,"line_start":78,"line_end":78,"column_start":5,"column_end":8}},{"value":"/ **Panics** if index is out of bounds.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_views/indexing.rs","byte_start":627690,"byte_end":627731,"line_start":79,"line_end":79,"column_start":5,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":3701},"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_views/indexing.rs","byte_start":628337,"byte_end":628341,"line_start":97,"line_end":97,"column_start":15,"column_end":19},"name":"uget","qualname":"::impl_views::indexing::IndexLonger::uget","value":"pub unsafe fn uget(Self, I) -> Self::Output","parent":{"krate":0,"index":3696},"children":[],"decl_id":null,"docs":" Get a reference of a element through the view without boundary check","sig":null,"attributes":[{"value":"/ Get a reference of a element through the view without boundary check","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_views/indexing.rs","byte_start":627789,"byte_end":627861,"line_start":82,"line_end":82,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_views/indexing.rs","byte_start":627866,"byte_end":627869,"line_start":83,"line_end":83,"column_start":5,"column_end":8}},{"value":"/ This method is like `elem` with a longer lifetime (matching the array","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_views/indexing.rs","byte_start":627874,"byte_end":627947,"line_start":84,"line_end":84,"column_start":5,"column_end":78}},{"value":"/ view); which we can't do for general arrays.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_views/indexing.rs","byte_start":627952,"byte_end":628000,"line_start":85,"line_end":85,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_views/indexing.rs","byte_start":628005,"byte_end":628008,"line_start":86,"line_end":86,"column_start":5,"column_end":8}},{"value":"/ See also [the `uget` method][1] which works for all arrays and array","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_views/indexing.rs","byte_start":628013,"byte_end":628085,"line_start":87,"line_end":87,"column_start":5,"column_end":77}},{"value":"/ views.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_views/indexing.rs","byte_start":628090,"byte_end":628100,"line_start":88,"line_end":88,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_views/indexing.rs","byte_start":628105,"byte_end":628108,"line_start":89,"line_end":89,"column_start":5,"column_end":8}},{"value":"/ [1]: struct.ArrayBase.html#method.uget","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_views/indexing.rs","byte_start":628113,"byte_end":628155,"line_start":90,"line_end":90,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_views/indexing.rs","byte_start":628160,"byte_end":628163,"line_start":91,"line_end":91,"column_start":5,"column_end":8}},{"value":"/ **Note:** only unchecked for non-debug builds of ndarray.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_views/indexing.rs","byte_start":628168,"byte_end":628229,"line_start":92,"line_end":92,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_views/indexing.rs","byte_start":628234,"byte_end":628237,"line_start":93,"line_end":93,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_views/indexing.rs","byte_start":628242,"byte_end":628254,"line_start":94,"line_end":94,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_views/indexing.rs","byte_start":628259,"byte_end":628262,"line_start":95,"line_end":95,"column_start":5,"column_end":8}},{"value":"/ The caller must ensure that the index is in-bounds.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_views/indexing.rs","byte_start":628267,"byte_end":628322,"line_start":96,"line_end":96,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":3730},"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_views/splitting.rs","byte_start":636118,"byte_end":636126,"line_start":90,"line_end":90,"column_start":12,"column_end":20},"name":"split_at","qualname":"<ArrayView>::split_at","value":"pub fn split_at(Self, Axis, Ix) -> (Self, Self)","parent":null,"children":[],"decl_id":null,"docs":" Split the array view along `axis` and return one view strictly before the\n split and one view after the split.","sig":null,"attributes":[{"value":"/ Split the array view along `axis` and return one view strictly before the","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_views/splitting.rs","byte_start":632357,"byte_end":632434,"line_start":17,"line_end":17,"column_start":5,"column_end":82}},{"value":"/ split and one view after the split.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_views/splitting.rs","byte_start":632439,"byte_end":632478,"line_start":18,"line_end":18,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_views/splitting.rs","byte_start":632483,"byte_end":632486,"line_start":19,"line_end":19,"column_start":5,"column_end":8}},{"value":"/ **Panics** if `axis` or `index` is out of bounds.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_views/splitting.rs","byte_start":632491,"byte_end":632544,"line_start":20,"line_end":20,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_views/splitting.rs","byte_start":632549,"byte_end":632552,"line_start":21,"line_end":21,"column_start":5,"column_end":8}},{"value":"/ **Examples:**","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_views/splitting.rs","byte_start":632557,"byte_end":632574,"line_start":22,"line_end":22,"column_start":5,"column_end":22}},{"value":"/ ```rust","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_views/splitting.rs","byte_start":632579,"byte_end":632590,"line_start":23,"line_end":23,"column_start":5,"column_end":16}},{"value":"/ # use ndarray::prelude::*;","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_views/splitting.rs","byte_start":632595,"byte_end":632625,"line_start":24,"line_end":24,"column_start":5,"column_end":35}},{"value":"/ let a = aview2(&[[0, 1, 2, 3],","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_views/splitting.rs","byte_start":632630,"byte_end":632664,"line_start":25,"line_end":25,"column_start":5,"column_end":39}},{"value":"/                  [4, 5, 6, 7],","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_views/splitting.rs","byte_start":632669,"byte_end":632703,"line_start":26,"line_end":26,"column_start":5,"column_end":39}},{"value":"/                  [8, 9, 0, 1]]);","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_views/splitting.rs","byte_start":632708,"byte_end":632744,"line_start":27,"line_end":27,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_views/splitting.rs","byte_start":632749,"byte_end":632752,"line_start":28,"line_end":28,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_views/splitting.rs","byte_start":632757,"byte_end":632764,"line_start":29,"line_end":29,"column_start":5,"column_end":12}},{"value":"/ The array view `a` has two axes and shape 3 × 4:","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_views/splitting.rs","byte_start":632769,"byte_end":632822,"line_start":30,"line_end":30,"column_start":5,"column_end":57}},{"value":"/ ```text","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_views/splitting.rs","byte_start":632827,"byte_end":632838,"line_start":31,"line_end":31,"column_start":5,"column_end":16}},{"value":"/          ──▶ Axis(1)","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_views/splitting.rs","byte_start":632843,"byte_end":632873,"line_start":32,"line_end":32,"column_start":5,"column_end":29}},{"value":"/         ┌─────┬─────┬─────┬─────┐ 0","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_views/splitting.rs","byte_start":632878,"byte_end":632967,"line_start":33,"line_end":33,"column_start":5,"column_end":44}},{"value":"/       │ │ a₀₀ │ a₀₁ │ a₀₂ │ a₀₃ │","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_views/splitting.rs","byte_start":632972,"byte_end":633037,"line_start":34,"line_end":34,"column_start":5,"column_end":42}},{"value":"/       ▼ ├─────┼─────┼─────┼─────┤ 1","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_views/splitting.rs","byte_start":633042,"byte_end":633133,"line_start":35,"line_end":35,"column_start":5,"column_end":44}},{"value":"/  Axis(0)│ a₁₀ │ a₁₁ │ a₁₂ │ a₁₃ │","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_views/splitting.rs","byte_start":633138,"byte_end":633201,"line_start":36,"line_end":36,"column_start":5,"column_end":42}},{"value":"/         ├─────┼─────┼─────┼─────┤ 2","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_views/splitting.rs","byte_start":633206,"byte_end":633295,"line_start":37,"line_end":37,"column_start":5,"column_end":44}},{"value":"/         │ a₂₀ │ a₂₁ │ a₂₂ │ a₂₃ │","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_views/splitting.rs","byte_start":633300,"byte_end":633363,"line_start":38,"line_end":38,"column_start":5,"column_end":42}},{"value":"/         └─────┴─────┴─────┴─────┘ 3 ↑","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_views/splitting.rs","byte_start":633368,"byte_end":633461,"line_start":39,"line_end":39,"column_start":5,"column_end":46}},{"value":"/         0     1     2     3     4 ← possible split_at indices.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_views/splitting.rs","byte_start":633466,"byte_end":633534,"line_start":40,"line_end":40,"column_start":5,"column_end":71}},{"value":"/ ```","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_views/splitting.rs","byte_start":633539,"byte_end":633546,"line_start":41,"line_end":41,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_views/splitting.rs","byte_start":633551,"byte_end":633554,"line_start":42,"line_end":42,"column_start":5,"column_end":8}},{"value":"/ Row indices increase along `Axis(0)`, and column indices increase along","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_views/splitting.rs","byte_start":633559,"byte_end":633634,"line_start":43,"line_end":43,"column_start":5,"column_end":80}},{"value":"/ `Axis(1)`. Note that we split “before” an element index, and that","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_views/splitting.rs","byte_start":633639,"byte_end":633712,"line_start":44,"line_end":44,"column_start":5,"column_end":74}},{"value":"/ both 0 and the endpoint are valid split indices.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_views/splitting.rs","byte_start":633717,"byte_end":633769,"line_start":45,"line_end":45,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_views/splitting.rs","byte_start":633774,"byte_end":633777,"line_start":46,"line_end":46,"column_start":5,"column_end":8}},{"value":"/ **Example 1**: Split `a` along the first axis, in this case the rows, at","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_views/splitting.rs","byte_start":633782,"byte_end":633858,"line_start":47,"line_end":47,"column_start":5,"column_end":81}},{"value":"/ index 2.<br>","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_views/splitting.rs","byte_start":633863,"byte_end":633879,"line_start":48,"line_end":48,"column_start":5,"column_end":21}},{"value":"/ This produces views v1 and v2 of shapes 2 × 4 and 1 × 4:","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_views/splitting.rs","byte_start":633884,"byte_end":633946,"line_start":49,"line_end":49,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_views/splitting.rs","byte_start":633951,"byte_end":633954,"line_start":50,"line_end":50,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_views/splitting.rs","byte_start":633959,"byte_end":633970,"line_start":51,"line_end":51,"column_start":5,"column_end":16}},{"value":"/ # use ndarray::prelude::*;","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_views/splitting.rs","byte_start":633975,"byte_end":634005,"line_start":52,"line_end":52,"column_start":5,"column_end":35}},{"value":"/ # let a = aview2(&[[0; 4]; 3]);","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_views/splitting.rs","byte_start":634010,"byte_end":634045,"line_start":53,"line_end":53,"column_start":5,"column_end":40}},{"value":"/ let (v1, v2) = a.split_at(Axis(0), 2);","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_views/splitting.rs","byte_start":634050,"byte_end":634092,"line_start":54,"line_end":54,"column_start":5,"column_end":47}},{"value":"/ ```","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_views/splitting.rs","byte_start":634097,"byte_end":634104,"line_start":55,"line_end":55,"column_start":5,"column_end":12}},{"value":"/ ```text","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_views/splitting.rs","byte_start":634109,"byte_end":634120,"line_start":56,"line_end":56,"column_start":5,"column_end":16}},{"value":"/         ┌─────┬─────┬─────┬─────┐       0  ↓ indices","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_views/splitting.rs","byte_start":634125,"byte_end":634233,"line_start":57,"line_end":57,"column_start":5,"column_end":61}},{"value":"/         │ a₀₀ │ a₀₁ │ a₀₂ │ a₀₃ │            along Axis(0)","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_views/splitting.rs","byte_start":634238,"byte_end":634326,"line_start":58,"line_end":58,"column_start":5,"column_end":67}},{"value":"/         ├─────┼─────┼─────┼─────┤ v1    1","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_views/splitting.rs","byte_start":634331,"byte_end":634426,"line_start":59,"line_end":59,"column_start":5,"column_end":50}},{"value":"/         │ a₁₀ │ a₁₁ │ a₁₂ │ a₁₃ │","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_views/splitting.rs","byte_start":634431,"byte_end":634494,"line_start":60,"line_end":60,"column_start":5,"column_end":42}},{"value":"/         └─────┴─────┴─────┴─────┘","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_views/splitting.rs","byte_start":634499,"byte_end":634586,"line_start":61,"line_end":61,"column_start":5,"column_end":42}},{"value":"/         ┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄       2","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_views/splitting.rs","byte_start":634591,"byte_end":634686,"line_start":62,"line_end":62,"column_start":5,"column_end":50}},{"value":"/         ┌─────┬─────┬─────┬─────┐","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_views/splitting.rs","byte_start":634691,"byte_end":634778,"line_start":63,"line_end":63,"column_start":5,"column_end":42}},{"value":"/         │ a₂₀ │ a₂₁ │ a₂₂ │ a₂₃ │ v2","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_views/splitting.rs","byte_start":634783,"byte_end":634849,"line_start":64,"line_end":64,"column_start":5,"column_end":45}},{"value":"/         └─────┴─────┴─────┴─────┘       3","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_views/splitting.rs","byte_start":634854,"byte_end":634949,"line_start":65,"line_end":65,"column_start":5,"column_end":50}},{"value":"/ ```","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_views/splitting.rs","byte_start":634954,"byte_end":634961,"line_start":66,"line_end":66,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_views/splitting.rs","byte_start":634966,"byte_end":634969,"line_start":67,"line_end":67,"column_start":5,"column_end":8}},{"value":"/ **Example 2**: Split `a` along the second axis, in this case the","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_views/splitting.rs","byte_start":634974,"byte_end":635042,"line_start":68,"line_end":68,"column_start":5,"column_end":73}},{"value":"/ columns, at index 2.<br>","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_views/splitting.rs","byte_start":635047,"byte_end":635075,"line_start":69,"line_end":69,"column_start":5,"column_end":33}},{"value":"/ This produces views u1 and u2 of shapes 3 × 2 and 3 × 2:","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_views/splitting.rs","byte_start":635080,"byte_end":635143,"line_start":70,"line_end":70,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_views/splitting.rs","byte_start":635148,"byte_end":635151,"line_start":71,"line_end":71,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_views/splitting.rs","byte_start":635156,"byte_end":635167,"line_start":72,"line_end":72,"column_start":5,"column_end":16}},{"value":"/ # use ndarray::prelude::*;","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_views/splitting.rs","byte_start":635172,"byte_end":635202,"line_start":73,"line_end":73,"column_start":5,"column_end":35}},{"value":"/ # let a = aview2(&[[0; 4]; 3]);","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_views/splitting.rs","byte_start":635207,"byte_end":635242,"line_start":74,"line_end":74,"column_start":5,"column_end":40}},{"value":"/ let (u1, u2) = a.split_at(Axis(1), 2);","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_views/splitting.rs","byte_start":635247,"byte_end":635289,"line_start":75,"line_end":75,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_views/splitting.rs","byte_start":635294,"byte_end":635297,"line_start":76,"line_end":76,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_views/splitting.rs","byte_start":635302,"byte_end":635309,"line_start":77,"line_end":77,"column_start":5,"column_end":12}},{"value":"/ ```text","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_views/splitting.rs","byte_start":635314,"byte_end":635325,"line_start":78,"line_end":78,"column_start":5,"column_end":16}},{"value":"/              u1             u2","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_views/splitting.rs","byte_start":635330,"byte_end":635364,"line_start":79,"line_end":79,"column_start":5,"column_end":39}},{"value":"/         ┌─────┬─────┐┊┌─────┬─────┐","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_views/splitting.rs","byte_start":635369,"byte_end":635462,"line_start":80,"line_end":80,"column_start":5,"column_end":44}},{"value":"/         │ a₀₀ │ a₀₁ │┊│ a₀₂ │ a₀₃ │","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_views/splitting.rs","byte_start":635467,"byte_end":635536,"line_start":81,"line_end":81,"column_start":5,"column_end":44}},{"value":"/         ├─────┼─────┤┊├─────┼─────┤","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_views/splitting.rs","byte_start":635541,"byte_end":635634,"line_start":82,"line_end":82,"column_start":5,"column_end":44}},{"value":"/         │ a₁₀ │ a₁₁ │┊│ a₁₂ │ a₁₃ │","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_views/splitting.rs","byte_start":635639,"byte_end":635708,"line_start":83,"line_end":83,"column_start":5,"column_end":44}},{"value":"/         ├─────┼─────┤┊├─────┼─────┤","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_views/splitting.rs","byte_start":635713,"byte_end":635806,"line_start":84,"line_end":84,"column_start":5,"column_end":44}},{"value":"/         │ a₂₀ │ a₂₁ │┊│ a₂₂ │ a₂₃ │","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_views/splitting.rs","byte_start":635811,"byte_end":635880,"line_start":85,"line_end":85,"column_start":5,"column_end":44}},{"value":"/         └─────┴─────┘┊└─────┴─────┘","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_views/splitting.rs","byte_start":635885,"byte_end":635978,"line_start":86,"line_end":86,"column_start":5,"column_end":44}},{"value":"/         0     1      2      3     4  indices →","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_views/splitting.rs","byte_start":635983,"byte_end":636035,"line_start":87,"line_end":87,"column_start":5,"column_end":55}},{"value":"/                                      along Axis(1)","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_views/splitting.rs","byte_start":636040,"byte_end":636094,"line_start":88,"line_end":88,"column_start":5,"column_end":59}},{"value":"/ ```","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_views/splitting.rs","byte_start":636099,"byte_end":636106,"line_start":89,"line_end":89,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3735},"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_views/splitting.rs","byte_start":636671,"byte_end":636679,"line_start":107,"line_end":107,"column_start":12,"column_end":20},"name":"split_at","qualname":"<ArrayViewMut>::split_at","value":"pub fn split_at(Self, Axis, Ix) -> (Self, Self)","parent":null,"children":[],"decl_id":null,"docs":" Split the array view along `axis` and return one mutable view strictly\n before the split and one mutable view after the split.","sig":null,"attributes":[{"value":"/ Split the array view along `axis` and return one mutable view strictly","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_views/splitting.rs","byte_start":636456,"byte_end":636530,"line_start":103,"line_end":103,"column_start":5,"column_end":79}},{"value":"/ before the split and one mutable view after the split.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_views/splitting.rs","byte_start":636535,"byte_end":636593,"line_start":104,"line_end":104,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_views/splitting.rs","byte_start":636598,"byte_end":636601,"line_start":105,"line_end":105,"column_start":5,"column_end":8}},{"value":"/ **Panics** if `axis` or `index` is out of bounds.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_views/splitting.rs","byte_start":636606,"byte_end":636659,"line_start":106,"line_end":106,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":3736},"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_views/splitting.rs","byte_start":637728,"byte_end":637744,"line_start":131,"line_end":131,"column_start":12,"column_end":28},"name":"multi_slice_move","qualname":"<ArrayViewMut>::multi_slice_move","value":"pub fn multi_slice_move<M>(Self, M) -> M::Output where M: MultiSliceArg","parent":null,"children":[],"decl_id":null,"docs":" Split the view into multiple disjoint slices.","sig":null,"attributes":[{"value":"/ Split the view into multiple disjoint slices.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_views/splitting.rs","byte_start":636915,"byte_end":636964,"line_start":114,"line_end":114,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_views/splitting.rs","byte_start":636969,"byte_end":636972,"line_start":115,"line_end":115,"column_start":5,"column_end":8}},{"value":"/ This is similar to [`.multi_slice_mut()`], but `.multi_slice_move()`","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_views/splitting.rs","byte_start":636977,"byte_end":637049,"line_start":116,"line_end":116,"column_start":5,"column_end":77}},{"value":"/ consumes `self` and produces views with lifetimes matching that of","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_views/splitting.rs","byte_start":637054,"byte_end":637124,"line_start":117,"line_end":117,"column_start":5,"column_end":75}},{"value":"/ `self`.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_views/splitting.rs","byte_start":637129,"byte_end":637140,"line_start":118,"line_end":118,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_views/splitting.rs","byte_start":637145,"byte_end":637148,"line_start":119,"line_end":119,"column_start":5,"column_end":8}},{"value":"/ See [*Slicing*](#slicing) for full documentation. See also","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_views/splitting.rs","byte_start":637153,"byte_end":637215,"line_start":120,"line_end":120,"column_start":5,"column_end":67}},{"value":"/ [`MultiSliceArg`], [`s!`], [`SliceArg`](crate::SliceArg), and","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_views/splitting.rs","byte_start":637220,"byte_end":637285,"line_start":121,"line_end":121,"column_start":5,"column_end":70}},{"value":"/ [`SliceInfo`](crate::SliceInfo).","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_views/splitting.rs","byte_start":637290,"byte_end":637326,"line_start":122,"line_end":122,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_views/splitting.rs","byte_start":637331,"byte_end":637334,"line_start":123,"line_end":123,"column_start":5,"column_end":8}},{"value":"/ [`.multi_slice_mut()`]: struct.ArrayBase.html#method.multi_slice_mut","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_views/splitting.rs","byte_start":637339,"byte_end":637411,"line_start":124,"line_end":124,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_views/splitting.rs","byte_start":637416,"byte_end":637419,"line_start":125,"line_end":125,"column_start":5,"column_end":8}},{"value":"/ **Panics** if any of the following occur:","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_views/splitting.rs","byte_start":637424,"byte_end":637469,"line_start":126,"line_end":126,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_views/splitting.rs","byte_start":637474,"byte_end":637477,"line_start":127,"line_end":127,"column_start":5,"column_end":8}},{"value":"/ * if any of the views would intersect (i.e. if any element would appear in multiple slices)","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_views/splitting.rs","byte_start":637482,"byte_end":637577,"line_start":128,"line_end":128,"column_start":5,"column_end":100}},{"value":"/ * if an index is out of bounds or step size is zero","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_views/splitting.rs","byte_start":637582,"byte_end":637637,"line_start":129,"line_end":129,"column_start":5,"column_end":60}},{"value":"/ * if `D` is `IxDyn` and `info` does not match the number of array axes","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_views/splitting.rs","byte_start":637642,"byte_end":637716,"line_start":130,"line_end":130,"column_start":5,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":3759},"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_raw_views.rs","byte_start":640739,"byte_end":640753,"line_start":68,"line_end":68,"column_start":19,"column_end":33},"name":"from_shape_ptr","qualname":"<RawArrayView<A, D>>::from_shape_ptr","value":"pub unsafe fn from_shape_ptr<Sh>(Sh, *const A) -> Self where\nSh: Into<StrideShape<D>>","parent":null,"children":[],"decl_id":null,"docs":" Create an `RawArrayView<A, D>` from shape information and a raw pointer\n to the elements.","sig":null,"attributes":[{"value":"/ Create an `RawArrayView<A, D>` from shape information and a raw pointer","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_raw_views.rs","byte_start":638715,"byte_end":638790,"line_start":28,"line_end":28,"column_start":5,"column_end":80}},{"value":"/ to the elements.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_raw_views.rs","byte_start":638795,"byte_end":638815,"line_start":29,"line_end":29,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_raw_views.rs","byte_start":638820,"byte_end":638823,"line_start":30,"line_end":30,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_raw_views.rs","byte_start":638828,"byte_end":638840,"line_start":31,"line_end":31,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_raw_views.rs","byte_start":638845,"byte_end":638848,"line_start":32,"line_end":32,"column_start":5,"column_end":8}},{"value":"/ The caller is responsible for ensuring all of the following:","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_raw_views.rs","byte_start":638853,"byte_end":638917,"line_start":33,"line_end":33,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_raw_views.rs","byte_start":638922,"byte_end":638925,"line_start":34,"line_end":34,"column_start":5,"column_end":8}},{"value":"/ * `ptr` must be non-null, and it must be safe to [`.offset()`] `ptr` by","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_raw_views.rs","byte_start":638930,"byte_end":639005,"line_start":35,"line_end":35,"column_start":5,"column_end":80}},{"value":"/   zero.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_raw_views.rs","byte_start":639010,"byte_end":639021,"line_start":36,"line_end":36,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_raw_views.rs","byte_start":639026,"byte_end":639029,"line_start":37,"line_end":37,"column_start":5,"column_end":8}},{"value":"/ * It must be safe to [`.offset()`] the pointer repeatedly along all","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_raw_views.rs","byte_start":639034,"byte_end":639105,"line_start":38,"line_end":38,"column_start":5,"column_end":76}},{"value":"/   axes and calculate the `count`s for the `.offset()` calls without","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_raw_views.rs","byte_start":639110,"byte_end":639181,"line_start":39,"line_end":39,"column_start":5,"column_end":76}},{"value":"/   overflow, even if the array is empty or the elements are zero-sized.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_raw_views.rs","byte_start":639186,"byte_end":639260,"line_start":40,"line_end":40,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_raw_views.rs","byte_start":639265,"byte_end":639268,"line_start":41,"line_end":41,"column_start":5,"column_end":8}},{"value":"/   In other words,","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_raw_views.rs","byte_start":639273,"byte_end":639294,"line_start":42,"line_end":42,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_raw_views.rs","byte_start":639299,"byte_end":639302,"line_start":43,"line_end":43,"column_start":5,"column_end":8}},{"value":"/   * All possible pointers generated by moving along all axes must be in","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_raw_views.rs","byte_start":639307,"byte_end":639382,"line_start":44,"line_end":44,"column_start":5,"column_end":80}},{"value":"/     bounds or one byte past the end of a single allocation with element","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_raw_views.rs","byte_start":639387,"byte_end":639462,"line_start":45,"line_end":45,"column_start":5,"column_end":80}},{"value":"/     type `A`. The only exceptions are if the array is empty or the element","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_raw_views.rs","byte_start":639467,"byte_end":639545,"line_start":46,"line_end":46,"column_start":5,"column_end":83}},{"value":"/     type is zero-sized. In these cases, `ptr` may be dangling, but it must","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_raw_views.rs","byte_start":639550,"byte_end":639628,"line_start":47,"line_end":47,"column_start":5,"column_end":83}},{"value":"/     still be safe to [`.offset()`] the pointer along the axes.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_raw_views.rs","byte_start":639633,"byte_end":639699,"line_start":48,"line_end":48,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_raw_views.rs","byte_start":639704,"byte_end":639707,"line_start":49,"line_end":49,"column_start":5,"column_end":8}},{"value":"/   * The offset in units of bytes between the least address and greatest","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_raw_views.rs","byte_start":639712,"byte_end":639787,"line_start":50,"line_end":50,"column_start":5,"column_end":80}},{"value":"/     address by moving along all axes must not exceed `isize::MAX`. This","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_raw_views.rs","byte_start":639792,"byte_end":639867,"line_start":51,"line_end":51,"column_start":5,"column_end":80}},{"value":"/     constraint prevents the computed offset, in bytes, from overflowing","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_raw_views.rs","byte_start":639872,"byte_end":639947,"line_start":52,"line_end":52,"column_start":5,"column_end":80}},{"value":"/     `isize` regardless of the starting point due to past offsets.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_raw_views.rs","byte_start":639952,"byte_end":640021,"line_start":53,"line_end":53,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_raw_views.rs","byte_start":640026,"byte_end":640029,"line_start":54,"line_end":54,"column_start":5,"column_end":8}},{"value":"/   * The offset in units of `A` between the least address and greatest","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_raw_views.rs","byte_start":640034,"byte_end":640107,"line_start":55,"line_end":55,"column_start":5,"column_end":78}},{"value":"/     address by moving along all axes must not exceed `isize::MAX`. This","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_raw_views.rs","byte_start":640112,"byte_end":640187,"line_start":56,"line_end":56,"column_start":5,"column_end":80}},{"value":"/     constraint prevents overflow when calculating the `count` parameter to","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_raw_views.rs","byte_start":640192,"byte_end":640270,"line_start":57,"line_end":57,"column_start":5,"column_end":83}},{"value":"/     [`.offset()`] regardless of the starting point due to past offsets.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_raw_views.rs","byte_start":640275,"byte_end":640350,"line_start":58,"line_end":58,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_raw_views.rs","byte_start":640355,"byte_end":640358,"line_start":59,"line_end":59,"column_start":5,"column_end":8}},{"value":"/ * The product of non-zero axis lengths must not exceed `isize::MAX`.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_raw_views.rs","byte_start":640363,"byte_end":640435,"line_start":60,"line_end":60,"column_start":5,"column_end":77}},{"value":"/ ","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_raw_views.rs","byte_start":640440,"byte_end":640444,"line_start":61,"line_end":61,"column_start":5,"column_end":9}},{"value":"/ * Strides must be non-negative.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_raw_views.rs","byte_start":640449,"byte_end":640484,"line_start":62,"line_end":62,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_raw_views.rs","byte_start":640489,"byte_end":640492,"line_start":63,"line_end":63,"column_start":5,"column_end":8}},{"value":"/ This function can use debug assertions to check some of these requirements,","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_raw_views.rs","byte_start":640497,"byte_end":640576,"line_start":64,"line_end":64,"column_start":5,"column_end":84}},{"value":"/ but it's not a complete check.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_raw_views.rs","byte_start":640581,"byte_end":640615,"line_start":65,"line_end":65,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_raw_views.rs","byte_start":640620,"byte_end":640623,"line_start":66,"line_end":66,"column_start":5,"column_end":8}},{"value":"/ [`.offset()`]: https://doc.rust-lang.org/stable/std/primitive.pointer.html#method.offset","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_raw_views.rs","byte_start":640628,"byte_end":640720,"line_start":67,"line_end":67,"column_start":5,"column_end":97}}]},{"kind":"Method","id":{"krate":0,"index":3761},"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_raw_views.rs","byte_start":641826,"byte_end":641841,"line_start":96,"line_end":96,"column_start":19,"column_end":34},"name":"deref_into_view","qualname":"<RawArrayView<A, D>>::deref_into_view","value":"pub unsafe fn deref_into_view<'a>(Self) -> ArrayView","parent":null,"children":[],"decl_id":null,"docs":" Converts to a read-only view of the array.","sig":null,"attributes":[{"value":"/ Converts to a read-only view of the array.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_raw_views.rs","byte_start":641458,"byte_end":641504,"line_start":87,"line_end":87,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_raw_views.rs","byte_start":641509,"byte_end":641512,"line_start":88,"line_end":88,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_raw_views.rs","byte_start":641517,"byte_end":641529,"line_start":89,"line_end":89,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_raw_views.rs","byte_start":641534,"byte_end":641537,"line_start":90,"line_end":90,"column_start":5,"column_end":8}},{"value":"/ From a safety standpoint, this is equivalent to dereferencing a raw","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_raw_views.rs","byte_start":641542,"byte_end":641613,"line_start":91,"line_end":91,"column_start":5,"column_end":76}},{"value":"/ pointer for every element in the array. You must ensure that all of the","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_raw_views.rs","byte_start":641618,"byte_end":641693,"line_start":92,"line_end":92,"column_start":5,"column_end":80}},{"value":"/ data is valid, ensure that the pointer is aligned, and choose the","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_raw_views.rs","byte_start":641698,"byte_end":641767,"line_start":93,"line_end":93,"column_start":5,"column_end":74}},{"value":"/ correct lifetime.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_raw_views.rs","byte_start":641772,"byte_end":641793,"line_start":94,"line_end":94,"column_start":5,"column_end":26}},{"value":"inline","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_raw_views.rs","byte_start":641798,"byte_end":641807,"line_start":95,"line_end":95,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3763},"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_raw_views.rs","byte_start":642282,"byte_end":642290,"line_start":108,"line_end":108,"column_start":12,"column_end":20},"name":"split_at","qualname":"<RawArrayView<A, D>>::split_at","value":"pub fn split_at(Self, Axis, Ix) -> (Self, Self)","parent":null,"children":[],"decl_id":null,"docs":" Split the array view along `axis` and return one array pointer strictly\n before the split and one array pointer after the split.","sig":null,"attributes":[{"value":"/ Split the array view along `axis` and return one array pointer strictly","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_raw_views.rs","byte_start":642065,"byte_end":642140,"line_start":104,"line_end":104,"column_start":5,"column_end":80}},{"value":"/ before the split and one array pointer after the split.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_raw_views.rs","byte_start":642145,"byte_end":642204,"line_start":105,"line_end":105,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_raw_views.rs","byte_start":642209,"byte_end":642212,"line_start":106,"line_end":106,"column_start":5,"column_end":8}},{"value":"/ **Panics** if `axis` or `index` is out of bounds.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_raw_views.rs","byte_start":642217,"byte_end":642270,"line_start":107,"line_end":107,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":3764},"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_raw_views.rs","byte_start":643638,"byte_end":643642,"line_start":141,"line_end":141,"column_start":12,"column_end":16},"name":"cast","qualname":"<RawArrayView<A, D>>::cast","value":"pub fn cast<B>(Self) -> RawArrayView<B, D>","parent":null,"children":[],"decl_id":null,"docs":" Cast the raw pointer of the raw array view to a different type","sig":null,"attributes":[{"value":"/ Cast the raw pointer of the raw array view to a different type","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_raw_views.rs","byte_start":643163,"byte_end":643229,"line_start":131,"line_end":131,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_raw_views.rs","byte_start":643234,"byte_end":643237,"line_start":132,"line_end":132,"column_start":5,"column_end":8}},{"value":"/ **Panics** if element size is not compatible.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_raw_views.rs","byte_start":643242,"byte_end":643291,"line_start":133,"line_end":133,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_raw_views.rs","byte_start":643296,"byte_end":643299,"line_start":134,"line_end":134,"column_start":5,"column_end":8}},{"value":"/ Lack of panic does not imply it is a valid cast. The cast works the same","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_raw_views.rs","byte_start":643304,"byte_end":643380,"line_start":135,"line_end":135,"column_start":5,"column_end":81}},{"value":"/ way as regular raw pointer casts.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_raw_views.rs","byte_start":643385,"byte_end":643422,"line_start":136,"line_end":136,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_raw_views.rs","byte_start":643427,"byte_end":643430,"line_start":137,"line_end":137,"column_start":5,"column_end":8}},{"value":"/ While this method is safe, for the same reason as regular raw pointer","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_raw_views.rs","byte_start":643435,"byte_end":643508,"line_start":138,"line_end":138,"column_start":5,"column_end":78}},{"value":"/ casts are safe, access through the produced raw view is only possible","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_raw_views.rs","byte_start":643513,"byte_end":643586,"line_start":139,"line_end":139,"column_start":5,"column_end":78}},{"value":"/ in an unsafe block or function.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_raw_views.rs","byte_start":643591,"byte_end":643626,"line_start":140,"line_end":140,"column_start":5,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":3771},"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_raw_views.rs","byte_start":646552,"byte_end":646566,"line_start":210,"line_end":210,"column_start":19,"column_end":33},"name":"from_shape_ptr","qualname":"<RawArrayViewMut<A, D>>::from_shape_ptr","value":"pub unsafe fn from_shape_ptr<Sh>(Sh, *mut A) -> Self where\nSh: Into<StrideShape<D>>","parent":null,"children":[],"decl_id":null,"docs":" Create an `RawArrayViewMut<A, D>` from shape information and a raw\n pointer to the elements.","sig":null,"attributes":[{"value":"/ Create an `RawArrayViewMut<A, D>` from shape information and a raw","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_raw_views.rs","byte_start":644525,"byte_end":644595,"line_start":170,"line_end":170,"column_start":5,"column_end":75}},{"value":"/ pointer to the elements.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_raw_views.rs","byte_start":644600,"byte_end":644628,"line_start":171,"line_end":171,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_raw_views.rs","byte_start":644633,"byte_end":644636,"line_start":172,"line_end":172,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_raw_views.rs","byte_start":644641,"byte_end":644653,"line_start":173,"line_end":173,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_raw_views.rs","byte_start":644658,"byte_end":644661,"line_start":174,"line_end":174,"column_start":5,"column_end":8}},{"value":"/ The caller is responsible for ensuring all of the following:","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_raw_views.rs","byte_start":644666,"byte_end":644730,"line_start":175,"line_end":175,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_raw_views.rs","byte_start":644735,"byte_end":644738,"line_start":176,"line_end":176,"column_start":5,"column_end":8}},{"value":"/ * `ptr` must be non-null, and it must be safe to [`.offset()`] `ptr` by","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_raw_views.rs","byte_start":644743,"byte_end":644818,"line_start":177,"line_end":177,"column_start":5,"column_end":80}},{"value":"/   zero.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_raw_views.rs","byte_start":644823,"byte_end":644834,"line_start":178,"line_end":178,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_raw_views.rs","byte_start":644839,"byte_end":644842,"line_start":179,"line_end":179,"column_start":5,"column_end":8}},{"value":"/ * It must be safe to [`.offset()`] the pointer repeatedly along all","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_raw_views.rs","byte_start":644847,"byte_end":644918,"line_start":180,"line_end":180,"column_start":5,"column_end":76}},{"value":"/   axes and calculate the `count`s for the `.offset()` calls without","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_raw_views.rs","byte_start":644923,"byte_end":644994,"line_start":181,"line_end":181,"column_start":5,"column_end":76}},{"value":"/   overflow, even if the array is empty or the elements are zero-sized.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_raw_views.rs","byte_start":644999,"byte_end":645073,"line_start":182,"line_end":182,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_raw_views.rs","byte_start":645078,"byte_end":645081,"line_start":183,"line_end":183,"column_start":5,"column_end":8}},{"value":"/   In other words,","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_raw_views.rs","byte_start":645086,"byte_end":645107,"line_start":184,"line_end":184,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_raw_views.rs","byte_start":645112,"byte_end":645115,"line_start":185,"line_end":185,"column_start":5,"column_end":8}},{"value":"/   * All possible pointers generated by moving along all axes must be in","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_raw_views.rs","byte_start":645120,"byte_end":645195,"line_start":186,"line_end":186,"column_start":5,"column_end":80}},{"value":"/     bounds or one byte past the end of a single allocation with element","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_raw_views.rs","byte_start":645200,"byte_end":645275,"line_start":187,"line_end":187,"column_start":5,"column_end":80}},{"value":"/     type `A`. The only exceptions are if the array is empty or the element","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_raw_views.rs","byte_start":645280,"byte_end":645358,"line_start":188,"line_end":188,"column_start":5,"column_end":83}},{"value":"/     type is zero-sized. In these cases, `ptr` may be dangling, but it must","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_raw_views.rs","byte_start":645363,"byte_end":645441,"line_start":189,"line_end":189,"column_start":5,"column_end":83}},{"value":"/     still be safe to [`.offset()`] the pointer along the axes.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_raw_views.rs","byte_start":645446,"byte_end":645512,"line_start":190,"line_end":190,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_raw_views.rs","byte_start":645517,"byte_end":645520,"line_start":191,"line_end":191,"column_start":5,"column_end":8}},{"value":"/   * The offset in units of bytes between the least address and greatest","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_raw_views.rs","byte_start":645525,"byte_end":645600,"line_start":192,"line_end":192,"column_start":5,"column_end":80}},{"value":"/     address by moving along all axes must not exceed `isize::MAX`. This","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_raw_views.rs","byte_start":645605,"byte_end":645680,"line_start":193,"line_end":193,"column_start":5,"column_end":80}},{"value":"/     constraint prevents the computed offset, in bytes, from overflowing","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_raw_views.rs","byte_start":645685,"byte_end":645760,"line_start":194,"line_end":194,"column_start":5,"column_end":80}},{"value":"/     `isize` regardless of the starting point due to past offsets.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_raw_views.rs","byte_start":645765,"byte_end":645834,"line_start":195,"line_end":195,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_raw_views.rs","byte_start":645839,"byte_end":645842,"line_start":196,"line_end":196,"column_start":5,"column_end":8}},{"value":"/   * The offset in units of `A` between the least address and greatest","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_raw_views.rs","byte_start":645847,"byte_end":645920,"line_start":197,"line_end":197,"column_start":5,"column_end":78}},{"value":"/     address by moving along all axes must not exceed `isize::MAX`. This","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_raw_views.rs","byte_start":645925,"byte_end":646000,"line_start":198,"line_end":198,"column_start":5,"column_end":80}},{"value":"/     constraint prevents overflow when calculating the `count` parameter to","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_raw_views.rs","byte_start":646005,"byte_end":646083,"line_start":199,"line_end":199,"column_start":5,"column_end":83}},{"value":"/     [`.offset()`] regardless of the starting point due to past offsets.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_raw_views.rs","byte_start":646088,"byte_end":646163,"line_start":200,"line_end":200,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_raw_views.rs","byte_start":646168,"byte_end":646171,"line_start":201,"line_end":201,"column_start":5,"column_end":8}},{"value":"/ * The product of non-zero axis lengths must not exceed `isize::MAX`.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_raw_views.rs","byte_start":646176,"byte_end":646248,"line_start":202,"line_end":202,"column_start":5,"column_end":77}},{"value":"/ ","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_raw_views.rs","byte_start":646253,"byte_end":646257,"line_start":203,"line_end":203,"column_start":5,"column_end":9}},{"value":"/ * Strides must be non-negative.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_raw_views.rs","byte_start":646262,"byte_end":646297,"line_start":204,"line_end":204,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_raw_views.rs","byte_start":646302,"byte_end":646305,"line_start":205,"line_end":205,"column_start":5,"column_end":8}},{"value":"/ This function can use debug assertions to check some of these requirements,","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_raw_views.rs","byte_start":646310,"byte_end":646389,"line_start":206,"line_end":206,"column_start":5,"column_end":84}},{"value":"/ but it's not a complete check.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_raw_views.rs","byte_start":646394,"byte_end":646428,"line_start":207,"line_end":207,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_raw_views.rs","byte_start":646433,"byte_end":646436,"line_start":208,"line_end":208,"column_start":5,"column_end":8}},{"value":"/ [`.offset()`]: https://doc.rust-lang.org/stable/std/primitive.pointer.html#method.offset","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_raw_views.rs","byte_start":646441,"byte_end":646533,"line_start":209,"line_end":209,"column_start":5,"column_end":97}}]},{"kind":"Method","id":{"krate":0,"index":3774},"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_raw_views.rs","byte_start":647844,"byte_end":647859,"line_start":244,"line_end":244,"column_start":19,"column_end":34},"name":"deref_into_view","qualname":"<RawArrayViewMut<A, D>>::deref_into_view","value":"pub unsafe fn deref_into_view<'a>(Self) -> ArrayView","parent":null,"children":[],"decl_id":null,"docs":" Converts to a read-only view of the array.","sig":null,"attributes":[{"value":"/ Converts to a read-only view of the array.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_raw_views.rs","byte_start":647476,"byte_end":647522,"line_start":235,"line_end":235,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_raw_views.rs","byte_start":647527,"byte_end":647530,"line_start":236,"line_end":236,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_raw_views.rs","byte_start":647535,"byte_end":647547,"line_start":237,"line_end":237,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_raw_views.rs","byte_start":647552,"byte_end":647555,"line_start":238,"line_end":238,"column_start":5,"column_end":8}},{"value":"/ From a safety standpoint, this is equivalent to dereferencing a raw","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_raw_views.rs","byte_start":647560,"byte_end":647631,"line_start":239,"line_end":239,"column_start":5,"column_end":76}},{"value":"/ pointer for every element in the array. You must ensure that all of the","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_raw_views.rs","byte_start":647636,"byte_end":647711,"line_start":240,"line_end":240,"column_start":5,"column_end":80}},{"value":"/ data is valid, ensure that the pointer is aligned, and choose the","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_raw_views.rs","byte_start":647716,"byte_end":647785,"line_start":241,"line_end":241,"column_start":5,"column_end":74}},{"value":"/ correct lifetime.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_raw_views.rs","byte_start":647790,"byte_end":647811,"line_start":242,"line_end":242,"column_start":5,"column_end":26}},{"value":"inline","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_raw_views.rs","byte_start":647816,"byte_end":647825,"line_start":243,"line_end":243,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3776},"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_raw_views.rs","byte_start":648449,"byte_end":648468,"line_start":261,"line_end":261,"column_start":19,"column_end":38},"name":"deref_into_view_mut","qualname":"<RawArrayViewMut<A, D>>::deref_into_view_mut","value":"pub unsafe fn deref_into_view_mut<'a>(Self) -> ArrayViewMut","parent":null,"children":[],"decl_id":null,"docs":" Converts to a mutable view of the array.","sig":null,"attributes":[{"value":"/ Converts to a mutable view of the array.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_raw_views.rs","byte_start":648083,"byte_end":648127,"line_start":252,"line_end":252,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_raw_views.rs","byte_start":648132,"byte_end":648135,"line_start":253,"line_end":253,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_raw_views.rs","byte_start":648140,"byte_end":648152,"line_start":254,"line_end":254,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_raw_views.rs","byte_start":648157,"byte_end":648160,"line_start":255,"line_end":255,"column_start":5,"column_end":8}},{"value":"/ From a safety standpoint, this is equivalent to dereferencing a raw","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_raw_views.rs","byte_start":648165,"byte_end":648236,"line_start":256,"line_end":256,"column_start":5,"column_end":76}},{"value":"/ pointer for every element in the array. You must ensure that all of the","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_raw_views.rs","byte_start":648241,"byte_end":648316,"line_start":257,"line_end":257,"column_start":5,"column_end":80}},{"value":"/ data is valid, ensure that the pointer is aligned, and choose the","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_raw_views.rs","byte_start":648321,"byte_end":648390,"line_start":258,"line_end":258,"column_start":5,"column_end":74}},{"value":"/ correct lifetime.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_raw_views.rs","byte_start":648395,"byte_end":648416,"line_start":259,"line_end":259,"column_start":5,"column_end":26}},{"value":"inline","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_raw_views.rs","byte_start":648421,"byte_end":648430,"line_start":260,"line_end":260,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3778},"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_raw_views.rs","byte_start":648915,"byte_end":648923,"line_start":273,"line_end":273,"column_start":12,"column_end":20},"name":"split_at","qualname":"<RawArrayViewMut<A, D>>::split_at","value":"pub fn split_at(Self, Axis, Ix) -> (Self, Self)","parent":null,"children":[],"decl_id":null,"docs":" Split the array view along `axis` and return one array pointer strictly\n before the split and one array pointer after the split.","sig":null,"attributes":[{"value":"/ Split the array view along `axis` and return one array pointer strictly","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_raw_views.rs","byte_start":648698,"byte_end":648773,"line_start":269,"line_end":269,"column_start":5,"column_end":80}},{"value":"/ before the split and one array pointer after the split.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_raw_views.rs","byte_start":648778,"byte_end":648837,"line_start":270,"line_end":270,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_raw_views.rs","byte_start":648842,"byte_end":648845,"line_start":271,"line_end":271,"column_start":5,"column_end":8}},{"value":"/ **Panics** if `axis` or `index` is out of bounds.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_raw_views.rs","byte_start":648850,"byte_end":648903,"line_start":272,"line_end":272,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":3779},"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_raw_views.rs","byte_start":649709,"byte_end":649713,"line_start":293,"line_end":293,"column_start":12,"column_end":16},"name":"cast","qualname":"<RawArrayViewMut<A, D>>::cast","value":"pub fn cast<B>(Self) -> RawArrayViewMut<B, D>","parent":null,"children":[],"decl_id":null,"docs":" Cast the raw pointer of the raw array view to a different type","sig":null,"attributes":[{"value":"/ Cast the raw pointer of the raw array view to a different type","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_raw_views.rs","byte_start":649234,"byte_end":649300,"line_start":283,"line_end":283,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_raw_views.rs","byte_start":649305,"byte_end":649308,"line_start":284,"line_end":284,"column_start":5,"column_end":8}},{"value":"/ **Panics** if element size is not compatible.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_raw_views.rs","byte_start":649313,"byte_end":649362,"line_start":285,"line_end":285,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_raw_views.rs","byte_start":649367,"byte_end":649370,"line_start":286,"line_end":286,"column_start":5,"column_end":8}},{"value":"/ Lack of panic does not imply it is a valid cast. The cast works the same","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_raw_views.rs","byte_start":649375,"byte_end":649451,"line_start":287,"line_end":287,"column_start":5,"column_end":81}},{"value":"/ way as regular raw pointer casts.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_raw_views.rs","byte_start":649456,"byte_end":649493,"line_start":288,"line_end":288,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_raw_views.rs","byte_start":649498,"byte_end":649501,"line_start":289,"line_end":289,"column_start":5,"column_end":8}},{"value":"/ While this method is safe, for the same reason as regular raw pointer","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_raw_views.rs","byte_start":649506,"byte_end":649579,"line_start":290,"line_end":290,"column_start":5,"column_end":78}},{"value":"/ casts are safe, access through the produced raw view is only possible","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_raw_views.rs","byte_start":649584,"byte_end":649657,"line_start":291,"line_end":291,"column_start":5,"column_end":78}},{"value":"/ in an unsafe block or function.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_raw_views.rs","byte_start":649662,"byte_end":649697,"line_start":292,"line_end":292,"column_start":5,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":3787},"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_cow.rs","byte_start":650654,"byte_end":650661,"line_start":21,"line_end":21,"column_start":12,"column_end":19},"name":"is_view","qualname":"<CowArray>::is_view","value":"pub fn is_view(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` iff the array is the view (borrowed) variant.\n","sig":null,"attributes":[{"value":"/ Returns `true` iff the array is the view (borrowed) variant.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_cow.rs","byte_start":650578,"byte_end":650642,"line_start":20,"line_end":20,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":3788},"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_cow.rs","byte_start":650784,"byte_end":650792,"line_start":26,"line_end":26,"column_start":12,"column_end":20},"name":"is_owned","qualname":"<CowArray>::is_owned","value":"pub fn is_owned(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` iff the array is the owned variant.\n","sig":null,"attributes":[{"value":"/ Returns `true` iff the array is the owned variant.","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_cow.rs","byte_start":650718,"byte_end":650772,"line_start":25,"line_end":25,"column_start":5,"column_end":59}}]}],"impls":[{"id":0,"kind":"Inherent","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/arrayformat.rs","byte_start":70885,"byte_end":70898,"line_start":38,"line_end":38,"column_start":6,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":214},{"krate":0,"index":215},{"krate":0,"index":216}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/arrayformat.rs","byte_start":75915,"byte_end":75924,"line_start":194,"line_end":194,"column_start":61,"column_end":70},"value":"","parent":null,"children":[{"krate":0,"index":233}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/arrayformat.rs","byte_start":76367,"byte_end":76376,"line_start":208,"line_end":208,"column_start":57,"column_end":66},"value":"","parent":null,"children":[{"krate":0,"index":239}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/arrayformat.rs","byte_start":77246,"byte_end":77255,"line_start":236,"line_end":236,"column_start":63,"column_end":72},"value":"","parent":null,"children":[{"krate":0,"index":245}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/arrayformat.rs","byte_start":77707,"byte_end":77716,"line_start":250,"line_end":250,"column_start":63,"column_end":72},"value":"","parent":null,"children":[{"krate":0,"index":251}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/arrayformat.rs","byte_start":78167,"byte_end":78176,"line_start":263,"line_end":263,"column_start":63,"column_end":72},"value":"","parent":null,"children":[{"krate":0,"index":257}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/arrayformat.rs","byte_start":78622,"byte_end":78631,"line_start":277,"line_end":277,"column_start":59,"column_end":68},"value":"","parent":null,"children":[{"krate":0,"index":263}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/arraytraits.rs","byte_start":93550,"byte_end":93559,"line_start":42,"line_end":42,"column_start":28,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":291},{"krate":0,"index":292}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/arraytraits.rs","byte_start":94108,"byte_end":94117,"line_start":65,"line_end":65,"column_start":31,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":298}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/arraytraits.rs","byte_start":94706,"byte_end":94715,"line_start":86,"line_end":86,"column_start":54,"column_end":63},"value":"","parent":null,"children":[{"krate":0,"index":306}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/arraytraits.rs","byte_start":95606,"byte_end":95615,"line_start":117,"line_end":117,"column_start":62,"column_end":71},"value":"","parent":null,"children":[{"krate":0,"index":315}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Direct","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/arraytraits.rs","byte_start":96188,"byte_end":96197,"line_start":143,"line_end":143,"column_start":19,"column_end":28},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/arraytraits.rs","byte_start":96291,"byte_end":96300,"line_start":151,"line_end":151,"column_start":29,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":330}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Direct","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/arraytraits.rs","byte_start":96716,"byte_end":96725,"line_start":169,"line_end":169,"column_start":32,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":334}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Direct","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/arraytraits.rs","byte_start":97865,"byte_end":97874,"line_start":219,"line_end":219,"column_start":33,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":354},{"krate":0,"index":355},{"krate":0,"index":356}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Direct","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/arraytraits.rs","byte_start":98081,"byte_end":98093,"line_start":231,"line_end":231,"column_start":33,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":361},{"krate":0,"index":362},{"krate":0,"index":363}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Direct","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/arraytraits.rs","byte_start":98305,"byte_end":98314,"line_start":243,"line_end":243,"column_start":31,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":368}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Direct","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/arraytraits.rs","byte_start":99261,"byte_end":99270,"line_start":274,"line_end":274,"column_start":28,"column_end":37},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Direct","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/arraytraits.rs","byte_start":99400,"byte_end":99409,"line_start":282,"line_end":282,"column_start":28,"column_end":37},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Direct","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/arraytraits.rs","byte_start":99794,"byte_end":99803,"line_start":295,"line_end":295,"column_start":48,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":380}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Direct","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/arraytraits.rs","byte_start":100455,"byte_end":100464,"line_start":315,"line_end":315,"column_start":49,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":386}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Direct","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/arraytraits.rs","byte_start":100792,"byte_end":100804,"line_start":327,"line_end":327,"column_start":52,"column_end":64},"value":"","parent":null,"children":[{"krate":0,"index":391}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Direct","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/arraytraits.rs","byte_start":101476,"byte_end":101488,"line_start":347,"line_end":347,"column_start":53,"column_end":65},"value":"","parent":null,"children":[{"krate":0,"index":397}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Direct","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/arraytraits.rs","byte_start":102301,"byte_end":102302,"line_start":384,"line_end":384,"column_start":45,"column_end":46},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Direct","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/arraytraits.rs","byte_start":102910,"byte_end":102919,"line_start":403,"line_end":403,"column_start":27,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":411}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Inherent","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/data_repr.rs","byte_start":103804,"byte_end":103813,"line_start":25,"line_end":25,"column_start":9,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":423},{"krate":0,"index":424},{"krate":0,"index":425},{"krate":0,"index":426},{"krate":0,"index":427},{"krate":0,"index":428},{"krate":0,"index":429},{"krate":0,"index":431}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Direct","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/data_repr.rs","byte_start":105446,"byte_end":105455,"line_start":86,"line_end":86,"column_start":19,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":434},{"krate":0,"index":435}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Direct","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/data_repr.rs","byte_start":105950,"byte_end":105959,"line_start":107,"line_end":107,"column_start":18,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":438}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Direct","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/data_repr.rs","byte_start":106816,"byte_end":106825,"line_start":128,"line_end":128,"column_start":25,"column_end":34},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Direct","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/data_repr.rs","byte_start":106871,"byte_end":106880,"line_start":129,"line_end":129,"column_start":25,"column_end":34},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Direct","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/data_traits.rs","byte_start":111436,"byte_end":111447,"line_start":147,"line_end":147,"column_start":28,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":481},{"krate":0,"index":482},{"krate":0,"index":3818}],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Direct","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/data_traits.rs","byte_start":111598,"byte_end":111609,"line_start":155,"line_end":155,"column_start":33,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":485}],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Direct","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/data_traits.rs","byte_start":111774,"byte_end":111785,"line_start":161,"line_end":161,"column_start":28,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":488},{"krate":0,"index":489},{"krate":0,"index":3819}],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Direct","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/data_traits.rs","byte_start":111932,"byte_end":111943,"line_start":169,"line_end":169,"column_start":31,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":492},{"krate":0,"index":494}],"docs":"","sig":null,"attributes":[]},{"id":34,"kind":"Direct","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/data_traits.rs","byte_start":112208,"byte_end":112219,"line_start":184,"line_end":184,"column_start":33,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":497}],"docs":"","sig":null,"attributes":[]},{"id":35,"kind":"Direct","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/data_traits.rs","byte_start":112382,"byte_end":112394,"line_start":190,"line_end":190,"column_start":28,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":500},{"krate":0,"index":501},{"krate":0,"index":3820}],"docs":"","sig":null,"attributes":[]},{"id":36,"kind":"Direct","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/data_traits.rs","byte_start":112578,"byte_end":112590,"line_start":199,"line_end":199,"column_start":31,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":504},{"krate":0,"index":506}],"docs":"","sig":null,"attributes":[]},{"id":37,"kind":"Direct","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/data_traits.rs","byte_start":113735,"byte_end":113747,"line_start":240,"line_end":240,"column_start":25,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":509},{"krate":0,"index":511}],"docs":"","sig":null,"attributes":[]},{"id":38,"kind":"Direct","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/data_traits.rs","byte_start":114485,"byte_end":114497,"line_start":265,"line_end":265,"column_start":28,"column_end":40},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":39,"kind":"Direct","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/data_traits.rs","byte_start":114552,"byte_end":114564,"line_start":267,"line_end":267,"column_start":33,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":517}],"docs":"","sig":null,"attributes":[]},{"id":40,"kind":"Direct","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/data_traits.rs","byte_start":114761,"byte_end":114770,"line_start":274,"line_end":274,"column_start":28,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":520},{"krate":0,"index":521},{"krate":0,"index":3821}],"docs":"","sig":null,"attributes":[]},{"id":41,"kind":"Direct","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/data_traits.rs","byte_start":114929,"byte_end":114938,"line_start":282,"line_end":282,"column_start":31,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":524},{"krate":0,"index":526}],"docs":"","sig":null,"attributes":[]},{"id":42,"kind":"Direct","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/data_traits.rs","byte_start":115196,"byte_end":115205,"line_start":297,"line_end":297,"column_start":25,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":529}],"docs":"","sig":null,"attributes":[]},{"id":43,"kind":"Direct","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/data_traits.rs","byte_start":115418,"byte_end":115427,"line_start":308,"line_end":308,"column_start":28,"column_end":37},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":44,"kind":"Direct","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/data_traits.rs","byte_start":115467,"byte_end":115476,"line_start":310,"line_end":310,"column_start":33,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":535},{"krate":0,"index":536}],"docs":"","sig":null,"attributes":[]},{"id":45,"kind":"Direct","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/data_traits.rs","byte_start":116360,"byte_end":116368,"line_start":340,"line_end":340,"column_start":32,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":540},{"krate":0,"index":541},{"krate":0,"index":3822}],"docs":"","sig":null,"attributes":[]},{"id":46,"kind":"Direct","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/data_traits.rs","byte_start":116512,"byte_end":116520,"line_start":348,"line_end":348,"column_start":29,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":545}],"docs":"","sig":null,"attributes":[]},{"id":47,"kind":"Direct","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/data_traits.rs","byte_start":116752,"byte_end":116760,"line_start":358,"line_end":358,"column_start":37,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":550}],"docs":"","sig":null,"attributes":[]},{"id":48,"kind":"Direct","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/data_traits.rs","byte_start":116926,"byte_end":116934,"line_start":364,"line_end":364,"column_start":32,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":554},{"krate":0,"index":555},{"krate":0,"index":3823}],"docs":"","sig":null,"attributes":[]},{"id":49,"kind":"Direct","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/data_traits.rs","byte_start":117088,"byte_end":117096,"line_start":372,"line_end":372,"column_start":35,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":559},{"krate":0,"index":561}],"docs":"","sig":null,"attributes":[]},{"id":50,"kind":"Direct","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/data_traits.rs","byte_start":117366,"byte_end":117374,"line_start":387,"line_end":387,"column_start":29,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":565}],"docs":"","sig":null,"attributes":[]},{"id":51,"kind":"Direct","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/data_traits.rs","byte_start":117605,"byte_end":117613,"line_start":397,"line_end":397,"column_start":32,"column_end":40},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":52,"kind":"Direct","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/data_traits.rs","byte_start":118982,"byte_end":118994,"line_start":431,"line_end":431,"column_start":31,"column_end":43},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":53,"kind":"Direct","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/data_traits.rs","byte_start":119035,"byte_end":119043,"line_start":432,"line_end":432,"column_start":35,"column_end":43},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":54,"kind":"Direct","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/data_traits.rs","byte_start":119084,"byte_end":119093,"line_start":434,"line_end":434,"column_start":30,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":582},{"krate":0,"index":583},{"krate":0,"index":584}],"docs":"","sig":null,"attributes":[]},{"id":55,"kind":"Direct","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/data_traits.rs","byte_start":119351,"byte_end":119363,"line_start":446,"line_end":446,"column_start":30,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":587},{"krate":0,"index":588},{"krate":0,"index":589}],"docs":"","sig":null,"attributes":[]},{"id":56,"kind":"Direct","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/data_traits.rs","byte_start":119626,"byte_end":119633,"line_start":458,"line_end":458,"column_start":32,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":593},{"krate":0,"index":594},{"krate":0,"index":3824}],"docs":"","sig":null,"attributes":[]},{"id":57,"kind":"Direct","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/data_traits.rs","byte_start":119912,"byte_end":119919,"line_start":469,"line_end":469,"column_start":35,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":598},{"krate":0,"index":600}],"docs":"","sig":null,"attributes":[]},{"id":58,"kind":"Direct","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/data_traits.rs","byte_start":120577,"byte_end":120584,"line_start":497,"line_end":497,"column_start":37,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":604},{"krate":0,"index":605}],"docs":"","sig":null,"attributes":[]},{"id":59,"kind":"Direct","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/data_traits.rs","byte_start":121892,"byte_end":121899,"line_start":537,"line_end":537,"column_start":29,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":609}],"docs":"","sig":null,"attributes":[]},{"id":60,"kind":"Direct","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/data_traits.rs","byte_start":122466,"byte_end":122473,"line_start":555,"line_end":555,"column_start":32,"column_end":39},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":61,"kind":"Direct","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/data_traits.rs","byte_start":123183,"byte_end":123192,"line_start":576,"line_end":576,"column_start":32,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":621},{"krate":0,"index":622}],"docs":"","sig":null,"attributes":[]},{"id":62,"kind":"Direct","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/data_traits.rs","byte_start":123346,"byte_end":123358,"line_start":584,"line_end":584,"column_start":32,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":626},{"krate":0,"index":627}],"docs":"","sig":null,"attributes":[]},{"id":63,"kind":"Direct","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/data_traits.rs","byte_start":123571,"byte_end":123582,"line_start":592,"line_end":592,"column_start":32,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":631},{"krate":0,"index":632}],"docs":"","sig":null,"attributes":[]},{"id":64,"kind":"Direct","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/data_traits.rs","byte_start":123753,"byte_end":123764,"line_start":600,"line_end":600,"column_start":32,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":636},{"krate":0,"index":637}],"docs":"","sig":null,"attributes":[]},{"id":65,"kind":"Direct","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/data_traits.rs","byte_start":123943,"byte_end":123951,"line_start":608,"line_end":608,"column_start":44,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":642},{"krate":0,"index":643}],"docs":"","sig":null,"attributes":[]},{"id":66,"kind":"Direct","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/data_traits.rs","byte_start":124122,"byte_end":124130,"line_start":616,"line_end":616,"column_start":44,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":648},{"krate":0,"index":649}],"docs":"","sig":null,"attributes":[]},{"id":67,"kind":"Direct","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/free_functions.rs","byte_start":131403,"byte_end":131409,"line_start":219,"line_end":219,"column_start":29,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":702}],"docs":"","sig":null,"attributes":[]},{"id":68,"kind":"Direct","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/free_functions.rs","byte_start":132529,"byte_end":132535,"line_start":249,"line_end":249,"column_start":32,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":707}],"docs":"","sig":null,"attributes":[]},{"id":69,"kind":"Inherent","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/error.rs","byte_start":135333,"byte_end":135343,"line_start":20,"line_end":20,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":726},{"krate":0,"index":727}],"docs":"","sig":null,"attributes":[]},{"id":70,"kind":"Direct","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/error.rs","byte_start":136277,"byte_end":136286,"line_start":59,"line_end":59,"column_start":20,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":730}],"docs":"","sig":null,"attributes":[]},{"id":71,"kind":"Direct","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/error.rs","byte_start":136412,"byte_end":136422,"line_start":66,"line_end":66,"column_start":20,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":732}],"docs":"","sig":null,"attributes":[]},{"id":72,"kind":"Direct","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/error.rs","byte_start":136564,"byte_end":136574,"line_start":74,"line_end":74,"column_start":16,"column_end":26},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":73,"kind":"Direct","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/error.rs","byte_start":136601,"byte_end":136611,"line_start":76,"line_end":76,"column_start":23,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":735}],"docs":"","sig":null,"attributes":[]},{"id":74,"kind":"Direct","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/error.rs","byte_start":137237,"byte_end":137247,"line_start":90,"line_end":90,"column_start":21,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":737}],"docs":"","sig":null,"attributes":[]},{"id":75,"kind":"Direct","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/geomspace.rs","byte_start":139234,"byte_end":139243,"line_start":22,"line_end":22,"column_start":22,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":760},{"krate":0,"index":761},{"krate":0,"index":762}],"docs":"","sig":null,"attributes":[]},{"id":76,"kind":"Direct","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/geomspace.rs","byte_start":139839,"byte_end":139848,"line_start":48,"line_end":48,"column_start":33,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":765}],"docs":"","sig":null,"attributes":[]},{"id":77,"kind":"Direct","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/geomspace.rs","byte_start":140290,"byte_end":140299,"line_start":66,"line_end":66,"column_start":31,"column_end":40},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":78,"kind":"Direct","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/indexes.rs","byte_start":145000,"byte_end":145011,"line_start":53,"line_end":53,"column_start":22,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":788},{"krate":0,"index":789},{"krate":0,"index":790},{"krate":0,"index":792}],"docs":"","sig":null,"attributes":[]},{"id":79,"kind":"Direct","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/indexes.rs","byte_start":146640,"byte_end":146651,"line_start":112,"line_end":112,"column_start":31,"column_end":42},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":80,"kind":"Direct","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/indexes.rs","byte_start":146703,"byte_end":146710,"line_start":114,"line_end":114,"column_start":26,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":799},{"krate":0,"index":800},{"krate":0,"index":801}],"docs":"","sig":null,"attributes":[]},{"id":81,"kind":"Direct","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/indexes.rs","byte_start":147350,"byte_end":147358,"line_start":147,"line_end":147,"column_start":20,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":804},{"krate":0,"index":805},{"krate":0,"index":3980}],"docs":"","sig":null,"attributes":[]},{"id":82,"kind":"Direct","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/indexes.rs","byte_start":148283,"byte_end":148290,"line_start":175,"line_end":175,"column_start":42,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":808},{"krate":0,"index":809},{"krate":0,"index":810},{"krate":0,"index":811},{"krate":0,"index":3981},{"krate":0,"index":812},{"krate":0,"index":813},{"krate":0,"index":814},{"krate":0,"index":815},{"krate":0,"index":816},{"krate":0,"index":817},{"krate":0,"index":818},{"krate":0,"index":819},{"krate":0,"index":820}],"docs":"","sig":null,"attributes":[]},{"id":83,"kind":"Direct","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/indexes.rs","byte_start":150327,"byte_end":150339,"line_start":271,"line_end":271,"column_start":22,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":825},{"krate":0,"index":826},{"krate":0,"index":827}],"docs":"","sig":null,"attributes":[]},{"id":84,"kind":"Direct","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/indexes.rs","byte_start":151142,"byte_end":151154,"line_start":303,"line_end":303,"column_start":31,"column_end":43},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":87,"kind":"Inherent","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/iterators/chunks.rs","byte_start":198976,"byte_end":198987,"line_start":40,"line_end":40,"column_start":27,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":864}],"docs":"","sig":null,"attributes":[]},{"id":88,"kind":"Direct","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/iterators/chunks.rs","byte_start":199851,"byte_end":199862,"line_start":73,"line_end":73,"column_start":33,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":870},{"krate":0,"index":871},{"krate":0,"index":872}],"docs":"","sig":null,"attributes":[]},{"id":90,"kind":"Inherent","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/iterators/chunks.rs","byte_start":201219,"byte_end":201233,"line_start":130,"line_end":130,"column_start":27,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":891}],"docs":"","sig":null,"attributes":[]},{"id":91,"kind":"Direct","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/iterators/chunks.rs","byte_start":202103,"byte_end":202117,"line_start":163,"line_end":163,"column_start":33,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":897},{"krate":0,"index":898},{"krate":0,"index":899}],"docs":"","sig":null,"attributes":[]},{"id":97,"kind":"Inherent","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/iterators/lanes.rs","byte_start":204947,"byte_end":204952,"line_start":34,"line_end":34,"column_start":27,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":949}],"docs":"","sig":null,"attributes":[]},{"id":99,"kind":"Direct","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/iterators/lanes.rs","byte_start":205996,"byte_end":206001,"line_start":79,"line_end":79,"column_start":33,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":955},{"krate":0,"index":956},{"krate":0,"index":957}],"docs":"","sig":null,"attributes":[]},{"id":100,"kind":"Inherent","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/iterators/lanes.rs","byte_start":206605,"byte_end":206613,"line_start":103,"line_end":103,"column_start":27,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":969}],"docs":"","sig":null,"attributes":[]},{"id":101,"kind":"Direct","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/iterators/lanes.rs","byte_start":207290,"byte_end":207298,"line_start":130,"line_end":130,"column_start":33,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":975},{"krate":0,"index":976},{"krate":0,"index":977}],"docs":"","sig":null,"attributes":[]},{"id":102,"kind":"Inherent","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/iterators/windows.rs","byte_start":208047,"byte_end":208054,"line_start":17,"line_end":17,"column_start":27,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":995}],"docs":"","sig":null,"attributes":[]},{"id":105,"kind":"Direct","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/iterators/windows.rs","byte_start":209529,"byte_end":209536,"line_start":71,"line_end":71,"column_start":33,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":1001},{"krate":0,"index":1002},{"krate":0,"index":1003}],"docs":"","sig":null,"attributes":[]},{"id":108,"kind":"Inherent","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/iterators/mod.rs","byte_start":153924,"byte_end":153932,"line_start":42,"line_end":42,"column_start":23,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1051}],"docs":"","sig":null,"attributes":[]},{"id":109,"kind":"Direct","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/iterators/mod.rs","byte_start":154379,"byte_end":154387,"line_start":57,"line_end":57,"column_start":36,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":1055},{"krate":0,"index":1056},{"krate":0,"index":1057},{"krate":0,"index":1058}],"docs":"","sig":null,"attributes":[]},{"id":110,"kind":"Direct","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/iterators/mod.rs","byte_start":155856,"byte_end":155864,"line_start":104,"line_end":104,"column_start":49,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":1065}],"docs":"","sig":null,"attributes":[]},{"id":111,"kind":"Direct","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/iterators/mod.rs","byte_start":156356,"byte_end":156364,"line_start":122,"line_end":122,"column_start":33,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":1069},{"krate":0,"index":1070},{"krate":0,"index":1071}],"docs":"","sig":null,"attributes":[]},{"id":112,"kind":"Inherent","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/iterators/mod.rs","byte_start":158211,"byte_end":158223,"line_start":199,"line_end":199,"column_start":27,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":1078}],"docs":"","sig":null,"attributes":[]},{"id":113,"kind":"Direct","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/iterators/mod.rs","byte_start":158436,"byte_end":158448,"line_start":208,"line_end":208,"column_start":40,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":1083},{"krate":0,"index":1084},{"krate":0,"index":1086},{"krate":0,"index":1087}],"docs":"","sig":null,"attributes":[]},{"id":114,"kind":"Direct","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/iterators/mod.rs","byte_start":158916,"byte_end":158928,"line_start":227,"line_end":227,"column_start":37,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":1094},{"krate":0,"index":1096}],"docs":"","sig":null,"attributes":[]},{"id":115,"kind":"Direct","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/iterators/mod.rs","byte_start":159298,"byte_end":159310,"line_start":241,"line_end":241,"column_start":38,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":1104}],"docs":"","sig":null,"attributes":[]},{"id":116,"kind":"Inherent","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/iterators/mod.rs","byte_start":160000,"byte_end":160004,"line_start":277,"line_end":277,"column_start":16,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":1111}],"docs":"","sig":null,"attributes":[]},{"id":117,"kind":"Inherent","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/iterators/mod.rs","byte_start":160357,"byte_end":160364,"line_start":292,"line_end":292,"column_start":16,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":1116}],"docs":"","sig":null,"attributes":[]},{"id":118,"kind":"Inherent","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/iterators/mod.rs","byte_start":161709,"byte_end":161724,"line_start":344,"line_end":344,"column_start":27,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":1143}],"docs":"","sig":null,"attributes":[]},{"id":119,"kind":"Inherent","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/iterators/mod.rs","byte_start":162395,"byte_end":162406,"line_start":363,"line_end":363,"column_start":16,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1154}],"docs":"","sig":null,"attributes":[]},{"id":120,"kind":"Inherent","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/iterators/mod.rs","byte_start":162549,"byte_end":162563,"line_start":372,"line_end":372,"column_start":16,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1159}],"docs":"","sig":null,"attributes":[]},{"id":121,"kind":"Direct","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/iterators/mod.rs","byte_start":162736,"byte_end":162740,"line_start":381,"line_end":381,"column_start":40,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":1164},{"krate":0,"index":1165},{"krate":0,"index":1166},{"krate":0,"index":1167},{"krate":0,"index":1170},{"krate":0,"index":1171},{"krate":0,"index":1173},{"krate":0,"index":1175},{"krate":0,"index":1177},{"krate":0,"index":1179},{"krate":0,"index":1182},{"krate":0,"index":1183},{"krate":0,"index":1184}],"docs":"","sig":null,"attributes":[]},{"id":122,"kind":"Direct","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/iterators/mod.rs","byte_start":164516,"byte_end":164520,"line_start":454,"line_end":454,"column_start":37,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":1189},{"krate":0,"index":1190},{"krate":0,"index":1191}],"docs":"","sig":null,"attributes":[]},{"id":123,"kind":"Direct","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/iterators/mod.rs","byte_start":164994,"byte_end":164998,"line_start":472,"line_end":472,"column_start":38,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":1198}],"docs":"","sig":null,"attributes":[]},{"id":124,"kind":"Direct","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/iterators/mod.rs","byte_start":165164,"byte_end":165175,"line_start":481,"line_end":481,"column_start":40,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":1203},{"krate":0,"index":1204},{"krate":0,"index":1205}],"docs":"","sig":null,"attributes":[]},{"id":125,"kind":"Direct","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/iterators/mod.rs","byte_start":165677,"byte_end":165688,"line_start":500,"line_end":500,"column_start":38,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":1210}],"docs":"","sig":null,"attributes":[]},{"id":126,"kind":"Direct","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/iterators/mod.rs","byte_start":165829,"byte_end":165836,"line_start":509,"line_end":509,"column_start":40,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":1215},{"krate":0,"index":1216},{"krate":0,"index":1217},{"krate":0,"index":1218},{"krate":0,"index":1221},{"krate":0,"index":1222},{"krate":0,"index":1224},{"krate":0,"index":1226},{"krate":0,"index":1228},{"krate":0,"index":1230},{"krate":0,"index":1233},{"krate":0,"index":1234},{"krate":0,"index":1235}],"docs":"","sig":null,"attributes":[]},{"id":127,"kind":"Direct","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/iterators/mod.rs","byte_start":167620,"byte_end":167627,"line_start":582,"line_end":582,"column_start":37,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":1240},{"krate":0,"index":1241},{"krate":0,"index":1242}],"docs":"","sig":null,"attributes":[]},{"id":128,"kind":"Direct","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/iterators/mod.rs","byte_start":168109,"byte_end":168116,"line_start":600,"line_end":600,"column_start":38,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":1249}],"docs":"","sig":null,"attributes":[]},{"id":129,"kind":"Direct","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/iterators/mod.rs","byte_start":168282,"byte_end":168297,"line_start":609,"line_end":609,"column_start":40,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":1254},{"krate":0,"index":1255},{"krate":0,"index":1257},{"krate":0,"index":1258}],"docs":"","sig":null,"attributes":[]},{"id":130,"kind":"Direct","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/iterators/mod.rs","byte_start":168781,"byte_end":168796,"line_start":628,"line_end":628,"column_start":37,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":1265},{"krate":0,"index":1267}],"docs":"","sig":null,"attributes":[]},{"id":131,"kind":"Direct","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/iterators/mod.rs","byte_start":169178,"byte_end":169193,"line_start":642,"line_end":642,"column_start":38,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":1275}],"docs":"","sig":null,"attributes":[]},{"id":132,"kind":"Direct","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/iterators/mod.rs","byte_start":169332,"byte_end":169346,"line_start":651,"line_end":651,"column_start":40,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":1280},{"krate":0,"index":1281},{"krate":0,"index":1282}],"docs":"","sig":null,"attributes":[]},{"id":133,"kind":"Direct","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/iterators/mod.rs","byte_start":169852,"byte_end":169866,"line_start":670,"line_end":670,"column_start":38,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":1287}],"docs":"","sig":null,"attributes":[]},{"id":134,"kind":"Direct","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/iterators/mod.rs","byte_start":170503,"byte_end":170512,"line_start":702,"line_end":702,"column_start":29,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":1300},{"krate":0,"index":1301},{"krate":0,"index":1303}],"docs":"","sig":null,"attributes":[]},{"id":135,"kind":"Direct","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/iterators/mod.rs","byte_start":170909,"byte_end":170918,"line_start":718,"line_end":718,"column_start":38,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":1308}],"docs":"","sig":null,"attributes":[]},{"id":136,"kind":"Direct","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/iterators/mod.rs","byte_start":171557,"byte_end":171569,"line_start":742,"line_end":742,"column_start":29,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":1321},{"krate":0,"index":1322},{"krate":0,"index":1324}],"docs":"","sig":null,"attributes":[]},{"id":137,"kind":"Direct","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/iterators/mod.rs","byte_start":171972,"byte_end":171984,"line_start":758,"line_end":758,"column_start":38,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":1329}],"docs":"","sig":null,"attributes":[]},{"id":138,"kind":"Inherent","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/iterators/mod.rs","byte_start":172867,"byte_end":172879,"line_start":799,"line_end":799,"column_start":23,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1333},{"krate":0,"index":1336},{"krate":0,"index":1337},{"krate":0,"index":1338},{"krate":0,"index":1340}],"docs":"","sig":null,"attributes":[]},{"id":139,"kind":"Direct","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/iterators/mod.rs","byte_start":175178,"byte_end":175190,"line_start":871,"line_end":871,"column_start":25,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":1345},{"krate":0,"index":1346},{"krate":0,"index":1347}],"docs":"","sig":null,"attributes":[]},{"id":140,"kind":"Direct","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/iterators/mod.rs","byte_start":175642,"byte_end":175654,"line_start":893,"line_end":893,"column_start":36,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":1351}],"docs":"","sig":null,"attributes":[]},{"id":141,"kind":"Direct","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/iterators/mod.rs","byte_start":175970,"byte_end":175982,"line_start":908,"line_end":908,"column_start":34,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":1355}],"docs":"","sig":null,"attributes":[]},{"id":142,"kind":"Inherent","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/iterators/mod.rs","byte_start":176943,"byte_end":176951,"line_start":947,"line_end":947,"column_start":27,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1360},{"krate":0,"index":1362}],"docs":"","sig":null,"attributes":[]},{"id":143,"kind":"Direct","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/iterators/mod.rs","byte_start":177934,"byte_end":177942,"line_start":981,"line_end":981,"column_start":29,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":1367},{"krate":0,"index":1368},{"krate":0,"index":1370}],"docs":"","sig":null,"attributes":[]},{"id":144,"kind":"Direct","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/iterators/mod.rs","byte_start":178265,"byte_end":178273,"line_start":996,"line_end":996,"column_start":40,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":1375}],"docs":"","sig":null,"attributes":[]},{"id":145,"kind":"Direct","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/iterators/mod.rs","byte_start":178477,"byte_end":178485,"line_start":1005,"line_end":1005,"column_start":38,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":1381}],"docs":"","sig":null,"attributes":[]},{"id":146,"kind":"Inherent","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/iterators/mod.rs","byte_start":179332,"byte_end":179343,"line_start":1033,"line_end":1033,"column_start":27,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":1392},{"krate":0,"index":1394}],"docs":"","sig":null,"attributes":[]},{"id":147,"kind":"Direct","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/iterators/mod.rs","byte_start":180338,"byte_end":180349,"line_start":1067,"line_end":1067,"column_start":29,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":1399},{"krate":0,"index":1400},{"krate":0,"index":1402}],"docs":"","sig":null,"attributes":[]},{"id":148,"kind":"Direct","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/iterators/mod.rs","byte_start":180675,"byte_end":180686,"line_start":1082,"line_end":1082,"column_start":40,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":1407}],"docs":"","sig":null,"attributes":[]},{"id":149,"kind":"Direct","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/iterators/mod.rs","byte_start":180890,"byte_end":180901,"line_start":1091,"line_end":1091,"column_start":38,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":1413}],"docs":"","sig":null,"attributes":[]},{"id":150,"kind":"Direct","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/iterators/mod.rs","byte_start":181041,"byte_end":181049,"line_start":1100,"line_end":1100,"column_start":42,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":1418},{"krate":0,"index":1419},{"krate":0,"index":1420},{"krate":0,"index":1421},{"krate":0,"index":1422},{"krate":0,"index":1423},{"krate":0,"index":1424},{"krate":0,"index":1425},{"krate":0,"index":1426},{"krate":0,"index":1427},{"krate":0,"index":1428},{"krate":0,"index":1429},{"krate":0,"index":4200}],"docs":"","sig":null,"attributes":[]},{"id":151,"kind":"Direct","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/iterators/mod.rs","byte_start":182675,"byte_end":182686,"line_start":1157,"line_end":1157,"column_start":42,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":1434},{"krate":0,"index":1435},{"krate":0,"index":1436},{"krate":0,"index":1437},{"krate":0,"index":1438},{"krate":0,"index":1439},{"krate":0,"index":1440},{"krate":0,"index":1441},{"krate":0,"index":1442},{"krate":0,"index":1443},{"krate":0,"index":1444},{"krate":0,"index":1445},{"krate":0,"index":4201}],"docs":"","sig":null,"attributes":[]},{"id":152,"kind":"Inherent","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/iterators/mod.rs","byte_start":186847,"byte_end":186861,"line_start":1297,"line_end":1297,"column_start":27,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":1461}],"docs":"","sig":null,"attributes":[]},{"id":153,"kind":"Inherent","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/iterators/mod.rs","byte_start":190759,"byte_end":190776,"line_start":1411,"line_end":1411,"column_start":27,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":1475}],"docs":"","sig":null,"attributes":[]},{"id":154,"kind":"Direct","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/iterators/mod.rs","byte_start":192166,"byte_end":192174,"line_start":1453,"line_end":1453,"column_start":36,"column_end":44},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":155,"kind":"Direct","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/iterators/mod.rs","byte_start":192240,"byte_end":192249,"line_start":1455,"line_end":1455,"column_start":36,"column_end":45},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":156,"kind":"Direct","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/iterators/mod.rs","byte_start":192315,"byte_end":192323,"line_start":1457,"line_end":1457,"column_start":36,"column_end":44},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":157,"kind":"Direct","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/iterators/mod.rs","byte_start":192372,"byte_end":192376,"line_start":1458,"line_end":1458,"column_start":43,"column_end":47},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":158,"kind":"Direct","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/iterators/mod.rs","byte_start":192432,"byte_end":192439,"line_start":1459,"line_end":1459,"column_start":43,"column_end":50},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":159,"kind":"Direct","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/iterators/mod.rs","byte_start":192499,"byte_end":192505,"line_start":1460,"line_end":1460,"column_start":47,"column_end":53},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":160,"kind":"Direct","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/iterators/mod.rs","byte_start":192586,"byte_end":192589,"line_start":1461,"line_end":1461,"column_start":50,"column_end":53},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":161,"kind":"Direct","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/iterators/mod.rs","byte_start":192670,"byte_end":192674,"line_start":1462,"line_end":1462,"column_start":47,"column_end":51},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":162,"kind":"Direct","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/iterators/mod.rs","byte_start":192731,"byte_end":192738,"line_start":1463,"line_end":1463,"column_start":47,"column_end":54},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":163,"kind":"Direct","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/iterators/mod.rs","byte_start":192793,"byte_end":192798,"line_start":1464,"line_end":1464,"column_start":45,"column_end":50},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":164,"kind":"Direct","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/iterators/mod.rs","byte_start":192923,"byte_end":192934,"line_start":1466,"line_end":1466,"column_start":36,"column_end":47},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":165,"kind":"Direct","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/iterators/mod.rs","byte_start":192995,"byte_end":193007,"line_start":1467,"line_end":1467,"column_start":36,"column_end":48},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":166,"kind":"Direct","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/layout/layoutfmt.rs","byte_start":216685,"byte_end":216691,"line_start":15,"line_end":15,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1527}],"docs":"","sig":null,"attributes":[]},{"id":167,"kind":"Inherent","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/layout/mod.rs","byte_start":210819,"byte_end":210825,"line_start":11,"line_end":11,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":1531},{"krate":0,"index":1532},{"krate":0,"index":1533},{"krate":0,"index":1534},{"krate":0,"index":1535},{"krate":0,"index":1536},{"krate":0,"index":1537},{"krate":0,"index":1538},{"krate":0,"index":1539},{"krate":0,"index":1540}],"docs":"","sig":null,"attributes":[]},{"id":168,"kind":"Direct","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/linalg_traits.rs","byte_start":218219,"byte_end":218220,"line_start":38,"line_end":38,"column_start":26,"column_end":27},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":171,"kind":"Direct","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/linspace.rs","byte_start":219749,"byte_end":219757,"line_start":21,"line_end":21,"column_start":22,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1579},{"krate":0,"index":1580},{"krate":0,"index":1581}],"docs":"","sig":null,"attributes":[]},{"id":172,"kind":"Direct","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/linspace.rs","byte_start":220298,"byte_end":220306,"line_start":46,"line_end":46,"column_start":33,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":1584}],"docs":"","sig":null,"attributes":[]},{"id":173,"kind":"Direct","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/linspace.rs","byte_start":220693,"byte_end":220701,"line_start":63,"line_end":63,"column_start":31,"column_end":39},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":174,"kind":"Direct","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/logspace.rs","byte_start":222842,"byte_end":222850,"line_start":23,"line_end":23,"column_start":22,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1603},{"krate":0,"index":1604},{"krate":0,"index":1605}],"docs":"","sig":null,"attributes":[]},{"id":175,"kind":"Direct","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/logspace.rs","byte_start":223456,"byte_end":223464,"line_start":49,"line_end":49,"column_start":33,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":1608}],"docs":"","sig":null,"attributes":[]},{"id":176,"kind":"Direct","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/logspace.rs","byte_start":223916,"byte_end":223924,"line_start":67,"line_end":67,"column_start":31,"column_end":39},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":177,"kind":"Inherent","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/math_cell.rs","byte_start":227065,"byte_end":227073,"line_start":17,"line_end":17,"column_start":9,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":1622},{"krate":0,"index":1623},{"krate":0,"index":1624}],"docs":"","sig":null,"attributes":[]},{"id":178,"kind":"Direct","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/math_cell.rs","byte_start":227454,"byte_end":227462,"line_start":31,"line_end":31,"column_start":19,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1627},{"krate":0,"index":1628}],"docs":"","sig":null,"attributes":[]},{"id":179,"kind":"Direct","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/math_cell.rs","byte_start":227590,"byte_end":227598,"line_start":37,"line_end":37,"column_start":22,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1631}],"docs":"","sig":null,"attributes":[]},{"id":180,"kind":"Direct","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/math_cell.rs","byte_start":227712,"byte_end":227720,"line_start":42,"line_end":42,"column_start":19,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1634}],"docs":"","sig":null,"attributes":[]},{"id":181,"kind":"Direct","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/math_cell.rs","byte_start":227839,"byte_end":227847,"line_start":50,"line_end":50,"column_start":23,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1637}],"docs":"","sig":null,"attributes":[]},{"id":182,"kind":"Direct","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/math_cell.rs","byte_start":227978,"byte_end":227986,"line_start":58,"line_end":58,"column_start":16,"column_end":24},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":183,"kind":"Direct","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/math_cell.rs","byte_start":228041,"byte_end":228049,"line_start":62,"line_end":62,"column_start":24,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1642},{"krate":0,"index":1643},{"krate":0,"index":1644},{"krate":0,"index":1645},{"krate":0,"index":1646}],"docs":"","sig":null,"attributes":[]},{"id":184,"kind":"Direct","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/math_cell.rs","byte_start":228483,"byte_end":228491,"line_start":75,"line_end":75,"column_start":17,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":1649}],"docs":"","sig":null,"attributes":[]},{"id":185,"kind":"Direct","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/math_cell.rs","byte_start":228632,"byte_end":228640,"line_start":83,"line_end":83,"column_start":24,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1652}],"docs":"","sig":null,"attributes":[]},{"id":186,"kind":"Inherent","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/partial.rs","byte_start":233450,"byte_end":233457,"line_start":22,"line_end":22,"column_start":9,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":1673},{"krate":0,"index":1674}],"docs":"","sig":null,"attributes":[]},{"id":187,"kind":"Direct","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/partial.rs","byte_start":235288,"byte_end":235295,"line_start":78,"line_end":78,"column_start":25,"column_end":32},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":188,"kind":"Direct","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/partial.rs","byte_start":235335,"byte_end":235342,"line_start":80,"line_end":80,"column_start":18,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":1679}],"docs":"","sig":null,"attributes":[]},{"id":189,"kind":"Inherent","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/shape_builder.rs","byte_start":235997,"byte_end":236002,"line_start":18,"line_end":18,"column_start":9,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":1685}],"docs":"","sig":null,"attributes":[]},{"id":190,"kind":"Inherent","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/shape_builder.rs","byte_start":236502,"byte_end":236509,"line_start":43,"line_end":43,"column_start":9,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":1688},{"krate":0,"index":1689}],"docs":"","sig":null,"attributes":[]},{"id":191,"kind":"Direct","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/shape_builder.rs","byte_start":237699,"byte_end":237704,"line_start":80,"line_end":80,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":1699}],"docs":"","sig":null,"attributes":[]},{"id":192,"kind":"Direct","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/shape_builder.rs","byte_start":237913,"byte_end":237924,"line_start":90,"line_end":90,"column_start":24,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1703}],"docs":"","sig":null,"attributes":[]},{"id":193,"kind":"Direct","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/shape_builder.rs","byte_start":238284,"byte_end":238285,"line_start":109,"line_end":109,"column_start":26,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1706},{"krate":0,"index":1707},{"krate":0,"index":1708},{"krate":0,"index":1709},{"krate":0,"index":1710},{"krate":0,"index":1711}],"docs":"","sig":null,"attributes":[]},{"id":194,"kind":"Direct","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/shape_builder.rs","byte_start":238822,"byte_end":238827,"line_start":132,"line_end":132,"column_start":26,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1714},{"krate":0,"index":1715},{"krate":0,"index":1716},{"krate":0,"index":1717},{"krate":0,"index":1718},{"krate":0,"index":1719}],"docs":"","sig":null,"attributes":[]},{"id":195,"kind":"Inherent","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/shape_builder.rs","byte_start":239312,"byte_end":239317,"line_start":160,"line_end":160,"column_start":9,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":1722}],"docs":"","sig":null,"attributes":[]},{"id":196,"kind":"Inherent","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/slice.rs","byte_start":241239,"byte_end":241244,"line_start":44,"line_end":44,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":1753},{"krate":0,"index":1754}],"docs":"","sig":null,"attributes":[]},{"id":199,"kind":"Inherent","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/slice.rs","byte_start":244229,"byte_end":244242,"line_start":124,"line_end":124,"column_start":6,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":1756},{"krate":0,"index":1757},{"krate":0,"index":1758}],"docs":"","sig":null,"attributes":[]},{"id":200,"kind":"Direct","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/slice.rs","byte_start":244713,"byte_end":244726,"line_start":141,"line_end":141,"column_start":23,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1760}],"docs":"","sig":null,"attributes":[]},{"id":231,"kind":"Direct","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/slice.rs","byte_start":247592,"byte_end":247597,"line_start":230,"line_end":230,"column_start":26,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1763}],"docs":"","sig":null,"attributes":[]},{"id":232,"kind":"Direct","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/slice.rs","byte_start":247777,"byte_end":247790,"line_start":241,"line_end":241,"column_start":26,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":1765}],"docs":"","sig":null,"attributes":[]},{"id":233,"kind":"Direct","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/slice.rs","byte_start":247989,"byte_end":248002,"line_start":252,"line_end":252,"column_start":22,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1767}],"docs":"","sig":null,"attributes":[]},{"id":234,"kind":"Direct","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/slice.rs","byte_start":248593,"byte_end":248606,"line_start":277,"line_end":277,"column_start":24,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":1770}],"docs":"","sig":null,"attributes":[]},{"id":235,"kind":"Direct","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/slice.rs","byte_start":250427,"byte_end":250436,"line_start":350,"line_end":350,"column_start":47,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":1787},{"krate":0,"index":1788},{"krate":0,"index":1789},{"krate":0,"index":4579}],"docs":"","sig":null,"attributes":[]},{"id":236,"kind":"Direct","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/slice.rs","byte_start":251751,"byte_end":251760,"line_start":400,"line_end":400,"column_start":30,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":1800},{"krate":0,"index":1801}],"docs":"","sig":null,"attributes":[]},{"id":237,"kind":"Inherent","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/slice.rs","byte_start":252441,"byte_end":252450,"line_start":429,"line_end":429,"column_start":20,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1809},{"krate":0,"index":1810},{"krate":0,"index":1811},{"krate":0,"index":1812}],"docs":"","sig":null,"attributes":[]},{"id":238,"kind":"Direct","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/slice.rs","byte_start":255073,"byte_end":255082,"line_start":510,"line_end":510,"column_start":54,"column_end":63},"value":"","parent":null,"children":[{"krate":0,"index":1817},{"krate":0,"index":1818}],"docs":"","sig":null,"attributes":[]},{"id":239,"kind":"Direct","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/slice.rs","byte_start":255554,"byte_end":255563,"line_start":528,"line_end":528,"column_start":49,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":1822},{"krate":0,"index":1823}],"docs":"","sig":null,"attributes":[]},{"id":240,"kind":"Direct","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/slice.rs","byte_start":257069,"byte_end":257078,"line_start":578,"line_end":578,"column_start":47,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":1829}],"docs":"","sig":null,"attributes":[]},{"id":241,"kind":"Direct","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/slice.rs","byte_start":257320,"byte_end":257329,"line_start":590,"line_end":590,"column_start":9,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":1835}],"docs":"","sig":null,"attributes":[]},{"id":242,"kind":"Direct","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/slice.rs","byte_start":257715,"byte_end":257724,"line_start":605,"line_end":605,"column_start":29,"column_end":38},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":243,"kind":"Direct","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/slice.rs","byte_start":257833,"byte_end":257842,"line_start":613,"line_end":613,"column_start":30,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":1844}],"docs":"","sig":null,"attributes":[]},{"id":255,"kind":"Direct","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/split_at.rs","byte_start":271167,"byte_end":271168,"line_start":18,"line_end":18,"column_start":21,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":1891}],"docs":"","sig":null,"attributes":[]},{"id":256,"kind":"Direct","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/split_at.rs","byte_start":271478,"byte_end":271490,"line_start":33,"line_end":33,"column_start":28,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":1896}],"docs":"","sig":null,"attributes":[]},{"id":257,"kind":"Direct","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/split_at.rs","byte_start":271660,"byte_end":271675,"line_start":42,"line_end":42,"column_start":24,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":1900}],"docs":"","sig":null,"attributes":[]},{"id":258,"kind":"Direct","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/zip/ndproducer.rs","byte_start":315970,"byte_end":315971,"line_start":23,"line_end":23,"column_start":28,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1938},{"krate":0,"index":1939},{"krate":0,"index":1940},{"krate":0,"index":1941}],"docs":"","sig":null,"attributes":[]},{"id":259,"kind":"Direct","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/zip/ndproducer.rs","byte_start":320857,"byte_end":320866,"line_start":191,"line_end":191,"column_start":42,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":2017},{"krate":0,"index":2018},{"krate":0,"index":2019},{"krate":0,"index":2020},{"krate":0,"index":4775},{"krate":0,"index":2021},{"krate":0,"index":2022},{"krate":0,"index":2023},{"krate":0,"index":2024},{"krate":0,"index":2025},{"krate":0,"index":2026},{"krate":0,"index":2027},{"krate":0,"index":2028},{"krate":0,"index":2029}],"docs":"","sig":null,"attributes":[]},{"id":260,"kind":"Direct","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/zip/ndproducer.rs","byte_start":321961,"byte_end":321973,"line_start":244,"line_end":244,"column_start":42,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":2034},{"krate":0,"index":2035},{"krate":0,"index":2036},{"krate":0,"index":2037},{"krate":0,"index":4776},{"krate":0,"index":2038},{"krate":0,"index":2039},{"krate":0,"index":2040},{"krate":0,"index":2041},{"krate":0,"index":2042},{"krate":0,"index":2043},{"krate":0,"index":2044},{"krate":0,"index":2045},{"krate":0,"index":2046}],"docs":"","sig":null,"attributes":[]},{"id":261,"kind":"Direct","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/zip/ndproducer.rs","byte_start":323072,"byte_end":323084,"line_start":297,"line_end":297,"column_start":38,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":2050},{"krate":0,"index":2051},{"krate":0,"index":2052},{"krate":0,"index":2053},{"krate":0,"index":4777},{"krate":0,"index":2054},{"krate":0,"index":2055},{"krate":0,"index":2056},{"krate":0,"index":2057},{"krate":0,"index":2058},{"krate":0,"index":2059},{"krate":0,"index":2060},{"krate":0,"index":2061},{"krate":0,"index":2062}],"docs":"","sig":null,"attributes":[]},{"id":262,"kind":"Direct","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/zip/ndproducer.rs","byte_start":324173,"byte_end":324188,"line_start":350,"line_end":350,"column_start":38,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":2066},{"krate":0,"index":2067},{"krate":0,"index":2068},{"krate":0,"index":2069},{"krate":0,"index":4778},{"krate":0,"index":2070},{"krate":0,"index":2071},{"krate":0,"index":2072},{"krate":0,"index":2073},{"krate":0,"index":2074},{"krate":0,"index":2075},{"krate":0,"index":2076},{"krate":0,"index":2077},{"krate":0,"index":2078}],"docs":"","sig":null,"attributes":[]},{"id":263,"kind":"Inherent","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/zip/mod.rs","byte_start":280919,"byte_end":280928,"line_start":55,"line_end":55,"column_start":12,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":2105}],"docs":"","sig":null,"attributes":[]},{"id":264,"kind":"Direct","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/zip/mod.rs","byte_start":281818,"byte_end":281827,"line_start":85,"line_end":85,"column_start":36,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":2112},{"krate":0,"index":2113},{"krate":0,"index":4780}],"docs":"","sig":null,"attributes":[]},{"id":265,"kind":"Inherent","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/zip/mod.rs","byte_start":285643,"byte_end":285646,"line_start":198,"line_end":198,"column_start":12,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":2128}],"docs":"","sig":null,"attributes":[]},{"id":266,"kind":"Inherent","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/zip/mod.rs","byte_start":286317,"byte_end":286320,"line_start":222,"line_end":222,"column_start":12,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":2133}],"docs":"","sig":null,"attributes":[]},{"id":267,"kind":"Inherent","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/zip/mod.rs","byte_start":286925,"byte_end":286928,"line_start":243,"line_end":243,"column_start":16,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":2138},{"krate":0,"index":2140},{"krate":0,"index":2141},{"krate":0,"index":2142},{"krate":0,"index":2143}],"docs":"","sig":null,"attributes":[]},{"id":268,"kind":"Inherent","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/zip/mod.rs","byte_start":288378,"byte_end":288381,"line_start":299,"line_end":299,"column_start":12,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":2149},{"krate":0,"index":2152},{"krate":0,"index":2155},{"krate":0,"index":2158},{"krate":0,"index":2161},{"krate":0,"index":2164}],"docs":"","sig":null,"attributes":[]},{"id":269,"kind":"Inherent","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/zip/mod.rs","byte_start":310176,"byte_end":310185,"line_start":884,"line_end":884,"column_start":9,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":2179},{"krate":0,"index":2180}],"docs":"","sig":null,"attributes":[]},{"id":272,"kind":"Inherent","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/dimension/axes.rs","byte_start":365710,"byte_end":365725,"line_start":61,"line_end":61,"column_start":6,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":2222},{"krate":0,"index":2223},{"krate":0,"index":2224}],"docs":"","sig":null,"attributes":[]},{"id":275,"kind":"Direct","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/dimension/axes.rs","byte_start":366303,"byte_end":366307,"line_start":84,"line_end":84,"column_start":26,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":2228},{"krate":0,"index":2229},{"krate":0,"index":2230},{"krate":0,"index":2234}],"docs":"","sig":null,"attributes":[]},{"id":276,"kind":"Direct","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/dimension/axes.rs","byte_start":367279,"byte_end":367283,"line_start":123,"line_end":123,"column_start":37,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":2238}],"docs":"","sig":null,"attributes":[]},{"id":278,"kind":"Inherent","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/dimension/axis.rs","byte_start":369421,"byte_end":369425,"line_start":29,"line_end":29,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":2249}],"docs":"","sig":null,"attributes":[]},{"id":279,"kind":"Direct","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/dimension/broadcast.rs","byte_start":371102,"byte_end":371103,"line_start":45,"line_end":45,"column_start":34,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":2271}],"docs":"","sig":null,"attributes":[]},{"id":336,"kind":"Direct","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/dimension/conversion.rs","byte_start":375929,"byte_end":375931,"line_start":47,"line_end":47,"column_start":24,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":2292},{"krate":0,"index":2293}],"docs":"","sig":null,"attributes":[]},{"id":337,"kind":"Direct","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/dimension/conversion.rs","byte_start":376066,"byte_end":376067,"line_start":55,"line_end":55,"column_start":27,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":2296},{"krate":0,"index":2297}],"docs":"","sig":null,"attributes":[]},{"id":338,"kind":"Direct","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/dimension/conversion.rs","byte_start":376217,"byte_end":376226,"line_start":66,"line_end":66,"column_start":24,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":2299},{"krate":0,"index":2300}],"docs":"","sig":null,"attributes":[]},{"id":339,"kind":"Direct","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/dimension/conversion.rs","byte_start":376371,"byte_end":376374,"line_start":74,"line_end":74,"column_start":24,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":2302},{"krate":0,"index":2303}],"docs":"","sig":null,"attributes":[]},{"id":340,"kind":"Inherent","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/dimension/dim.rs","byte_start":379791,"byte_end":379794,"line_start":43,"line_end":43,"column_start":9,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":2321},{"krate":0,"index":2322},{"krate":0,"index":2323}],"docs":"","sig":null,"attributes":[]},{"id":341,"kind":"Direct","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/dimension/dim.rs","byte_start":380292,"byte_end":380295,"line_start":67,"line_end":67,"column_start":34,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":2328}],"docs":"","sig":null,"attributes":[]},{"id":342,"kind":"Direct","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/dimension/dim.rs","byte_start":380420,"byte_end":380423,"line_start":76,"line_end":76,"column_start":24,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":2331}],"docs":"","sig":null,"attributes":[]},{"id":343,"kind":"Direct","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/dimension/dimension_trait.rs","byte_start":395405,"byte_end":395408,"line_start":392,"line_end":392,"column_start":20,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":2441},{"krate":0,"index":2442},{"krate":0,"index":2443},{"krate":0,"index":2444},{"krate":0,"index":2445},{"krate":0,"index":2446},{"krate":0,"index":2447},{"krate":0,"index":2448},{"krate":0,"index":2449},{"krate":0,"index":2450},{"krate":0,"index":2451},{"krate":0,"index":5780},{"krate":0,"index":2452},{"krate":0,"index":5782}],"docs":"","sig":null,"attributes":[]},{"id":344,"kind":"Direct","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/dimension/dimension_trait.rs","byte_start":396306,"byte_end":396309,"line_start":435,"line_end":435,"column_start":20,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":2455},{"krate":0,"index":2456},{"krate":0,"index":2457},{"krate":0,"index":2458},{"krate":0,"index":2459},{"krate":0,"index":2460},{"krate":0,"index":2461},{"krate":0,"index":2462},{"krate":0,"index":2463},{"krate":0,"index":2464},{"krate":0,"index":2465},{"krate":0,"index":2466},{"krate":0,"index":2467},{"krate":0,"index":2468},{"krate":0,"index":2469},{"krate":0,"index":2470},{"krate":0,"index":2471},{"krate":0,"index":2472},{"krate":0,"index":2473},{"krate":0,"index":2474},{"krate":0,"index":5783},{"krate":0,"index":2475},{"krate":0,"index":2476},{"krate":0,"index":5785}],"docs":"","sig":null,"attributes":[]},{"id":345,"kind":"Direct","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/dimension/dimension_trait.rs","byte_start":398816,"byte_end":398819,"line_start":550,"line_end":550,"column_start":20,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":2480},{"krate":0,"index":2481},{"krate":0,"index":2482},{"krate":0,"index":2483},{"krate":0,"index":2484},{"krate":0,"index":2485},{"krate":0,"index":2486},{"krate":0,"index":2487},{"krate":0,"index":2488},{"krate":0,"index":2489},{"krate":0,"index":2490},{"krate":0,"index":2491},{"krate":0,"index":2492},{"krate":0,"index":2493},{"krate":0,"index":2494},{"krate":0,"index":2495},{"krate":0,"index":2496},{"krate":0,"index":2497},{"krate":0,"index":2498},{"krate":0,"index":2499},{"krate":0,"index":2500},{"krate":0,"index":2501},{"krate":0,"index":5786},{"krate":0,"index":2502},{"krate":0,"index":5788}],"docs":"","sig":null,"attributes":[]},{"id":346,"kind":"Direct","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/dimension/dimension_trait.rs","byte_start":402496,"byte_end":402499,"line_start":706,"line_end":706,"column_start":20,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":2505},{"krate":0,"index":2506},{"krate":0,"index":2507},{"krate":0,"index":2508},{"krate":0,"index":2509},{"krate":0,"index":2510},{"krate":0,"index":2511},{"krate":0,"index":2512},{"krate":0,"index":2513},{"krate":0,"index":2514},{"krate":0,"index":2515},{"krate":0,"index":2516},{"krate":0,"index":2517},{"krate":0,"index":2518},{"krate":0,"index":5789},{"krate":0,"index":2520},{"krate":0,"index":5791}],"docs":"","sig":null,"attributes":[]},{"id":347,"kind":"Direct","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/dimension/dimension_trait.rs","byte_start":407512,"byte_end":407517,"line_start":878,"line_end":878,"column_start":20,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":2523},{"krate":0,"index":2524},{"krate":0,"index":2525},{"krate":0,"index":2526},{"krate":0,"index":2527},{"krate":0,"index":2528},{"krate":0,"index":2529},{"krate":0,"index":2530},{"krate":0,"index":2531},{"krate":0,"index":2532},{"krate":0,"index":2533},{"krate":0,"index":2534},{"krate":0,"index":2536},{"krate":0,"index":5839}],"docs":"","sig":null,"attributes":[]},{"id":348,"kind":"Direct","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/dimension/dimension_trait.rs","byte_start":408596,"byte_end":408599,"line_start":931,"line_end":931,"column_start":23,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":2538},{"krate":0,"index":2539}],"docs":"","sig":null,"attributes":[]},{"id":349,"kind":"Direct","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/dimension/dimension_trait.rs","byte_start":408781,"byte_end":408784,"line_start":938,"line_end":938,"column_start":26,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":2541}],"docs":"","sig":null,"attributes":[]},{"id":350,"kind":"Direct","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/dimension/dynindeximpl.rs","byte_start":409224,"byte_end":409233,"line_start":16,"line_end":16,"column_start":19,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":2558},{"krate":0,"index":2559}],"docs":"","sig":null,"attributes":[]},{"id":351,"kind":"Direct","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/dimension/dynindeximpl.rs","byte_start":409579,"byte_end":409588,"line_start":29,"line_end":29,"column_start":22,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":2562}],"docs":"","sig":null,"attributes":[]},{"id":352,"kind":"Direct","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/dimension/dynindeximpl.rs","byte_start":409988,"byte_end":409997,"line_start":42,"line_end":42,"column_start":18,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":2564}],"docs":"","sig":null,"attributes":[]},{"id":353,"kind":"Inherent","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/dimension/dynindeximpl.rs","byte_start":410114,"byte_end":410123,"line_start":50,"line_end":50,"column_start":22,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":2568}],"docs":"","sig":null,"attributes":[]},{"id":354,"kind":"Inherent","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/dimension/dynindeximpl.rs","byte_start":410420,"byte_end":410429,"line_start":62,"line_end":62,"column_start":22,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":2572}],"docs":"","sig":null,"attributes":[]},{"id":355,"kind":"Inherent","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/dimension/dynindeximpl.rs","byte_start":410671,"byte_end":410680,"line_start":73,"line_end":73,"column_start":15,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":2575},{"krate":0,"index":2576}],"docs":"","sig":null,"attributes":[]},{"id":356,"kind":"Direct","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/dimension/dynindeximpl.rs","byte_start":410876,"byte_end":410885,"line_start":83,"line_end":83,"column_start":25,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":2579}],"docs":"","sig":null,"attributes":[]},{"id":357,"kind":"Direct","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/dimension/dynindeximpl.rs","byte_start":411093,"byte_end":411102,"line_start":92,"line_end":92,"column_start":20,"column_end":29},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":358,"kind":"Direct","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/dimension/dynindeximpl.rs","byte_start":411143,"byte_end":411152,"line_start":94,"line_end":94,"column_start":34,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":2584}],"docs":"","sig":null,"attributes":[]},{"id":359,"kind":"Direct","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/dimension/dynindeximpl.rs","byte_start":411588,"byte_end":411597,"line_start":108,"line_end":108,"column_start":24,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":2589}],"docs":"","sig":null,"attributes":[]},{"id":360,"kind":"Inherent","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/dimension/dynindeximpl.rs","byte_start":412013,"byte_end":412022,"line_start":122,"line_end":122,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":2592},{"krate":0,"index":2594}],"docs":"","sig":null,"attributes":[]},{"id":361,"kind":"Direct","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/dimension/dynindeximpl.rs","byte_start":413347,"byte_end":413356,"line_start":161,"line_end":161,"column_start":29,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":2600}],"docs":"","sig":null,"attributes":[]},{"id":362,"kind":"Direct","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/dimension/dynindeximpl.rs","byte_start":413485,"byte_end":413494,"line_start":168,"line_end":168,"column_start":24,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":2602}],"docs":"","sig":null,"attributes":[]},{"id":363,"kind":"Direct","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/dimension/dynindeximpl.rs","byte_start":413624,"byte_end":413633,"line_start":175,"line_end":175,"column_start":22,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":2605},{"krate":0,"index":2606}],"docs":"","sig":null,"attributes":[]},{"id":364,"kind":"Direct","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/dimension/dynindeximpl.rs","byte_start":413813,"byte_end":413822,"line_start":185,"line_end":185,"column_start":25,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":2609}],"docs":"","sig":null,"attributes":[]},{"id":365,"kind":"Direct","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/dimension/dynindeximpl.rs","byte_start":413966,"byte_end":413975,"line_start":194,"line_end":194,"column_start":16,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":2611},{"krate":0,"index":2612}],"docs":"","sig":null,"attributes":[]},{"id":366,"kind":"Direct","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/dimension/dynindeximpl.rs","byte_start":414090,"byte_end":414099,"line_start":202,"line_end":202,"column_start":19,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":2614}],"docs":"","sig":null,"attributes":[]},{"id":367,"kind":"Direct","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/dimension/dynindeximpl.rs","byte_start":414422,"byte_end":414425,"line_start":218,"line_end":218,"column_start":21,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":2621}],"docs":"","sig":null,"attributes":[]},{"id":368,"kind":"Inherent","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/dimension/dynindeximpl.rs","byte_start":414601,"byte_end":414606,"line_start":225,"line_end":225,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":2623}],"docs":"","sig":null,"attributes":[]},{"id":369,"kind":"Direct","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/dimension/ndindex.rs","byte_start":415613,"byte_end":415614,"line_start":28,"line_end":28,"column_start":31,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":2652},{"krate":0,"index":2653}],"docs":"","sig":null,"attributes":[]},{"id":370,"kind":"Direct","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/dimension/ndindex.rs","byte_start":417800,"byte_end":417802,"line_start":100,"line_end":100,"column_start":30,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":2672},{"krate":0,"index":2673}],"docs":"","sig":null,"attributes":[]},{"id":371,"kind":"Direct","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/dimension/ndindex.rs","byte_start":418119,"byte_end":418121,"line_start":111,"line_end":111,"column_start":32,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":2675},{"krate":0,"index":2676}],"docs":"","sig":null,"attributes":[]},{"id":372,"kind":"Direct","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/dimension/ops.rs","byte_start":422710,"byte_end":422713,"line_start":30,"line_end":30,"column_start":34,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":2700}],"docs":"","sig":null,"attributes":[]},{"id":373,"kind":"Direct","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/dimension/ops.rs","byte_start":424477,"byte_end":424482,"line_start":88,"line_end":88,"column_start":34,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":2703}],"docs":"","sig":null,"attributes":[]},{"id":374,"kind":"Direct","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/dimension/remove_axis.rs","byte_start":425219,"byte_end":425222,"line_start":19,"line_end":19,"column_start":21,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":2716}],"docs":"","sig":null,"attributes":[]},{"id":375,"kind":"Direct","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/dimension/remove_axis.rs","byte_start":425389,"byte_end":425392,"line_start":27,"line_end":27,"column_start":21,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":2719}],"docs":"","sig":null,"attributes":[]},{"id":376,"kind":"Direct","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/dimension/mod.rs","byte_start":336420,"byte_end":336421,"line_start":317,"line_end":317,"column_start":26,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":2756},{"krate":0,"index":2757}],"docs":"","sig":null,"attributes":[]},{"id":377,"kind":"Direct","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":52306,"byte_end":52318,"line_start":1449,"line_end":1449,"column_start":19,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":2909}],"docs":"","sig":null,"attributes":[]},{"id":378,"kind":"Inherent","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":52780,"byte_end":52791,"line_start":1466,"line_end":1466,"column_start":9,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":2912}],"docs":"","sig":null,"attributes":[]},{"id":379,"kind":"Inherent","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":53246,"byte_end":53254,"line_start":1484,"line_end":1484,"column_start":9,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":2915}],"docs":"","sig":null,"attributes":[]},{"id":380,"kind":"Inherent","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":53637,"byte_end":53644,"line_start":1502,"line_end":1502,"column_start":13,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":2928},{"krate":0,"index":2929}],"docs":"","sig":null,"attributes":[]},{"id":381,"kind":"Direct","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_clone.rs","byte_start":428394,"byte_end":428403,"line_start":12,"line_end":12,"column_start":43,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":2936},{"krate":0,"index":2937}],"docs":"","sig":null,"attributes":[]},{"id":382,"kind":"Direct","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_clone.rs","byte_start":429293,"byte_end":429302,"line_start":38,"line_end":38,"column_start":48,"column_end":57},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":383,"kind":"Inherent","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_internal_constructors.rs","byte_start":429763,"byte_end":429772,"line_start":14,"line_end":14,"column_start":12,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":2947}],"docs":"","sig":null,"attributes":[]},{"id":384,"kind":"Inherent","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_internal_constructors.rs","byte_start":430455,"byte_end":430464,"line_start":39,"line_end":39,"column_start":15,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":2952}],"docs":"","sig":null,"attributes":[]},{"id":385,"kind":"Inherent","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_constructors.rs","byte_start":432471,"byte_end":432480,"line_start":44,"line_end":44,"column_start":12,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":2983},{"krate":0,"index":2984},{"krate":0,"index":2986},{"krate":0,"index":2987},{"krate":0,"index":2988},{"krate":0,"index":2989}],"docs":"","sig":null,"attributes":[]},{"id":386,"kind":"Inherent","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_constructors.rs","byte_start":437401,"byte_end":437410,"line_start":191,"line_end":191,"column_start":12,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":2993},{"krate":0,"index":2994}],"docs":"","sig":null,"attributes":[]},{"id":387,"kind":"Inherent","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_constructors.rs","byte_start":440067,"byte_end":440076,"line_start":277,"line_end":277,"column_start":15,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":3001},{"krate":0,"index":3003},{"krate":0,"index":3005},{"krate":0,"index":3007},{"krate":0,"index":3009},{"krate":0,"index":3013},{"krate":0,"index":3016},{"krate":0,"index":3018},{"krate":0,"index":3019},{"krate":0,"index":3021},{"krate":0,"index":3022},{"krate":0,"index":3024},{"krate":0,"index":3027}],"docs":"","sig":null,"attributes":[]},{"id":388,"kind":"Inherent","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_constructors.rs","byte_start":452936,"byte_end":452945,"line_start":628,"line_end":628,"column_start":15,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":3033}],"docs":"","sig":null,"attributes":[]},{"id":389,"kind":"Inherent","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":454997,"byte_end":455006,"line_start":41,"line_end":41,"column_start":15,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":3098},{"krate":0,"index":3099},{"krate":0,"index":3100},{"krate":0,"index":3101},{"krate":0,"index":3102},{"krate":0,"index":3103},{"krate":0,"index":3104},{"krate":0,"index":3105},{"krate":0,"index":3106},{"krate":0,"index":3107},{"krate":0,"index":3108},{"krate":0,"index":3109},{"krate":0,"index":3110},{"krate":0,"index":3112},{"krate":0,"index":3113},{"krate":0,"index":3114},{"krate":0,"index":3115},{"krate":0,"index":3116},{"krate":0,"index":3117},{"krate":0,"index":3118},{"krate":0,"index":3119},{"krate":0,"index":3120},{"krate":0,"index":3121},{"krate":0,"index":3123},{"krate":0,"index":3125},{"krate":0,"index":3128},{"krate":0,"index":3131},{"krate":0,"index":3134},{"krate":0,"index":3135},{"krate":0,"index":3136},{"krate":0,"index":3137},{"krate":0,"index":3139},{"krate":0,"index":3141},{"krate":0,"index":3143},{"krate":0,"index":3146},{"krate":0,"index":3149},{"krate":0,"index":3152},{"krate":0,"index":3155},{"krate":0,"index":3157},{"krate":0,"index":3159},{"krate":0,"index":3161},{"krate":0,"index":3163},{"krate":0,"index":3164},{"krate":0,"index":3165},{"krate":0,"index":3166},{"krate":0,"index":3167},{"krate":0,"index":3168},{"krate":0,"index":3169},{"krate":0,"index":3170},{"krate":0,"index":3171},{"krate":0,"index":3172},{"krate":0,"index":3173},{"krate":0,"index":3174},{"krate":0,"index":3175},{"krate":0,"index":3176},{"krate":0,"index":3177},{"krate":0,"index":3178},{"krate":0,"index":3179},{"krate":0,"index":3180},{"krate":0,"index":3181},{"krate":0,"index":3182},{"krate":0,"index":3183},{"krate":0,"index":3184},{"krate":0,"index":3185},{"krate":0,"index":3187},{"krate":0,"index":3189},{"krate":0,"index":3191},{"krate":0,"index":3192},{"krate":0,"index":3193},{"krate":0,"index":3194},{"krate":0,"index":3195},{"krate":0,"index":3196},{"krate":0,"index":3197},{"krate":0,"index":3201},{"krate":0,"index":3202},{"krate":0,"index":3203},{"krate":0,"index":3204},{"krate":0,"index":3205},{"krate":0,"index":3206},{"krate":0,"index":3207},{"krate":0,"index":3208},{"krate":0,"index":3209},{"krate":0,"index":3210},{"krate":0,"index":3211},{"krate":0,"index":3212},{"krate":0,"index":3213},{"krate":0,"index":3215},{"krate":0,"index":3217},{"krate":0,"index":3218},{"krate":0,"index":3220},{"krate":0,"index":3225},{"krate":0,"index":3231},{"krate":0,"index":3232},{"krate":0,"index":3234},{"krate":0,"index":3235},{"krate":0,"index":3236},{"krate":0,"index":3237},{"krate":0,"index":3238},{"krate":0,"index":3239},{"krate":0,"index":3240},{"krate":0,"index":3241},{"krate":0,"index":3242},{"krate":0,"index":3243},{"krate":0,"index":3247},{"krate":0,"index":3249},{"krate":0,"index":3251},{"krate":0,"index":3256},{"krate":0,"index":3263},{"krate":0,"index":3267},{"krate":0,"index":3272},{"krate":0,"index":3276},{"krate":0,"index":3280},{"krate":0,"index":3284},{"krate":0,"index":3288},{"krate":0,"index":3290},{"krate":0,"index":3293},{"krate":0,"index":3296},{"krate":0,"index":3300},{"krate":0,"index":3303},{"krate":0,"index":3307},{"krate":0,"index":3313},{"krate":0,"index":3319}],"docs":"","sig":null,"attributes":[]},{"id":390,"kind":"Inherent","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_owned_array.rs","byte_start":540590,"byte_end":540595,"line_start":10,"line_end":10,"column_start":9,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":3333}],"docs":"","sig":null,"attributes":[]},{"id":391,"kind":"Inherent","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_owned_array.rs","byte_start":542001,"byte_end":542006,"line_start":49,"line_end":49,"column_start":12,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":3337}],"docs":"","sig":null,"attributes":[]},{"id":392,"kind":"Inherent","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_special_element_types.rs","byte_start":542995,"byte_end":543004,"line_start":20,"line_end":20,"column_start":15,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":3346}],"docs":"","sig":null,"attributes":[]},{"id":393,"kind":"Inherent","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":54480,"byte_end":54489,"line_start":1533,"line_end":1533,"column_start":15,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":3351},{"krate":0,"index":3356},{"krate":0,"index":3358},{"krate":0,"index":3359},{"krate":0,"index":3360}],"docs":"","sig":null,"attributes":[]},{"id":394,"kind":"Inherent","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_1d.rs","byte_start":544539,"byte_end":544548,"line_start":14,"line_end":14,"column_start":12,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":3367}],"docs":"","sig":null,"attributes":[]},{"id":395,"kind":"Inherent","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_2d.rs","byte_start":545380,"byte_end":545389,"line_start":13,"line_end":13,"column_start":12,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":3373},{"krate":0,"index":3374},{"krate":0,"index":3375},{"krate":0,"index":3376},{"krate":0,"index":3377},{"krate":0,"index":3378},{"krate":0,"index":3379}],"docs":"","sig":null,"attributes":[]},{"id":396,"kind":"Inherent","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_dyn.rs","byte_start":548757,"byte_end":548766,"line_start":13,"line_end":13,"column_start":12,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":3385},{"krate":0,"index":3386}],"docs":"","sig":null,"attributes":[]},{"id":397,"kind":"Inherent","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/numeric/impl_numeric.rs","byte_start":550889,"byte_end":550898,"line_start":19,"line_end":19,"column_start":15,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":3405},{"krate":0,"index":3407},{"krate":0,"index":3408},{"krate":0,"index":3409},{"krate":0,"index":3411},{"krate":0,"index":3413},{"krate":0,"index":3414},{"krate":0,"index":3415},{"krate":0,"index":3416},{"krate":0,"index":3418}],"docs":"","sig":null,"attributes":[]},{"id":398,"kind":"Inherent","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/linalg/impl_linalg.rs","byte_start":565145,"byte_end":565154,"line_start":39,"line_end":39,"column_start":12,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":3435},{"krate":0,"index":3437},{"krate":0,"index":3439}],"docs":"","sig":null,"attributes":[]},{"id":399,"kind":"Direct","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/linalg/impl_linalg.rs","byte_start":569512,"byte_end":569521,"line_start":170,"line_end":170,"column_start":44,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":3449},{"krate":0,"index":3450}],"docs":"","sig":null,"attributes":[]},{"id":400,"kind":"Direct","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/linalg/impl_linalg.rs","byte_start":570145,"byte_end":570154,"line_start":191,"line_end":191,"column_start":44,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":3455},{"krate":0,"index":3456}],"docs":"","sig":null,"attributes":[]},{"id":401,"kind":"Inherent","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/linalg/impl_linalg.rs","byte_start":570708,"byte_end":570717,"line_start":213,"line_end":213,"column_start":12,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":3460}],"docs":"","sig":null,"attributes":[]},{"id":402,"kind":"Direct","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/linalg/impl_linalg.rs","byte_start":571983,"byte_end":571992,"line_start":254,"line_end":254,"column_start":44,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":3466},{"krate":0,"index":3467}],"docs":"","sig":null,"attributes":[]},{"id":403,"kind":"Direct","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/linalg/impl_linalg.rs","byte_start":573885,"byte_end":573894,"line_start":314,"line_end":314,"column_start":44,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":3474},{"krate":0,"index":3475}],"docs":"","sig":null,"attributes":[]},{"id":404,"kind":"Inherent","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/linalg/impl_linalg.rs","byte_start":574494,"byte_end":574503,"line_start":336,"line_end":336,"column_start":15,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":3480}],"docs":"","sig":null,"attributes":[]},{"id":420,"kind":"Direct","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_ops.rs","byte_start":592548,"byte_end":592555,"line_start":50,"line_end":50,"column_start":24,"column_end":31},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":421,"kind":"Direct","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_ops.rs","byte_start":592587,"byte_end":592594,"line_start":51,"line_end":51,"column_start":24,"column_end":31},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":664,"kind":"Direct","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_ops.rs","byte_start":602742,"byte_end":602751,"line_start":350,"line_end":350,"column_start":27,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":3564},{"krate":0,"index":3565}],"docs":"","sig":null,"attributes":[]},{"id":665,"kind":"Direct","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_ops.rs","byte_start":603553,"byte_end":603562,"line_start":380,"line_end":380,"column_start":27,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":3578},{"krate":0,"index":3579}],"docs":"","sig":null,"attributes":[]},{"id":666,"kind":"Inherent","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_views/constructors.rs","byte_start":607888,"byte_end":607897,"line_start":19,"line_end":19,"column_start":16,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":3608},{"krate":0,"index":3610},{"krate":0,"index":3611}],"docs":"","sig":null,"attributes":[]},{"id":667,"kind":"Inherent","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_views/constructors.rs","byte_start":611918,"byte_end":611930,"line_start":116,"line_end":116,"column_start":16,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":3617},{"krate":0,"index":3619},{"krate":0,"index":3620},{"krate":0,"index":3622}],"docs":"","sig":null,"attributes":[]},{"id":668,"kind":"Inherent","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_views/constructors.rs","byte_start":616191,"byte_end":616200,"line_start":222,"line_end":222,"column_start":16,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":3628},{"krate":0,"index":3629}],"docs":"","sig":null,"attributes":[]},{"id":669,"kind":"Inherent","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_views/constructors.rs","byte_start":617035,"byte_end":617047,"line_start":245,"line_end":245,"column_start":16,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":3634},{"krate":0,"index":3635}],"docs":"","sig":null,"attributes":[]},{"id":670,"kind":"Inherent","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_views/conversions.rs","byte_start":618540,"byte_end":618549,"line_start":20,"line_end":20,"column_start":16,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":3655},{"krate":0,"index":3657},{"krate":0,"index":3658}],"docs":"","sig":null,"attributes":[]},{"id":671,"kind":"Inherent","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_views/conversions.rs","byte_start":619759,"byte_end":619768,"line_start":58,"line_end":58,"column_start":13,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":3662}],"docs":"","sig":null,"attributes":[]},{"id":672,"kind":"Inherent","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_views/conversions.rs","byte_start":620636,"byte_end":620648,"line_start":87,"line_end":87,"column_start":13,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":3666}],"docs":"","sig":null,"attributes":[]},{"id":673,"kind":"Inherent","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_views/conversions.rs","byte_start":621321,"byte_end":621333,"line_start":109,"line_end":109,"column_start":16,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":3671},{"krate":0,"index":3672}],"docs":"","sig":null,"attributes":[]},{"id":674,"kind":"Inherent","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_views/conversions.rs","byte_start":622489,"byte_end":622498,"line_start":139,"line_end":139,"column_start":16,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":3677},{"krate":0,"index":3678},{"krate":0,"index":3679},{"krate":0,"index":3680}],"docs":"","sig":null,"attributes":[]},{"id":675,"kind":"Inherent","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_views/conversions.rs","byte_start":623212,"byte_end":623224,"line_start":168,"line_end":168,"column_start":16,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":3685},{"krate":0,"index":3686},{"krate":0,"index":3687},{"krate":0,"index":3688},{"krate":0,"index":3689},{"krate":0,"index":3690},{"krate":0,"index":3691}],"docs":"","sig":null,"attributes":[]},{"id":676,"kind":"Direct","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_views/indexing.rs","byte_start":629895,"byte_end":629907,"line_start":145,"line_end":145,"column_start":38,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":3719},{"krate":0,"index":3720},{"krate":0,"index":3721},{"krate":0,"index":3722}],"docs":"","sig":null,"attributes":[]},{"id":677,"kind":"Inherent","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_views/splitting.rs","byte_start":632307,"byte_end":632316,"line_start":13,"line_end":13,"column_start":16,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":3730}],"docs":"","sig":null,"attributes":[]},{"id":678,"kind":"Inherent","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_views/splitting.rs","byte_start":636403,"byte_end":636415,"line_start":99,"line_end":99,"column_start":16,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":3735},{"krate":0,"index":3736}],"docs":"","sig":null,"attributes":[]},{"id":679,"kind":"Inherent","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_raw_views.rs","byte_start":638131,"byte_end":638143,"line_start":10,"line_end":10,"column_start":12,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":3757},{"krate":0,"index":3758},{"krate":0,"index":3759},{"krate":0,"index":3761},{"krate":0,"index":3763},{"krate":0,"index":3764}],"docs":"","sig":null,"attributes":[]},{"id":680,"kind":"Inherent","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_raw_views.rs","byte_start":643944,"byte_end":643959,"line_start":152,"line_end":152,"column_start":12,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":3769},{"krate":0,"index":3770},{"krate":0,"index":3771},{"krate":0,"index":3773},{"krate":0,"index":3774},{"krate":0,"index":3776},{"krate":0,"index":3778},{"krate":0,"index":3779}],"docs":"","sig":null,"attributes":[]},{"id":681,"kind":"Inherent","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_cow.rs","byte_start":650529,"byte_end":650537,"line_start":16,"line_end":16,"column_start":16,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":3787},{"krate":0,"index":3788}],"docs":"","sig":null,"attributes":[]},{"id":682,"kind":"Direct","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_cow.rs","byte_start":650893,"byte_end":650901,"line_start":31,"line_end":31,"column_start":46,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":3793}],"docs":"","sig":null,"attributes":[]},{"id":683,"kind":"Direct","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_cow.rs","byte_start":651245,"byte_end":651253,"line_start":44,"line_end":44,"column_start":38,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":3798}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/iterators/mod.rs","byte_start":153229,"byte_end":153233,"line_start":12,"line_end":12,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":907}},{"kind":"Mod","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":8180,"byte_end":8187,"line_start":228,"line_end":228,"column_start":9,"column_end":16},"ref_id":{"krate":0,"index":2807}},{"kind":"Mod","span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":56538,"byte_end":56544,"line_start":1611,"line_end":1611,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":3420}}],"macro_refs":[],"relations":[{"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/arrayformat.rs","byte_start":70885,"byte_end":70898,"line_start":38,"line_end":38,"column_start":6,"column_end":19},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":3801},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/arrayformat.rs","byte_start":75915,"byte_end":75924,"line_start":194,"line_end":194,"column_start":61,"column_end":70},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":2875},"to":{"krate":2,"index":6958}},{"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/arrayformat.rs","byte_start":76367,"byte_end":76376,"line_start":208,"line_end":208,"column_start":57,"column_end":66},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":2875},"to":{"krate":2,"index":6953}},{"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/arrayformat.rs","byte_start":77246,"byte_end":77255,"line_start":236,"line_end":236,"column_start":63,"column_end":72},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":2875},"to":{"krate":2,"index":6970}},{"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/arrayformat.rs","byte_start":77707,"byte_end":77716,"line_start":250,"line_end":250,"column_start":63,"column_end":72},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":2875},"to":{"krate":2,"index":6972}},{"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/arrayformat.rs","byte_start":78167,"byte_end":78176,"line_start":263,"line_end":263,"column_start":63,"column_end":72},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":2875},"to":{"krate":2,"index":6964}},{"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/arrayformat.rs","byte_start":78622,"byte_end":78631,"line_start":277,"line_end":277,"column_start":59,"column_end":68},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":2875},"to":{"krate":2,"index":6962}},{"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/arraytraits.rs","byte_start":93550,"byte_end":93559,"line_start":42,"line_end":42,"column_start":28,"column_end":37},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":2875},"to":{"krate":2,"index":2362}},{"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/arraytraits.rs","byte_start":94108,"byte_end":94117,"line_start":65,"line_end":65,"column_start":31,"column_end":40},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":2875},"to":{"krate":2,"index":2366}},{"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/arraytraits.rs","byte_start":94706,"byte_end":94715,"line_start":86,"line_end":86,"column_start":54,"column_end":63},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":2875},"to":{"krate":2,"index":1798}},{"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/arraytraits.rs","byte_start":95606,"byte_end":95615,"line_start":117,"line_end":117,"column_start":62,"column_end":71},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":2875},"to":{"krate":2,"index":1798}},{"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/arraytraits.rs","byte_start":96188,"byte_end":96197,"line_start":143,"line_end":143,"column_start":19,"column_end":28},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":2875},"to":{"krate":2,"index":1803}},{"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/arraytraits.rs","byte_start":96291,"byte_end":96300,"line_start":151,"line_end":151,"column_start":29,"column_end":38},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":2875},"to":{"krate":2,"index":1997}},{"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/arraytraits.rs","byte_start":96716,"byte_end":96725,"line_start":169,"line_end":169,"column_start":32,"column_end":41},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":2875},"to":{"krate":2,"index":5525}},{"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/arraytraits.rs","byte_start":97865,"byte_end":97874,"line_start":219,"line_end":219,"column_start":33,"column_end":42},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":2892},"to":{"krate":2,"index":5529}},{"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/arraytraits.rs","byte_start":98081,"byte_end":98093,"line_start":231,"line_end":231,"column_start":33,"column_end":45},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":2896},"to":{"krate":2,"index":5529}},{"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/arraytraits.rs","byte_start":98305,"byte_end":98314,"line_start":243,"line_end":243,"column_start":31,"column_end":40},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":2875},"to":{"krate":2,"index":7141}},{"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/arraytraits.rs","byte_start":99261,"byte_end":99270,"line_start":274,"line_end":274,"column_start":28,"column_end":37},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":2875},"to":{"krate":2,"index":2093}},{"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/arraytraits.rs","byte_start":99400,"byte_end":99409,"line_start":282,"line_end":282,"column_start":28,"column_end":37},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":2875},"to":{"krate":2,"index":2081}},{"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/arraytraits.rs","byte_start":99794,"byte_end":99803,"line_start":295,"line_end":295,"column_start":48,"column_end":57},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":2892},"to":{"krate":2,"index":1997}},{"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/arraytraits.rs","byte_start":100455,"byte_end":100464,"line_start":315,"line_end":315,"column_start":49,"column_end":58},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":2892},"to":{"krate":2,"index":1997}},{"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/arraytraits.rs","byte_start":100792,"byte_end":100804,"line_start":327,"line_end":327,"column_start":52,"column_end":64},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":2896},"to":{"krate":2,"index":1997}},{"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/arraytraits.rs","byte_start":101476,"byte_end":101488,"line_start":347,"line_end":347,"column_start":53,"column_end":65},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":2896},"to":{"krate":2,"index":1997}},{"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/arraytraits.rs","byte_start":102203,"byte_end":102207,"line_start":379,"line_end":379,"column_start":40,"column_end":44},"kind":"SuperTrait","from":{"krate":2,"index":1994},"to":{"krate":0,"index":398}},{"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/arraytraits.rs","byte_start":102301,"byte_end":102302,"line_start":384,"line_end":384,"column_start":45,"column_end":46},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":406},"to":{"krate":0,"index":398}},{"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/arraytraits.rs","byte_start":102910,"byte_end":102919,"line_start":403,"line_end":403,"column_start":27,"column_end":36},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":2875},"to":{"krate":2,"index":2069}},{"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/data_repr.rs","byte_start":103804,"byte_end":103813,"line_start":25,"line_end":25,"column_start":9,"column_end":18},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":3809},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/data_repr.rs","byte_start":105446,"byte_end":105455,"line_start":86,"line_end":86,"column_start":19,"column_end":28},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":3809},"to":{"krate":2,"index":1770}},{"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/data_repr.rs","byte_start":105950,"byte_end":105959,"line_start":107,"line_end":107,"column_start":18,"column_end":27},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":3809},"to":{"krate":2,"index":2305}},{"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/data_repr.rs","byte_start":106816,"byte_end":106825,"line_start":128,"line_end":128,"column_start":25,"column_end":34},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":3809},"to":{"krate":2,"index":2093}},{"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/data_repr.rs","byte_start":106871,"byte_end":106880,"line_start":129,"line_end":129,"column_start":25,"column_end":34},"kind":{"Impl":{"id":29}},"from":{"krate":0,"index":3809},"to":{"krate":2,"index":2081}},{"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/data_traits.rs","byte_start":108021,"byte_end":108026,"line_start":30,"line_end":30,"column_start":27,"column_end":32},"kind":"SuperTrait","from":{"krate":2,"index":2086},"to":{"krate":0,"index":460}},{"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/data_traits.rs","byte_start":108370,"byte_end":108377,"line_start":46,"line_end":46,"column_start":30,"column_end":37},"kind":"SuperTrait","from":{"krate":0,"index":460},"to":{"krate":0,"index":463}},{"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/data_traits.rs","byte_start":109150,"byte_end":109157,"line_start":70,"line_end":70,"column_start":32,"column_end":39},"kind":"SuperTrait","from":{"krate":0,"index":460},"to":{"krate":0,"index":467}},{"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/data_traits.rs","byte_start":109771,"byte_end":109778,"line_start":92,"line_end":92,"column_start":24,"column_end":31},"kind":"SuperTrait","from":{"krate":0,"index":460},"to":{"krate":0,"index":470}},{"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/data_traits.rs","byte_start":110950,"byte_end":110954,"line_start":127,"line_end":127,"column_start":27,"column_end":31},"kind":"SuperTrait","from":{"krate":0,"index":470},"to":{"krate":0,"index":475}},{"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/data_traits.rs","byte_start":110957,"byte_end":110967,"line_start":127,"line_end":127,"column_start":34,"column_end":44},"kind":"SuperTrait","from":{"krate":0,"index":463},"to":{"krate":0,"index":475}},{"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/data_traits.rs","byte_start":111436,"byte_end":111447,"line_start":147,"line_end":147,"column_start":28,"column_end":39},"kind":{"Impl":{"id":30}},"from":{"krate":0,"index":6190},"to":{"krate":0,"index":460}},{"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/data_traits.rs","byte_start":111598,"byte_end":111609,"line_start":155,"line_end":155,"column_start":33,"column_end":44},"kind":{"Impl":{"id":31}},"from":{"krate":0,"index":6190},"to":{"krate":0,"index":467}},{"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/data_traits.rs","byte_start":111774,"byte_end":111785,"line_start":161,"line_end":161,"column_start":28,"column_end":39},"kind":{"Impl":{"id":32}},"from":{"krate":0,"index":6190},"to":{"krate":0,"index":460}},{"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/data_traits.rs","byte_start":111932,"byte_end":111943,"line_start":169,"line_end":169,"column_start":31,"column_end":42},"kind":{"Impl":{"id":33}},"from":{"krate":0,"index":6190},"to":{"krate":0,"index":463}},{"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/data_traits.rs","byte_start":112208,"byte_end":112219,"line_start":184,"line_end":184,"column_start":33,"column_end":44},"kind":{"Impl":{"id":34}},"from":{"krate":0,"index":6190},"to":{"krate":0,"index":467}},{"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/data_traits.rs","byte_start":112382,"byte_end":112394,"line_start":190,"line_end":190,"column_start":28,"column_end":40},"kind":{"Impl":{"id":35}},"from":{"krate":0,"index":6183},"to":{"krate":0,"index":460}},{"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/data_traits.rs","byte_start":112578,"byte_end":112590,"line_start":199,"line_end":199,"column_start":31,"column_end":43},"kind":{"Impl":{"id":36}},"from":{"krate":0,"index":6183},"to":{"krate":0,"index":463}},{"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/data_traits.rs","byte_start":113735,"byte_end":113747,"line_start":240,"line_end":240,"column_start":25,"column_end":37},"kind":{"Impl":{"id":37}},"from":{"krate":0,"index":6183},"to":{"krate":0,"index":470}},{"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/data_traits.rs","byte_start":114485,"byte_end":114497,"line_start":265,"line_end":265,"column_start":28,"column_end":40},"kind":{"Impl":{"id":38}},"from":{"krate":0,"index":6183},"to":{"krate":0,"index":475}},{"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/data_traits.rs","byte_start":114552,"byte_end":114564,"line_start":267,"line_end":267,"column_start":33,"column_end":45},"kind":{"Impl":{"id":39}},"from":{"krate":0,"index":6183},"to":{"krate":0,"index":467}},{"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/data_traits.rs","byte_start":114761,"byte_end":114770,"line_start":274,"line_end":274,"column_start":28,"column_end":37},"kind":{"Impl":{"id":40}},"from":{"krate":0,"index":3809},"to":{"krate":0,"index":460}},{"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/data_traits.rs","byte_start":114929,"byte_end":114938,"line_start":282,"line_end":282,"column_start":31,"column_end":40},"kind":{"Impl":{"id":41}},"from":{"krate":0,"index":3809},"to":{"krate":0,"index":463}},{"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/data_traits.rs","byte_start":115196,"byte_end":115205,"line_start":297,"line_end":297,"column_start":25,"column_end":34},"kind":{"Impl":{"id":42}},"from":{"krate":0,"index":3809},"to":{"krate":0,"index":470}},{"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/data_traits.rs","byte_start":115418,"byte_end":115427,"line_start":308,"line_end":308,"column_start":28,"column_end":37},"kind":{"Impl":{"id":43}},"from":{"krate":0,"index":3809},"to":{"krate":0,"index":475}},{"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/data_traits.rs","byte_start":115467,"byte_end":115476,"line_start":310,"line_end":310,"column_start":33,"column_end":42},"kind":{"Impl":{"id":44}},"from":{"krate":0,"index":3809},"to":{"krate":0,"index":467}},{"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/data_traits.rs","byte_start":116360,"byte_end":116368,"line_start":340,"line_end":340,"column_start":32,"column_end":40},"kind":{"Impl":{"id":45}},"from":{"krate":0,"index":6198},"to":{"krate":0,"index":460}},{"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/data_traits.rs","byte_start":116512,"byte_end":116520,"line_start":348,"line_end":348,"column_start":29,"column_end":37},"kind":{"Impl":{"id":46}},"from":{"krate":0,"index":6198},"to":{"krate":0,"index":470}},{"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/data_traits.rs","byte_start":116752,"byte_end":116760,"line_start":358,"line_end":358,"column_start":37,"column_end":45},"kind":{"Impl":{"id":47}},"from":{"krate":0,"index":6198},"to":{"krate":0,"index":467}},{"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/data_traits.rs","byte_start":116926,"byte_end":116934,"line_start":364,"line_end":364,"column_start":32,"column_end":40},"kind":{"Impl":{"id":48}},"from":{"krate":0,"index":6198},"to":{"krate":0,"index":460}},{"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/data_traits.rs","byte_start":117088,"byte_end":117096,"line_start":372,"line_end":372,"column_start":35,"column_end":43},"kind":{"Impl":{"id":49}},"from":{"krate":0,"index":6198},"to":{"krate":0,"index":463}},{"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/data_traits.rs","byte_start":117366,"byte_end":117374,"line_start":387,"line_end":387,"column_start":29,"column_end":37},"kind":{"Impl":{"id":50}},"from":{"krate":0,"index":6198},"to":{"krate":0,"index":470}},{"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/data_traits.rs","byte_start":117605,"byte_end":117613,"line_start":397,"line_end":397,"column_start":32,"column_end":40},"kind":{"Impl":{"id":51}},"from":{"krate":0,"index":6198},"to":{"krate":0,"index":475}},{"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/data_traits.rs","byte_start":118328,"byte_end":118332,"line_start":411,"line_end":411,"column_start":29,"column_end":33},"kind":"SuperTrait","from":{"krate":0,"index":470},"to":{"krate":0,"index":570}},{"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/data_traits.rs","byte_start":118920,"byte_end":118925,"line_start":429,"line_end":429,"column_start":30,"column_end":35},"kind":"SuperTrait","from":{"krate":2,"index":1770},"to":{"krate":0,"index":574}},{"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/data_traits.rs","byte_start":118928,"byte_end":118932,"line_start":429,"line_end":429,"column_start":38,"column_end":42},"kind":"SuperTrait","from":{"krate":0,"index":470},"to":{"krate":0,"index":574}},{"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/data_traits.rs","byte_start":118935,"byte_end":118947,"line_start":429,"line_end":429,"column_start":45,"column_end":57},"kind":"SuperTrait","from":{"krate":0,"index":467},"to":{"krate":0,"index":574}},{"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/data_traits.rs","byte_start":118982,"byte_end":118994,"line_start":431,"line_end":431,"column_start":31,"column_end":43},"kind":{"Impl":{"id":52}},"from":{"krate":0,"index":6183},"to":{"krate":0,"index":574}},{"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/data_traits.rs","byte_start":119035,"byte_end":119043,"line_start":432,"line_end":432,"column_start":35,"column_end":43},"kind":{"Impl":{"id":53}},"from":{"krate":0,"index":6198},"to":{"krate":0,"index":574}},{"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/data_traits.rs","byte_start":119084,"byte_end":119093,"line_start":434,"line_end":434,"column_start":30,"column_end":39},"kind":{"Impl":{"id":54}},"from":{"krate":0,"index":3809},"to":{"krate":0,"index":570}},{"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/data_traits.rs","byte_start":119351,"byte_end":119363,"line_start":446,"line_end":446,"column_start":30,"column_end":42},"kind":{"Impl":{"id":55}},"from":{"krate":0,"index":6183},"to":{"krate":0,"index":570}},{"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/data_traits.rs","byte_start":119626,"byte_end":119633,"line_start":458,"line_end":458,"column_start":32,"column_end":39},"kind":{"Impl":{"id":56}},"from":{"krate":0,"index":2916},"to":{"krate":0,"index":460}},{"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/data_traits.rs","byte_start":119912,"byte_end":119919,"line_start":469,"line_end":469,"column_start":35,"column_end":42},"kind":{"Impl":{"id":57}},"from":{"krate":0,"index":2916},"to":{"krate":0,"index":463}},{"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/data_traits.rs","byte_start":120577,"byte_end":120584,"line_start":497,"line_end":497,"column_start":37,"column_end":44},"kind":{"Impl":{"id":58}},"from":{"krate":0,"index":2916},"to":{"krate":0,"index":467}},{"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/data_traits.rs","byte_start":121892,"byte_end":121899,"line_start":537,"line_end":537,"column_start":29,"column_end":36},"kind":{"Impl":{"id":59}},"from":{"krate":0,"index":2916},"to":{"krate":0,"index":470}},{"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/data_traits.rs","byte_start":122466,"byte_end":122473,"line_start":555,"line_end":555,"column_start":32,"column_end":39},"kind":{"Impl":{"id":60}},"from":{"krate":0,"index":2916},"to":{"krate":0,"index":475}},{"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/data_traits.rs","byte_start":122764,"byte_end":122771,"line_start":563,"line_end":563,"column_start":28,"column_end":35},"kind":"SuperTrait","from":{"krate":0,"index":460},"to":{"krate":0,"index":614}},{"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/data_traits.rs","byte_start":123183,"byte_end":123192,"line_start":576,"line_end":576,"column_start":32,"column_end":41},"kind":{"Impl":{"id":61}},"from":{"krate":0,"index":3809},"to":{"krate":0,"index":614}},{"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/data_traits.rs","byte_start":123346,"byte_end":123358,"line_start":584,"line_end":584,"column_start":32,"column_end":44},"kind":{"Impl":{"id":62}},"from":{"krate":0,"index":6183},"to":{"krate":0,"index":614}},{"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/data_traits.rs","byte_start":123571,"byte_end":123582,"line_start":592,"line_end":592,"column_start":32,"column_end":43},"kind":{"Impl":{"id":63}},"from":{"krate":0,"index":6190},"to":{"krate":0,"index":614}},{"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/data_traits.rs","byte_start":123753,"byte_end":123764,"line_start":600,"line_end":600,"column_start":32,"column_end":43},"kind":{"Impl":{"id":64}},"from":{"krate":0,"index":6190},"to":{"krate":0,"index":614}},{"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/data_traits.rs","byte_start":123943,"byte_end":123951,"line_start":608,"line_end":608,"column_start":44,"column_end":52},"kind":{"Impl":{"id":65}},"from":{"krate":0,"index":6198},"to":{"krate":0,"index":614}},{"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/data_traits.rs","byte_start":124122,"byte_end":124130,"line_start":616,"line_end":616,"column_start":44,"column_end":52},"kind":{"Impl":{"id":66}},"from":{"krate":0,"index":6198},"to":{"krate":0,"index":614}},{"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/free_functions.rs","byte_start":131403,"byte_end":131409,"line_start":219,"line_end":219,"column_start":29,"column_end":35},"kind":{"Impl":{"id":67}},"from":{"krate":0,"index":100},"to":{"krate":2,"index":1997}},{"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/free_functions.rs","byte_start":132529,"byte_end":132535,"line_start":249,"line_end":249,"column_start":32,"column_end":38},"kind":{"Impl":{"id":68}},"from":{"krate":0,"index":102},"to":{"krate":2,"index":1997}},{"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/error.rs","byte_start":135333,"byte_end":135343,"line_start":20,"line_end":20,"column_start":6,"column_end":16},"kind":{"Impl":{"id":69}},"from":{"krate":0,"index":3927},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/error.rs","byte_start":136277,"byte_end":136286,"line_start":59,"line_end":59,"column_start":20,"column_end":29},"kind":{"Impl":{"id":70}},"from":{"krate":0,"index":3931},"to":{"krate":2,"index":1798}},{"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/error.rs","byte_start":136412,"byte_end":136422,"line_start":66,"line_end":66,"column_start":20,"column_end":30},"kind":{"Impl":{"id":71}},"from":{"krate":0,"index":3927},"to":{"krate":2,"index":1798}},{"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/error.rs","byte_start":136564,"byte_end":136574,"line_start":74,"line_end":74,"column_start":16,"column_end":26},"kind":{"Impl":{"id":72}},"from":{"krate":0,"index":3927},"to":{"krate":1,"index":1750}},{"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/error.rs","byte_start":136601,"byte_end":136611,"line_start":76,"line_end":76,"column_start":23,"column_end":33},"kind":{"Impl":{"id":73}},"from":{"krate":0,"index":3927},"to":{"krate":2,"index":6958}},{"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/error.rs","byte_start":137237,"byte_end":137247,"line_start":90,"line_end":90,"column_start":21,"column_end":31},"kind":{"Impl":{"id":74}},"from":{"krate":0,"index":3927},"to":{"krate":2,"index":6953}},{"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/geomspace.rs","byte_start":139234,"byte_end":139243,"line_start":22,"line_end":22,"column_start":22,"column_end":31},"kind":{"Impl":{"id":75}},"from":{"krate":0,"index":751},"to":{"krate":2,"index":5625}},{"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/geomspace.rs","byte_start":139839,"byte_end":139848,"line_start":48,"line_end":48,"column_start":33,"column_end":42},"kind":{"Impl":{"id":76}},"from":{"krate":0,"index":751},"to":{"krate":2,"index":5552}},{"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/geomspace.rs","byte_start":140290,"byte_end":140299,"line_start":66,"line_end":66,"column_start":31,"column_end":40},"kind":{"Impl":{"id":77}},"from":{"krate":0,"index":751},"to":{"krate":2,"index":5577}},{"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/indexes.rs","byte_start":145000,"byte_end":145011,"line_start":53,"line_end":53,"column_start":22,"column_end":33},"kind":{"Impl":{"id":78}},"from":{"krate":0,"index":3950},"to":{"krate":2,"index":5625}},{"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/indexes.rs","byte_start":146640,"byte_end":146651,"line_start":112,"line_end":112,"column_start":31,"column_end":42},"kind":{"Impl":{"id":79}},"from":{"krate":0,"index":3950},"to":{"krate":2,"index":5577}},{"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/indexes.rs","byte_start":146703,"byte_end":146710,"line_start":114,"line_end":114,"column_start":26,"column_end":33},"kind":{"Impl":{"id":80}},"from":{"krate":0,"index":3957},"to":{"krate":2,"index":5529}},{"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/indexes.rs","byte_start":147350,"byte_end":147358,"line_start":147,"line_end":147,"column_start":20,"column_end":28},"kind":{"Impl":{"id":81}},"from":{"krate":0,"index":3969},"to":{"krate":0,"index":1956}},{"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/indexes.rs","byte_start":148283,"byte_end":148290,"line_start":175,"line_end":175,"column_start":42,"column_end":49},"kind":{"Impl":{"id":82}},"from":{"krate":0,"index":3957},"to":{"krate":0,"index":1942}},{"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/indexes.rs","byte_start":150327,"byte_end":150339,"line_start":271,"line_end":271,"column_start":22,"column_end":34},"kind":{"Impl":{"id":83}},"from":{"krate":0,"index":3982},"to":{"krate":2,"index":5625}},{"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/indexes.rs","byte_start":151142,"byte_end":151154,"line_start":303,"line_end":303,"column_start":31,"column_end":43},"kind":{"Impl":{"id":84}},"from":{"krate":0,"index":3982},"to":{"krate":2,"index":5577}},{"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/iterators/chunks.rs","byte_start":198976,"byte_end":198987,"line_start":40,"line_end":40,"column_start":27,"column_end":38},"kind":{"Impl":{"id":87}},"from":{"krate":0,"index":853},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/iterators/chunks.rs","byte_start":199851,"byte_end":199862,"line_start":73,"line_end":73,"column_start":33,"column_end":44},"kind":{"Impl":{"id":88}},"from":{"krate":0,"index":853},"to":{"krate":2,"index":5529}},{"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/iterators/chunks.rs","byte_start":201219,"byte_end":201233,"line_start":130,"line_end":130,"column_start":27,"column_end":41},"kind":{"Impl":{"id":90}},"from":{"krate":0,"index":880},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/iterators/chunks.rs","byte_start":202103,"byte_end":202117,"line_start":163,"line_end":163,"column_start":33,"column_end":47},"kind":{"Impl":{"id":91}},"from":{"krate":0,"index":880},"to":{"krate":2,"index":5529}},{"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/iterators/lanes.rs","byte_start":204947,"byte_end":204952,"line_start":34,"line_end":34,"column_start":27,"column_end":32},"kind":{"Impl":{"id":97}},"from":{"krate":0,"index":938},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/iterators/lanes.rs","byte_start":205996,"byte_end":206001,"line_start":79,"line_end":79,"column_start":33,"column_end":38},"kind":{"Impl":{"id":99}},"from":{"krate":0,"index":938},"to":{"krate":2,"index":5529}},{"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/iterators/lanes.rs","byte_start":206605,"byte_end":206613,"line_start":103,"line_end":103,"column_start":27,"column_end":35},"kind":{"Impl":{"id":100}},"from":{"krate":0,"index":958},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/iterators/lanes.rs","byte_start":207290,"byte_end":207298,"line_start":130,"line_end":130,"column_start":33,"column_end":41},"kind":{"Impl":{"id":101}},"from":{"krate":0,"index":958},"to":{"krate":2,"index":5529}},{"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/iterators/windows.rs","byte_start":208047,"byte_end":208054,"line_start":17,"line_end":17,"column_start":27,"column_end":34},"kind":{"Impl":{"id":102}},"from":{"krate":0,"index":984},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/iterators/windows.rs","byte_start":209529,"byte_end":209536,"line_start":71,"line_end":71,"column_start":33,"column_end":40},"kind":{"Impl":{"id":105}},"from":{"krate":0,"index":984},"to":{"krate":2,"index":5529}},{"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/iterators/mod.rs","byte_start":153924,"byte_end":153932,"line_start":42,"line_end":42,"column_start":23,"column_end":31},"kind":{"Impl":{"id":108}},"from":{"krate":0,"index":1041},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/iterators/mod.rs","byte_start":154379,"byte_end":154387,"line_start":57,"line_end":57,"column_start":36,"column_end":44},"kind":{"Impl":{"id":109}},"from":{"krate":0,"index":1041},"to":{"krate":2,"index":5625}},{"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/iterators/mod.rs","byte_start":155856,"byte_end":155864,"line_start":104,"line_end":104,"column_start":49,"column_end":57},"kind":{"Impl":{"id":110}},"from":{"krate":0,"index":1041},"to":{"krate":2,"index":5577}},{"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/iterators/mod.rs","byte_start":156356,"byte_end":156364,"line_start":122,"line_end":122,"column_start":33,"column_end":41},"kind":{"Impl":{"id":111}},"from":{"krate":0,"index":1041},"to":{"krate":2,"index":5552}},{"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/iterators/mod.rs","byte_start":158211,"byte_end":158223,"line_start":199,"line_end":199,"column_start":27,"column_end":39},"kind":{"Impl":{"id":112}},"from":{"krate":0,"index":1122},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/iterators/mod.rs","byte_start":158436,"byte_end":158448,"line_start":208,"line_end":208,"column_start":40,"column_end":52},"kind":{"Impl":{"id":113}},"from":{"krate":0,"index":1122},"to":{"krate":2,"index":5625}},{"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/iterators/mod.rs","byte_start":158916,"byte_end":158928,"line_start":227,"line_end":227,"column_start":37,"column_end":49},"kind":{"Impl":{"id":114}},"from":{"krate":0,"index":1122},"to":{"krate":2,"index":5552}},{"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/iterators/mod.rs","byte_start":159298,"byte_end":159310,"line_start":241,"line_end":241,"column_start":38,"column_end":50},"kind":{"Impl":{"id":115}},"from":{"krate":0,"index":1122},"to":{"krate":2,"index":5577}},{"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/iterators/mod.rs","byte_start":160000,"byte_end":160004,"line_start":277,"line_end":277,"column_start":16,"column_end":20},"kind":{"Impl":{"id":116}},"from":{"krate":0,"index":1117},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/iterators/mod.rs","byte_start":160357,"byte_end":160364,"line_start":292,"line_end":292,"column_start":16,"column_end":23},"kind":{"Impl":{"id":117}},"from":{"krate":0,"index":1128},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/iterators/mod.rs","byte_start":161709,"byte_end":161724,"line_start":344,"line_end":344,"column_start":27,"column_end":42},"kind":{"Impl":{"id":118}},"from":{"krate":0,"index":1133},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/iterators/mod.rs","byte_start":162395,"byte_end":162406,"line_start":363,"line_end":363,"column_start":16,"column_end":27},"kind":{"Impl":{"id":119}},"from":{"krate":0,"index":4151},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/iterators/mod.rs","byte_start":162549,"byte_end":162563,"line_start":372,"line_end":372,"column_start":16,"column_end":30},"kind":{"Impl":{"id":120}},"from":{"krate":0,"index":1144},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/iterators/mod.rs","byte_start":162736,"byte_end":162740,"line_start":381,"line_end":381,"column_start":40,"column_end":44},"kind":{"Impl":{"id":121}},"from":{"krate":0,"index":1117},"to":{"krate":2,"index":5625}},{"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/iterators/mod.rs","byte_start":164516,"byte_end":164520,"line_start":454,"line_end":454,"column_start":37,"column_end":41},"kind":{"Impl":{"id":122}},"from":{"krate":0,"index":1117},"to":{"krate":2,"index":5552}},{"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/iterators/mod.rs","byte_start":164994,"byte_end":164998,"line_start":472,"line_end":472,"column_start":38,"column_end":42},"kind":{"Impl":{"id":123}},"from":{"krate":0,"index":1117},"to":{"krate":2,"index":5577}},{"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/iterators/mod.rs","byte_start":165164,"byte_end":165175,"line_start":481,"line_end":481,"column_start":40,"column_end":51},"kind":{"Impl":{"id":124}},"from":{"krate":0,"index":4151},"to":{"krate":2,"index":5625}},{"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/iterators/mod.rs","byte_start":165677,"byte_end":165688,"line_start":500,"line_end":500,"column_start":38,"column_end":49},"kind":{"Impl":{"id":125}},"from":{"krate":0,"index":4151},"to":{"krate":2,"index":5577}},{"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/iterators/mod.rs","byte_start":165829,"byte_end":165836,"line_start":509,"line_end":509,"column_start":40,"column_end":47},"kind":{"Impl":{"id":126}},"from":{"krate":0,"index":1128},"to":{"krate":2,"index":5625}},{"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/iterators/mod.rs","byte_start":167620,"byte_end":167627,"line_start":582,"line_end":582,"column_start":37,"column_end":44},"kind":{"Impl":{"id":127}},"from":{"krate":0,"index":1128},"to":{"krate":2,"index":5552}},{"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/iterators/mod.rs","byte_start":168109,"byte_end":168116,"line_start":600,"line_end":600,"column_start":38,"column_end":45},"kind":{"Impl":{"id":128}},"from":{"krate":0,"index":1128},"to":{"krate":2,"index":5577}},{"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/iterators/mod.rs","byte_start":168282,"byte_end":168297,"line_start":609,"line_end":609,"column_start":40,"column_end":55},"kind":{"Impl":{"id":129}},"from":{"krate":0,"index":1133},"to":{"krate":2,"index":5625}},{"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/iterators/mod.rs","byte_start":168781,"byte_end":168796,"line_start":628,"line_end":628,"column_start":37,"column_end":52},"kind":{"Impl":{"id":130}},"from":{"krate":0,"index":1133},"to":{"krate":2,"index":5552}},{"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/iterators/mod.rs","byte_start":169178,"byte_end":169193,"line_start":642,"line_end":642,"column_start":38,"column_end":53},"kind":{"Impl":{"id":131}},"from":{"krate":0,"index":1133},"to":{"krate":2,"index":5577}},{"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/iterators/mod.rs","byte_start":169332,"byte_end":169346,"line_start":651,"line_end":651,"column_start":40,"column_end":54},"kind":{"Impl":{"id":132}},"from":{"krate":0,"index":1144},"to":{"krate":2,"index":5625}},{"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/iterators/mod.rs","byte_start":169852,"byte_end":169866,"line_start":670,"line_end":670,"column_start":38,"column_end":52},"kind":{"Impl":{"id":133}},"from":{"krate":0,"index":1144},"to":{"krate":2,"index":5577}},{"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/iterators/mod.rs","byte_start":170503,"byte_end":170512,"line_start":702,"line_end":702,"column_start":29,"column_end":38},"kind":{"Impl":{"id":134}},"from":{"krate":0,"index":1288},"to":{"krate":2,"index":5625}},{"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/iterators/mod.rs","byte_start":170909,"byte_end":170918,"line_start":718,"line_end":718,"column_start":38,"column_end":47},"kind":{"Impl":{"id":135}},"from":{"krate":0,"index":1288},"to":{"krate":2,"index":5577}},{"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/iterators/mod.rs","byte_start":171557,"byte_end":171569,"line_start":742,"line_end":742,"column_start":29,"column_end":41},"kind":{"Impl":{"id":136}},"from":{"krate":0,"index":1309},"to":{"krate":2,"index":5625}},{"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/iterators/mod.rs","byte_start":171972,"byte_end":171984,"line_start":758,"line_end":758,"column_start":38,"column_end":50},"kind":{"Impl":{"id":137}},"from":{"krate":0,"index":1309},"to":{"krate":2,"index":5577}},{"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/iterators/mod.rs","byte_start":172867,"byte_end":172879,"line_start":799,"line_end":799,"column_start":23,"column_end":35},"kind":{"Impl":{"id":138}},"from":{"krate":0,"index":4167},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/iterators/mod.rs","byte_start":175178,"byte_end":175190,"line_start":871,"line_end":871,"column_start":25,"column_end":37},"kind":{"Impl":{"id":139}},"from":{"krate":0,"index":4167},"to":{"krate":2,"index":5625}},{"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/iterators/mod.rs","byte_start":175642,"byte_end":175654,"line_start":893,"line_end":893,"column_start":36,"column_end":48},"kind":{"Impl":{"id":140}},"from":{"krate":0,"index":4167},"to":{"krate":2,"index":5552}},{"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/iterators/mod.rs","byte_start":175970,"byte_end":175982,"line_start":908,"line_end":908,"column_start":34,"column_end":46},"kind":{"Impl":{"id":141}},"from":{"krate":0,"index":4167},"to":{"krate":2,"index":5577}},{"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/iterators/mod.rs","byte_start":176943,"byte_end":176951,"line_start":947,"line_end":947,"column_start":27,"column_end":35},"kind":{"Impl":{"id":142}},"from":{"krate":0,"index":4184},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/iterators/mod.rs","byte_start":177934,"byte_end":177942,"line_start":981,"line_end":981,"column_start":29,"column_end":37},"kind":{"Impl":{"id":143}},"from":{"krate":0,"index":4184},"to":{"krate":2,"index":5625}},{"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/iterators/mod.rs","byte_start":178265,"byte_end":178273,"line_start":996,"line_end":996,"column_start":40,"column_end":48},"kind":{"Impl":{"id":144}},"from":{"krate":0,"index":4184},"to":{"krate":2,"index":5552}},{"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/iterators/mod.rs","byte_start":178477,"byte_end":178485,"line_start":1005,"line_end":1005,"column_start":38,"column_end":46},"kind":{"Impl":{"id":145}},"from":{"krate":0,"index":4184},"to":{"krate":2,"index":5577}},{"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/iterators/mod.rs","byte_start":179332,"byte_end":179343,"line_start":1033,"line_end":1033,"column_start":27,"column_end":38},"kind":{"Impl":{"id":146}},"from":{"krate":0,"index":1382},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/iterators/mod.rs","byte_start":180338,"byte_end":180349,"line_start":1067,"line_end":1067,"column_start":29,"column_end":40},"kind":{"Impl":{"id":147}},"from":{"krate":0,"index":1382},"to":{"krate":2,"index":5625}},{"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/iterators/mod.rs","byte_start":180675,"byte_end":180686,"line_start":1082,"line_end":1082,"column_start":40,"column_end":51},"kind":{"Impl":{"id":148}},"from":{"krate":0,"index":1382},"to":{"krate":2,"index":5552}},{"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/iterators/mod.rs","byte_start":180890,"byte_end":180901,"line_start":1091,"line_end":1091,"column_start":38,"column_end":49},"kind":{"Impl":{"id":149}},"from":{"krate":0,"index":1382},"to":{"krate":2,"index":5577}},{"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/iterators/mod.rs","byte_start":181041,"byte_end":181049,"line_start":1100,"line_end":1100,"column_start":42,"column_end":50},"kind":{"Impl":{"id":150}},"from":{"krate":0,"index":4184},"to":{"krate":0,"index":1942}},{"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/iterators/mod.rs","byte_start":182675,"byte_end":182686,"line_start":1157,"line_end":1157,"column_start":42,"column_end":53},"kind":{"Impl":{"id":151}},"from":{"krate":0,"index":1382},"to":{"krate":0,"index":1942}},{"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/iterators/mod.rs","byte_start":186847,"byte_end":186861,"line_start":1297,"line_end":1297,"column_start":27,"column_end":41},"kind":{"Impl":{"id":152}},"from":{"krate":0,"index":1446},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/iterators/mod.rs","byte_start":190759,"byte_end":190776,"line_start":1411,"line_end":1411,"column_start":27,"column_end":44},"kind":{"Impl":{"id":153}},"from":{"krate":0,"index":1463},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/iterators/mod.rs","byte_start":192166,"byte_end":192174,"line_start":1453,"line_end":1453,"column_start":36,"column_end":44},"kind":{"Impl":{"id":154}},"from":{"krate":0,"index":1571},"to":{"krate":0,"index":1476}},{"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/iterators/mod.rs","byte_start":192240,"byte_end":192249,"line_start":1455,"line_end":1455,"column_start":36,"column_end":45},"kind":{"Impl":{"id":155}},"from":{"krate":0,"index":751},"to":{"krate":0,"index":1476}},{"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/iterators/mod.rs","byte_start":192315,"byte_end":192323,"line_start":1457,"line_end":1457,"column_start":36,"column_end":44},"kind":{"Impl":{"id":156}},"from":{"krate":0,"index":1593},"to":{"krate":0,"index":1476}},{"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/iterators/mod.rs","byte_start":192372,"byte_end":192376,"line_start":1458,"line_end":1458,"column_start":43,"column_end":47},"kind":{"Impl":{"id":157}},"from":{"krate":0,"index":1117},"to":{"krate":0,"index":1476}},{"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/iterators/mod.rs","byte_start":192432,"byte_end":192439,"line_start":1459,"line_end":1459,"column_start":43,"column_end":50},"kind":{"Impl":{"id":158}},"from":{"krate":0,"index":1128},"to":{"krate":0,"index":1476}},{"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/iterators/mod.rs","byte_start":192499,"byte_end":192505,"line_start":1460,"line_end":1460,"column_start":47,"column_end":53},"kind":{"Impl":{"id":159}},"from":{"krate":2,"index":33915},"to":{"krate":0,"index":1476}},{"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/iterators/mod.rs","byte_start":192586,"byte_end":192589,"line_start":1461,"line_end":1461,"column_start":50,"column_end":53},"kind":{"Impl":{"id":160}},"from":{"krate":2,"index":34014},"to":{"krate":0,"index":1476}},{"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/iterators/mod.rs","byte_start":192670,"byte_end":192674,"line_start":1462,"line_end":1462,"column_start":47,"column_end":51},"kind":{"Impl":{"id":161}},"from":{"krate":2,"index":7511},"to":{"krate":0,"index":1476}},{"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/iterators/mod.rs","byte_start":192731,"byte_end":192738,"line_start":1463,"line_end":1463,"column_start":47,"column_end":54},"kind":{"Impl":{"id":162}},"from":{"krate":2,"index":7535},"to":{"krate":0,"index":1476}},{"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/iterators/mod.rs","byte_start":192793,"byte_end":192798,"line_start":1464,"line_end":1464,"column_start":45,"column_end":50},"kind":{"Impl":{"id":163}},"from":{"krate":2,"index":33366},"to":{"krate":0,"index":1476}},{"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/iterators/mod.rs","byte_start":192923,"byte_end":192934,"line_start":1466,"line_end":1466,"column_start":36,"column_end":47},"kind":{"Impl":{"id":164}},"from":{"krate":0,"index":3950},"to":{"krate":0,"index":1476}},{"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/iterators/mod.rs","byte_start":192995,"byte_end":193007,"line_start":1467,"line_end":1467,"column_start":36,"column_end":48},"kind":{"Impl":{"id":165}},"from":{"krate":0,"index":3982},"to":{"krate":0,"index":1476}},{"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/layout/layoutfmt.rs","byte_start":216685,"byte_end":216691,"line_start":15,"line_end":15,"column_start":21,"column_end":27},"kind":{"Impl":{"id":166}},"from":{"krate":0,"index":4351},"to":{"krate":2,"index":6953}},{"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/layout/mod.rs","byte_start":210819,"byte_end":210825,"line_start":11,"line_end":11,"column_start":6,"column_end":12},"kind":{"Impl":{"id":167}},"from":{"krate":0,"index":4351},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/linalg_traits.rs","byte_start":218063,"byte_end":218067,"line_start":28,"line_end":28,"column_start":7,"column_end":11},"kind":"SuperTrait","from":{"krate":2,"index":2091},"to":{"krate":0,"index":1563}},{"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/linalg_traits.rs","byte_start":218074,"byte_end":218078,"line_start":29,"line_end":29,"column_start":7,"column_end":11},"kind":"SuperTrait","from":{"krate":17,"index":301},"to":{"krate":0,"index":1563}},{"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/linalg_traits.rs","byte_start":218085,"byte_end":218088,"line_start":30,"line_end":30,"column_start":7,"column_end":10},"kind":"SuperTrait","from":{"krate":17,"index":311},"to":{"krate":0,"index":1563}},{"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/linalg_traits.rs","byte_start":218095,"byte_end":218098,"line_start":31,"line_end":31,"column_start":7,"column_end":10},"kind":"SuperTrait","from":{"krate":2,"index":2146},"to":{"krate":0,"index":1563}},{"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/linalg_traits.rs","byte_start":218120,"byte_end":218123,"line_start":32,"line_end":32,"column_start":7,"column_end":10},"kind":"SuperTrait","from":{"krate":2,"index":2151},"to":{"krate":0,"index":1563}},{"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/linalg_traits.rs","byte_start":218145,"byte_end":218148,"line_start":33,"line_end":33,"column_start":7,"column_end":10},"kind":"SuperTrait","from":{"krate":2,"index":2156},"to":{"krate":0,"index":1563}},{"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/linalg_traits.rs","byte_start":218170,"byte_end":218173,"line_start":34,"line_end":34,"column_start":7,"column_end":10},"kind":"SuperTrait","from":{"krate":2,"index":2161},"to":{"krate":0,"index":1563}},{"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/linalg_traits.rs","byte_start":218219,"byte_end":218220,"line_start":38,"line_end":38,"column_start":26,"column_end":27},"kind":{"Impl":{"id":168}},"from":{"krate":0,"index":1565},"to":{"krate":0,"index":1563}},{"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/linalg_traits.rs","byte_start":218815,"byte_end":218820,"line_start":60,"line_end":60,"column_start":5,"column_end":10},"kind":"SuperTrait","from":{"krate":17,"index":234},"to":{"krate":0,"index":1566}},{"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/linalg_traits.rs","byte_start":218827,"byte_end":218836,"line_start":61,"line_end":61,"column_start":7,"column_end":16},"kind":"SuperTrait","from":{"krate":2,"index":2177},"to":{"krate":0,"index":1566}},{"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/linalg_traits.rs","byte_start":218843,"byte_end":218852,"line_start":62,"line_end":62,"column_start":7,"column_end":16},"kind":"SuperTrait","from":{"krate":2,"index":2181},"to":{"krate":0,"index":1566}},{"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/linalg_traits.rs","byte_start":218859,"byte_end":218868,"line_start":63,"line_end":63,"column_start":7,"column_end":16},"kind":"SuperTrait","from":{"krate":2,"index":2185},"to":{"krate":0,"index":1566}},{"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/linalg_traits.rs","byte_start":218875,"byte_end":218884,"line_start":64,"line_end":64,"column_start":7,"column_end":16},"kind":"SuperTrait","from":{"krate":2,"index":2189},"to":{"krate":0,"index":1566}},{"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/linalg_traits.rs","byte_start":218891,"byte_end":218900,"line_start":65,"line_end":65,"column_start":7,"column_end":16},"kind":"SuperTrait","from":{"krate":2,"index":2193},"to":{"krate":0,"index":1566}},{"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/linalg_traits.rs","byte_start":218912,"byte_end":218919,"line_start":66,"line_end":66,"column_start":12,"column_end":19},"kind":"SuperTrait","from":{"krate":2,"index":6958},"to":{"krate":0,"index":1566}},{"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/linalg_traits.rs","byte_start":218931,"byte_end":218936,"line_start":67,"line_end":67,"column_start":12,"column_end":17},"kind":"SuperTrait","from":{"krate":2,"index":6953},"to":{"krate":0,"index":1566}},{"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/linalg_traits.rs","byte_start":218948,"byte_end":218956,"line_start":68,"line_end":68,"column_start":12,"column_end":20},"kind":"SuperTrait","from":{"krate":2,"index":6970},"to":{"krate":0,"index":1566}},{"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/linalg_traits.rs","byte_start":218968,"byte_end":218976,"line_start":69,"line_end":69,"column_start":12,"column_end":20},"kind":"SuperTrait","from":{"krate":2,"index":6972},"to":{"krate":0,"index":1566}},{"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/linalg_traits.rs","byte_start":218983,"byte_end":218996,"line_start":70,"line_end":70,"column_start":7,"column_end":20},"kind":"SuperTrait","from":{"krate":0,"index":3514},"to":{"krate":0,"index":1566}},{"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/linalg_traits.rs","byte_start":219003,"byte_end":219015,"line_start":71,"line_end":71,"column_start":7,"column_end":19},"kind":"SuperTrait","from":{"krate":0,"index":1563},"to":{"krate":0,"index":1566}},{"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/linalg_traits.rs","byte_start":219022,"byte_end":219026,"line_start":72,"line_end":72,"column_start":7,"column_end":11},"kind":"SuperTrait","from":{"krate":2,"index":2081},"to":{"krate":0,"index":1566}},{"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/linalg_traits.rs","byte_start":219033,"byte_end":219037,"line_start":73,"line_end":73,"column_start":7,"column_end":11},"kind":"SuperTrait","from":{"krate":2,"index":2093},"to":{"krate":0,"index":1566}},{"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/linspace.rs","byte_start":219749,"byte_end":219757,"line_start":21,"line_end":21,"column_start":22,"column_end":30},"kind":{"Impl":{"id":171}},"from":{"krate":0,"index":1571},"to":{"krate":2,"index":5625}},{"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/linspace.rs","byte_start":220298,"byte_end":220306,"line_start":46,"line_end":46,"column_start":33,"column_end":41},"kind":{"Impl":{"id":172}},"from":{"krate":0,"index":1571},"to":{"krate":2,"index":5552}},{"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/linspace.rs","byte_start":220693,"byte_end":220701,"line_start":63,"line_end":63,"column_start":31,"column_end":39},"kind":{"Impl":{"id":173}},"from":{"krate":0,"index":1571},"to":{"krate":2,"index":5577}},{"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/logspace.rs","byte_start":222842,"byte_end":222850,"line_start":23,"line_end":23,"column_start":22,"column_end":30},"kind":{"Impl":{"id":174}},"from":{"krate":0,"index":1593},"to":{"krate":2,"index":5625}},{"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/logspace.rs","byte_start":223456,"byte_end":223464,"line_start":49,"line_end":49,"column_start":33,"column_end":41},"kind":{"Impl":{"id":175}},"from":{"krate":0,"index":1593},"to":{"krate":2,"index":5552}},{"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/logspace.rs","byte_start":223916,"byte_end":223924,"line_start":67,"line_end":67,"column_start":31,"column_end":39},"kind":{"Impl":{"id":176}},"from":{"krate":0,"index":1593},"to":{"krate":2,"index":5577}},{"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/math_cell.rs","byte_start":227065,"byte_end":227073,"line_start":17,"line_end":17,"column_start":9,"column_end":17},"kind":{"Impl":{"id":177}},"from":{"krate":0,"index":4357},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/math_cell.rs","byte_start":227454,"byte_end":227462,"line_start":31,"line_end":31,"column_start":19,"column_end":27},"kind":{"Impl":{"id":178}},"from":{"krate":0,"index":4357},"to":{"krate":2,"index":2281}},{"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/math_cell.rs","byte_start":227590,"byte_end":227598,"line_start":37,"line_end":37,"column_start":22,"column_end":30},"kind":{"Impl":{"id":179}},"from":{"krate":0,"index":4357},"to":{"krate":2,"index":2294}},{"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/math_cell.rs","byte_start":227712,"byte_end":227720,"line_start":42,"line_end":42,"column_start":19,"column_end":27},"kind":{"Impl":{"id":180}},"from":{"krate":0,"index":4357},"to":{"krate":2,"index":1770}},{"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/math_cell.rs","byte_start":227839,"byte_end":227847,"line_start":50,"line_end":50,"column_start":23,"column_end":31},"kind":{"Impl":{"id":181}},"from":{"krate":0,"index":4357},"to":{"krate":2,"index":1798}},{"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/math_cell.rs","byte_start":227978,"byte_end":227986,"line_start":58,"line_end":58,"column_start":16,"column_end":24},"kind":{"Impl":{"id":182}},"from":{"krate":0,"index":4357},"to":{"krate":2,"index":1803}},{"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/math_cell.rs","byte_start":228041,"byte_end":228049,"line_start":62,"line_end":62,"column_start":24,"column_end":32},"kind":{"Impl":{"id":183}},"from":{"krate":0,"index":4357},"to":{"krate":2,"index":1841}},{"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/math_cell.rs","byte_start":228483,"byte_end":228491,"line_start":75,"line_end":75,"column_start":17,"column_end":25},"kind":{"Impl":{"id":184}},"from":{"krate":0,"index":4357},"to":{"krate":2,"index":1830}},{"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/math_cell.rs","byte_start":228632,"byte_end":228640,"line_start":83,"line_end":83,"column_start":24,"column_end":32},"kind":{"Impl":{"id":185}},"from":{"krate":0,"index":4357},"to":{"krate":2,"index":6953}},{"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/partial.rs","byte_start":233450,"byte_end":233457,"line_start":22,"line_end":22,"column_start":9,"column_end":16},"kind":{"Impl":{"id":186}},"from":{"krate":0,"index":1667},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/partial.rs","byte_start":235288,"byte_end":235295,"line_start":78,"line_end":78,"column_start":25,"column_end":32},"kind":{"Impl":{"id":187}},"from":{"krate":0,"index":1667},"to":{"krate":2,"index":2081}},{"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/partial.rs","byte_start":235335,"byte_end":235342,"line_start":80,"line_end":80,"column_start":18,"column_end":25},"kind":{"Impl":{"id":188}},"from":{"krate":0,"index":1667},"to":{"krate":2,"index":2305}},{"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/shape_builder.rs","byte_start":235997,"byte_end":236002,"line_start":18,"line_end":18,"column_start":9,"column_end":14},"kind":{"Impl":{"id":189}},"from":{"krate":0,"index":4364},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/shape_builder.rs","byte_start":236502,"byte_end":236509,"line_start":43,"line_end":43,"column_start":9,"column_end":16},"kind":{"Impl":{"id":190}},"from":{"krate":0,"index":4394},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/shape_builder.rs","byte_start":237699,"byte_end":237704,"line_start":80,"line_end":80,"column_start":21,"column_end":26},"kind":{"Impl":{"id":191}},"from":{"krate":0,"index":4364},"to":{"krate":2,"index":1997}},{"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/shape_builder.rs","byte_start":237913,"byte_end":237924,"line_start":90,"line_end":90,"column_start":24,"column_end":35},"kind":{"Impl":{"id":192}},"from":{"krate":0,"index":4382},"to":{"krate":2,"index":1997}},{"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/shape_builder.rs","byte_start":238284,"byte_end":238285,"line_start":109,"line_end":109,"column_start":26,"column_end":27},"kind":{"Impl":{"id":193}},"from":{"krate":0,"index":1705},"to":{"krate":0,"index":1690}},{"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/shape_builder.rs","byte_start":238822,"byte_end":238827,"line_start":132,"line_end":132,"column_start":26,"column_end":31},"kind":{"Impl":{"id":194}},"from":{"krate":0,"index":4364},"to":{"krate":0,"index":1690}},{"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/shape_builder.rs","byte_start":239312,"byte_end":239317,"line_start":160,"line_end":160,"column_start":9,"column_end":14},"kind":{"Impl":{"id":195}},"from":{"krate":0,"index":4364},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/slice.rs","byte_start":241239,"byte_end":241244,"line_start":44,"line_end":44,"column_start":6,"column_end":11},"kind":{"Impl":{"id":196}},"from":{"krate":0,"index":4411},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/slice.rs","byte_start":244229,"byte_end":244242,"line_start":124,"line_end":124,"column_start":6,"column_end":19},"kind":{"Impl":{"id":199}},"from":{"krate":0,"index":4437},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/slice.rs","byte_start":244713,"byte_end":244726,"line_start":141,"line_end":141,"column_start":23,"column_end":36},"kind":{"Impl":{"id":200}},"from":{"krate":0,"index":4437},"to":{"krate":2,"index":6958}},{"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/slice.rs","byte_start":247592,"byte_end":247597,"line_start":230,"line_end":230,"column_start":26,"column_end":31},"kind":{"Impl":{"id":231}},"from":{"krate":0,"index":4411},"to":{"krate":2,"index":1997}},{"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/slice.rs","byte_start":247777,"byte_end":247790,"line_start":241,"line_end":241,"column_start":26,"column_end":39},"kind":{"Impl":{"id":232}},"from":{"krate":0,"index":4437},"to":{"krate":2,"index":1997}},{"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/slice.rs","byte_start":247989,"byte_end":248002,"line_start":252,"line_end":252,"column_start":22,"column_end":35},"kind":{"Impl":{"id":233}},"from":{"krate":0,"index":4437},"to":{"krate":2,"index":1997}},{"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/slice.rs","byte_start":248593,"byte_end":248606,"line_start":277,"line_end":277,"column_start":24,"column_end":37},"kind":{"Impl":{"id":234}},"from":{"krate":0,"index":4437},"to":{"krate":2,"index":1997}},{"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/slice.rs","byte_start":249112,"byte_end":249117,"line_start":290,"line_end":290,"column_start":42,"column_end":47},"kind":"SuperTrait","from":{"krate":2,"index":1988},"to":{"krate":0,"index":1771}},{"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/slice.rs","byte_start":250427,"byte_end":250436,"line_start":350,"line_end":350,"column_start":47,"column_end":56},"kind":{"Impl":{"id":235}},"from":{"krate":0,"index":4581},"to":{"krate":0,"index":1771}},{"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/slice.rs","byte_start":251751,"byte_end":251760,"line_start":400,"line_end":400,"column_start":30,"column_end":39},"kind":{"Impl":{"id":236}},"from":{"krate":0,"index":4581},"to":{"krate":2,"index":2281}},{"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/slice.rs","byte_start":252441,"byte_end":252450,"line_start":429,"line_end":429,"column_start":20,"column_end":29},"kind":{"Impl":{"id":237}},"from":{"krate":0,"index":4581},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/slice.rs","byte_start":255073,"byte_end":255082,"line_start":510,"line_end":510,"column_start":54,"column_end":63},"kind":{"Impl":{"id":238}},"from":{"krate":0,"index":4581},"to":{"krate":2,"index":2004}},{"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/slice.rs","byte_start":255554,"byte_end":255563,"line_start":528,"line_end":528,"column_start":49,"column_end":58},"kind":{"Impl":{"id":239}},"from":{"krate":0,"index":4581},"to":{"krate":2,"index":2004}},{"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/slice.rs","byte_start":257069,"byte_end":257078,"line_start":578,"line_end":578,"column_start":47,"column_end":56},"kind":{"Impl":{"id":240}},"from":{"krate":0,"index":4581},"to":{"krate":2,"index":1988}},{"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/slice.rs","byte_start":257320,"byte_end":257329,"line_start":590,"line_end":590,"column_start":9,"column_end":18},"kind":{"Impl":{"id":241}},"from":{"krate":0,"index":4581},"to":{"krate":2,"index":1997}},{"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/slice.rs","byte_start":257715,"byte_end":257724,"line_start":605,"line_end":605,"column_start":29,"column_end":38},"kind":{"Impl":{"id":242}},"from":{"krate":0,"index":4581},"to":{"krate":2,"index":2091}},{"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/slice.rs","byte_start":257833,"byte_end":257842,"line_start":613,"line_end":613,"column_start":30,"column_end":39},"kind":{"Impl":{"id":243}},"from":{"krate":0,"index":4581},"to":{"krate":2,"index":1770}},{"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/split_at.rs","byte_start":270903,"byte_end":270910,"line_start":9,"line_end":9,"column_start":36,"column_end":43},"kind":"SuperTrait","from":{"krate":0,"index":1883},"to":{"krate":0,"index":1885}},{"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/split_at.rs","byte_start":271167,"byte_end":271168,"line_start":18,"line_end":18,"column_start":21,"column_end":22},"kind":{"Impl":{"id":255}},"from":{"krate":0,"index":1890},"to":{"krate":0,"index":1883}},{"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/split_at.rs","byte_start":271478,"byte_end":271490,"line_start":33,"line_end":33,"column_start":28,"column_end":40},"kind":{"Impl":{"id":256}},"from":{"krate":0,"index":2896},"to":{"krate":0,"index":1883}},{"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/split_at.rs","byte_start":271660,"byte_end":271675,"line_start":42,"line_end":42,"column_start":24,"column_end":39},"kind":{"Impl":{"id":257}},"from":{"krate":0,"index":2903},"to":{"krate":0,"index":1883}},{"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/zip/ndproducer.rs","byte_start":315970,"byte_end":315971,"line_start":23,"line_end":23,"column_start":28,"column_end":29},"kind":{"Impl":{"id":258}},"from":{"krate":0,"index":1937},"to":{"krate":0,"index":1931}},{"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/zip/ndproducer.rs","byte_start":318386,"byte_end":318390,"line_start":99,"line_end":99,"column_start":19,"column_end":23},"kind":"SuperTrait","from":{"krate":2,"index":2091},"to":{"krate":0,"index":1956}},{"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/zip/ndproducer.rs","byte_start":320857,"byte_end":320866,"line_start":191,"line_end":191,"column_start":42,"column_end":51},"kind":{"Impl":{"id":259}},"from":{"krate":0,"index":2892},"to":{"krate":0,"index":1942}},{"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/zip/ndproducer.rs","byte_start":321961,"byte_end":321973,"line_start":244,"line_end":244,"column_start":42,"column_end":54},"kind":{"Impl":{"id":260}},"from":{"krate":0,"index":2896},"to":{"krate":0,"index":1942}},{"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/zip/ndproducer.rs","byte_start":323072,"byte_end":323084,"line_start":297,"line_end":297,"column_start":38,"column_end":50},"kind":{"Impl":{"id":261}},"from":{"krate":0,"index":2900},"to":{"krate":0,"index":1942}},{"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/zip/ndproducer.rs","byte_start":324173,"byte_end":324188,"line_start":350,"line_end":350,"column_start":38,"column_end":53},"kind":{"Impl":{"id":262}},"from":{"krate":0,"index":2903},"to":{"krate":0,"index":1942}},{"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/zip/mod.rs","byte_start":280919,"byte_end":280928,"line_start":55,"line_end":55,"column_start":12,"column_end":21},"kind":{"Impl":{"id":263}},"from":{"krate":0,"index":2875},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/zip/mod.rs","byte_start":281818,"byte_end":281827,"line_start":85,"line_end":85,"column_start":36,"column_end":45},"kind":{"Impl":{"id":264}},"from":{"krate":0,"index":2892},"to":{"krate":0,"index":2098}},{"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/zip/mod.rs","byte_start":282198,"byte_end":282203,"line_start":98,"line_end":98,"column_start":22,"column_end":27},"kind":"SuperTrait","from":{"krate":2,"index":2086},"to":{"krate":0,"index":2114}},{"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/zip/mod.rs","byte_start":285643,"byte_end":285646,"line_start":198,"line_end":198,"column_start":12,"column_end":15},"kind":{"Impl":{"id":265}},"from":{"krate":0,"index":4781},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/zip/mod.rs","byte_start":286317,"byte_end":286320,"line_start":222,"line_end":222,"column_start":12,"column_end":15},"kind":{"Impl":{"id":266}},"from":{"krate":0,"index":4781},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/zip/mod.rs","byte_start":286925,"byte_end":286928,"line_start":243,"line_end":243,"column_start":16,"column_end":19},"kind":{"Impl":{"id":267}},"from":{"krate":0,"index":4781},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/zip/mod.rs","byte_start":288378,"byte_end":288381,"line_start":299,"line_end":299,"column_start":12,"column_end":15},"kind":{"Impl":{"id":268}},"from":{"krate":0,"index":4781},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/zip/mod.rs","byte_start":310176,"byte_end":310185,"line_start":884,"line_end":884,"column_start":9,"column_end":18},"kind":{"Impl":{"id":269}},"from":{"krate":0,"index":5342},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/dimension/axes.rs","byte_start":365710,"byte_end":365725,"line_start":61,"line_end":61,"column_start":6,"column_end":21},"kind":{"Impl":{"id":272}},"from":{"krate":0,"index":5369},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/dimension/axes.rs","byte_start":366303,"byte_end":366307,"line_start":84,"line_end":84,"column_start":26,"column_end":30},"kind":{"Impl":{"id":275}},"from":{"krate":0,"index":5358},"to":{"krate":2,"index":5625}},{"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/dimension/axes.rs","byte_start":367279,"byte_end":367283,"line_start":123,"line_end":123,"column_start":37,"column_end":41},"kind":{"Impl":{"id":276}},"from":{"krate":0,"index":5358},"to":{"krate":2,"index":5552}},{"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/dimension/axes.rs","byte_start":367674,"byte_end":367678,"line_start":141,"line_end":141,"column_start":15,"column_end":19},"kind":"SuperTrait","from":{"krate":2,"index":2091},"to":{"krate":0,"index":2239}},{"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/dimension/axis.rs","byte_start":369421,"byte_end":369425,"line_start":29,"line_end":29,"column_start":6,"column_end":10},"kind":{"Impl":{"id":278}},"from":{"krate":0,"index":5385},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/dimension/broadcast.rs","byte_start":371102,"byte_end":371103,"line_start":45,"line_end":45,"column_start":34,"column_end":35},"kind":{"Impl":{"id":279}},"from":{"krate":0,"index":2270},"to":{"krate":0,"index":2266}},{"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/dimension/conversion.rs","byte_start":375929,"byte_end":375931,"line_start":47,"line_end":47,"column_start":24,"column_end":26},"kind":{"Impl":{"id":336}},"from":{"krate":0,"index":2873},"to":{"krate":0,"index":2288}},{"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/dimension/conversion.rs","byte_start":376066,"byte_end":376067,"line_start":55,"line_end":55,"column_start":27,"column_end":28},"kind":{"Impl":{"id":337}},"from":{"krate":0,"index":2295},"to":{"krate":0,"index":2288}},{"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/dimension/conversion.rs","byte_start":376217,"byte_end":376226,"line_start":66,"line_end":66,"column_start":24,"column_end":33},"kind":{"Impl":{"id":338}},"from":{"krate":0,"index":5853},"to":{"krate":0,"index":2288}},{"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/dimension/conversion.rs","byte_start":376371,"byte_end":376374,"line_start":74,"line_end":74,"column_start":24,"column_end":27},"kind":{"Impl":{"id":339}},"from":{"krate":5,"index":5357},"to":{"krate":0,"index":2288}},{"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/dimension/dim.rs","byte_start":379791,"byte_end":379794,"line_start":43,"line_end":43,"column_start":9,"column_end":12},"kind":{"Impl":{"id":340}},"from":{"krate":0,"index":5698},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/dimension/dim.rs","byte_start":380292,"byte_end":380295,"line_start":67,"line_end":67,"column_start":34,"column_end":37},"kind":{"Impl":{"id":341}},"from":{"krate":0,"index":5698},"to":{"krate":2,"index":1798}},{"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/dimension/dim.rs","byte_start":380420,"byte_end":380423,"line_start":76,"line_end":76,"column_start":24,"column_end":27},"kind":{"Impl":{"id":342}},"from":{"krate":0,"index":5698},"to":{"krate":2,"index":6953}},{"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/dimension/dimension_trait.rs","byte_start":384314,"byte_end":384319,"line_start":32,"line_end":32,"column_start":5,"column_end":10},"kind":"SuperTrait","from":{"krate":2,"index":1770},"to":{"krate":0,"index":2388}},{"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/dimension/dimension_trait.rs","byte_start":384326,"byte_end":384328,"line_start":33,"line_end":33,"column_start":7,"column_end":9},"kind":"SuperTrait","from":{"krate":2,"index":1803},"to":{"krate":0,"index":2388}},{"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/dimension/dimension_trait.rs","byte_start":384335,"byte_end":384340,"line_start":34,"line_end":34,"column_start":7,"column_end":12},"kind":"SuperTrait","from":{"krate":2,"index":6953},"to":{"krate":0,"index":2388}},{"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/dimension/dimension_trait.rs","byte_start":384347,"byte_end":384351,"line_start":35,"line_end":35,"column_start":7,"column_end":11},"kind":"SuperTrait","from":{"krate":2,"index":2081},"to":{"krate":0,"index":2388}},{"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/dimension/dimension_trait.rs","byte_start":384358,"byte_end":384362,"line_start":36,"line_end":36,"column_start":7,"column_end":11},"kind":"SuperTrait","from":{"krate":2,"index":2093},"to":{"krate":0,"index":2388}},{"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/dimension/dimension_trait.rs","byte_start":384369,"byte_end":384376,"line_start":37,"line_end":37,"column_start":7,"column_end":14},"kind":"SuperTrait","from":{"krate":2,"index":2069},"to":{"krate":0,"index":2388}},{"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/dimension/dimension_trait.rs","byte_start":384383,"byte_end":384391,"line_start":38,"line_end":38,"column_start":7,"column_end":15},"kind":"SuperTrait","from":{"krate":2,"index":2366},"to":{"krate":0,"index":2388}},{"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/dimension/dimension_trait.rs","byte_start":384421,"byte_end":384424,"line_start":39,"line_end":39,"column_start":7,"column_end":10},"kind":"SuperTrait","from":{"krate":2,"index":2146},"to":{"krate":0,"index":2388}},{"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/dimension/dimension_trait.rs","byte_start":384452,"byte_end":384461,"line_start":40,"line_end":40,"column_start":7,"column_end":16},"kind":"SuperTrait","from":{"krate":2,"index":2177},"to":{"krate":0,"index":2388}},{"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/dimension/dimension_trait.rs","byte_start":384476,"byte_end":384485,"line_start":41,"line_end":41,"column_start":15,"column_end":24},"kind":"SuperTrait","from":{"krate":2,"index":2177},"to":{"krate":0,"index":2388}},{"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/dimension/dimension_trait.rs","byte_start":384502,"byte_end":384505,"line_start":42,"line_end":42,"column_start":7,"column_end":10},"kind":"SuperTrait","from":{"krate":2,"index":2151},"to":{"krate":0,"index":2388}},{"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/dimension/dimension_trait.rs","byte_start":384533,"byte_end":384542,"line_start":43,"line_end":43,"column_start":7,"column_end":16},"kind":"SuperTrait","from":{"krate":2,"index":2181},"to":{"krate":0,"index":2388}},{"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/dimension/dimension_trait.rs","byte_start":384557,"byte_end":384566,"line_start":44,"line_end":44,"column_start":15,"column_end":24},"kind":"SuperTrait","from":{"krate":2,"index":2181},"to":{"krate":0,"index":2388}},{"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/dimension/dimension_trait.rs","byte_start":384583,"byte_end":384586,"line_start":45,"line_end":45,"column_start":7,"column_end":10},"kind":"SuperTrait","from":{"krate":2,"index":2156},"to":{"krate":0,"index":2388}},{"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/dimension/dimension_trait.rs","byte_start":384615,"byte_end":384618,"line_start":46,"line_end":46,"column_start":7,"column_end":10},"kind":"SuperTrait","from":{"krate":2,"index":2156},"to":{"krate":0,"index":2388}},{"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/dimension/dimension_trait.rs","byte_start":384646,"byte_end":384655,"line_start":47,"line_end":47,"column_start":7,"column_end":16},"kind":"SuperTrait","from":{"krate":2,"index":2185},"to":{"krate":0,"index":2388}},{"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/dimension/dimension_trait.rs","byte_start":384670,"byte_end":384679,"line_start":48,"line_end":48,"column_start":15,"column_end":24},"kind":"SuperTrait","from":{"krate":2,"index":2185},"to":{"krate":0,"index":2388}},{"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/dimension/dimension_trait.rs","byte_start":384696,"byte_end":384705,"line_start":49,"line_end":49,"column_start":7,"column_end":16},"kind":"SuperTrait","from":{"krate":2,"index":2185},"to":{"krate":0,"index":2388}},{"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/dimension/dimension_trait.rs","byte_start":384719,"byte_end":384725,"line_start":50,"line_end":50,"column_start":7,"column_end":13},"kind":"SuperTrait","from":{"krate":0,"index":2266},"to":{"krate":0,"index":2388}},{"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/dimension/dimension_trait.rs","byte_start":384750,"byte_end":384756,"line_start":51,"line_end":51,"column_start":7,"column_end":13},"kind":"SuperTrait","from":{"krate":0,"index":2266},"to":{"krate":0,"index":2388}},{"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/dimension/dimension_trait.rs","byte_start":384782,"byte_end":384788,"line_start":52,"line_end":52,"column_start":7,"column_end":13},"kind":"SuperTrait","from":{"krate":0,"index":2266},"to":{"krate":0,"index":2388}},{"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/dimension/dimension_trait.rs","byte_start":384816,"byte_end":384822,"line_start":53,"line_end":53,"column_start":7,"column_end":13},"kind":"SuperTrait","from":{"krate":0,"index":2266},"to":{"krate":0,"index":2388}},{"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/dimension/dimension_trait.rs","byte_start":384872,"byte_end":384878,"line_start":54,"line_end":54,"column_start":7,"column_end":13},"kind":"SuperTrait","from":{"krate":0,"index":2266},"to":{"krate":0,"index":2388}},{"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/dimension/dimension_trait.rs","byte_start":384950,"byte_end":384956,"line_start":55,"line_end":55,"column_start":7,"column_end":13},"kind":"SuperTrait","from":{"krate":0,"index":2693},"to":{"krate":0,"index":2388}},{"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/dimension/dimension_trait.rs","byte_start":384969,"byte_end":384975,"line_start":56,"line_end":56,"column_start":7,"column_end":13},"kind":"SuperTrait","from":{"krate":0,"index":2693},"to":{"krate":0,"index":2388}},{"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/dimension/dimension_trait.rs","byte_start":385012,"byte_end":385018,"line_start":57,"line_end":57,"column_start":7,"column_end":13},"kind":"SuperTrait","from":{"krate":0,"index":2693},"to":{"krate":0,"index":2388}},{"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/dimension/dimension_trait.rs","byte_start":385054,"byte_end":385060,"line_start":58,"line_end":58,"column_start":7,"column_end":13},"kind":"SuperTrait","from":{"krate":0,"index":2693},"to":{"krate":0,"index":2388}},{"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/dimension/dimension_trait.rs","byte_start":385087,"byte_end":385093,"line_start":59,"line_end":59,"column_start":7,"column_end":13},"kind":"SuperTrait","from":{"krate":0,"index":2693},"to":{"krate":0,"index":2388}},{"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/dimension/dimension_trait.rs","byte_start":385143,"byte_end":385149,"line_start":60,"line_end":60,"column_start":7,"column_end":13},"kind":"SuperTrait","from":{"krate":0,"index":2693},"to":{"krate":0,"index":2388}},{"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/dimension/dimension_trait.rs","byte_start":395405,"byte_end":395408,"line_start":392,"line_end":392,"column_start":20,"column_end":23},"kind":{"Impl":{"id":343}},"from":{"krate":0,"index":5698},"to":{"krate":0,"index":2388}},{"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/dimension/dimension_trait.rs","byte_start":396306,"byte_end":396309,"line_start":435,"line_end":435,"column_start":20,"column_end":23},"kind":{"Impl":{"id":344}},"from":{"krate":0,"index":5698},"to":{"krate":0,"index":2388}},{"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/dimension/dimension_trait.rs","byte_start":398816,"byte_end":398819,"line_start":550,"line_end":550,"column_start":20,"column_end":23},"kind":{"Impl":{"id":345}},"from":{"krate":0,"index":5698},"to":{"krate":0,"index":2388}},{"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/dimension/dimension_trait.rs","byte_start":402496,"byte_end":402499,"line_start":706,"line_end":706,"column_start":20,"column_end":23},"kind":{"Impl":{"id":346}},"from":{"krate":0,"index":5698},"to":{"krate":0,"index":2388}},{"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/dimension/dimension_trait.rs","byte_start":407512,"byte_end":407517,"line_start":878,"line_end":878,"column_start":20,"column_end":25},"kind":{"Impl":{"id":347}},"from":{"krate":0,"index":95},"to":{"krate":0,"index":2388}},{"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/dimension/dimension_trait.rs","byte_start":408596,"byte_end":408599,"line_start":931,"line_end":931,"column_start":23,"column_end":26},"kind":{"Impl":{"id":348}},"from":{"krate":0,"index":5698},"to":{"krate":2,"index":2362}},{"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/dimension/dimension_trait.rs","byte_start":408781,"byte_end":408784,"line_start":938,"line_end":938,"column_start":26,"column_end":29},"kind":{"Impl":{"id":349}},"from":{"krate":0,"index":5698},"to":{"krate":2,"index":2366}},{"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/dimension/dynindeximpl.rs","byte_start":409224,"byte_end":409233,"line_start":16,"line_end":16,"column_start":19,"column_end":28},"kind":{"Impl":{"id":350}},"from":{"krate":0,"index":5840},"to":{"krate":2,"index":2281}},{"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/dimension/dynindeximpl.rs","byte_start":409579,"byte_end":409588,"line_start":29,"line_end":29,"column_start":22,"column_end":31},"kind":{"Impl":{"id":351}},"from":{"krate":0,"index":5840},"to":{"krate":2,"index":2294}},{"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/dimension/dynindeximpl.rs","byte_start":409988,"byte_end":409997,"line_start":42,"line_end":42,"column_start":18,"column_end":27},"kind":{"Impl":{"id":352}},"from":{"krate":0,"index":5840},"to":{"krate":2,"index":2069}},{"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/dimension/dynindeximpl.rs","byte_start":410114,"byte_end":410123,"line_start":50,"line_end":50,"column_start":22,"column_end":31},"kind":{"Impl":{"id":353}},"from":{"krate":0,"index":5840},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/dimension/dynindeximpl.rs","byte_start":410420,"byte_end":410429,"line_start":62,"line_end":62,"column_start":22,"column_end":31},"kind":{"Impl":{"id":354}},"from":{"krate":0,"index":5840},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/dimension/dynindeximpl.rs","byte_start":410671,"byte_end":410680,"line_start":73,"line_end":73,"column_start":15,"column_end":24},"kind":{"Impl":{"id":355}},"from":{"krate":0,"index":5840},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/dimension/dynindeximpl.rs","byte_start":410876,"byte_end":410885,"line_start":83,"line_end":83,"column_start":25,"column_end":34},"kind":{"Impl":{"id":356}},"from":{"krate":0,"index":5840},"to":{"krate":2,"index":1770}},{"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/dimension/dynindeximpl.rs","byte_start":411093,"byte_end":411102,"line_start":92,"line_end":92,"column_start":20,"column_end":29},"kind":{"Impl":{"id":357}},"from":{"krate":0,"index":5840},"to":{"krate":2,"index":1803}},{"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/dimension/dynindeximpl.rs","byte_start":411143,"byte_end":411152,"line_start":94,"line_end":94,"column_start":34,"column_end":43},"kind":{"Impl":{"id":358}},"from":{"krate":0,"index":5840},"to":{"krate":2,"index":1798}},{"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/dimension/dynindeximpl.rs","byte_start":411588,"byte_end":411597,"line_start":108,"line_end":108,"column_start":24,"column_end":33},"kind":{"Impl":{"id":359}},"from":{"krate":0,"index":5840},"to":{"krate":2,"index":7141}},{"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/dimension/dynindeximpl.rs","byte_start":412013,"byte_end":412022,"line_start":122,"line_end":122,"column_start":6,"column_end":15},"kind":{"Impl":{"id":360}},"from":{"krate":0,"index":5853},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/dimension/dynindeximpl.rs","byte_start":413347,"byte_end":413356,"line_start":161,"line_end":161,"column_start":29,"column_end":38},"kind":{"Impl":{"id":361}},"from":{"krate":0,"index":5853},"to":{"krate":2,"index":1997}},{"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/dimension/dynindeximpl.rs","byte_start":413485,"byte_end":413494,"line_start":168,"line_end":168,"column_start":24,"column_end":33},"kind":{"Impl":{"id":362}},"from":{"krate":0,"index":5853},"to":{"krate":2,"index":1997}},{"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/dimension/dynindeximpl.rs","byte_start":413624,"byte_end":413633,"line_start":175,"line_end":175,"column_start":22,"column_end":31},"kind":{"Impl":{"id":363}},"from":{"krate":0,"index":5853},"to":{"krate":2,"index":2362}},{"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/dimension/dynindeximpl.rs","byte_start":413813,"byte_end":413822,"line_start":185,"line_end":185,"column_start":25,"column_end":34},"kind":{"Impl":{"id":364}},"from":{"krate":0,"index":5853},"to":{"krate":2,"index":2366}},{"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/dimension/dynindeximpl.rs","byte_start":413966,"byte_end":413975,"line_start":194,"line_end":194,"column_start":16,"column_end":25},"kind":{"Impl":{"id":365}},"from":{"krate":0,"index":5853},"to":{"krate":2,"index":2281}},{"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/dimension/dynindeximpl.rs","byte_start":414090,"byte_end":414099,"line_start":202,"line_end":202,"column_start":19,"column_end":28},"kind":{"Impl":{"id":366}},"from":{"krate":0,"index":5853},"to":{"krate":2,"index":2294}},{"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/dimension/dynindeximpl.rs","byte_start":414422,"byte_end":414425,"line_start":218,"line_end":218,"column_start":21,"column_end":24},"kind":{"Impl":{"id":367}},"from":{"krate":0,"index":5698},"to":{"krate":0,"index":2712}},{"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/dimension/dynindeximpl.rs","byte_start":414601,"byte_end":414606,"line_start":225,"line_end":225,"column_start":6,"column_end":11},"kind":{"Impl":{"id":368}},"from":{"krate":0,"index":95},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/dimension/ndindex.rs","byte_start":415413,"byte_end":415418,"line_start":21,"line_end":21,"column_start":30,"column_end":35},"kind":"SuperTrait","from":{"krate":2,"index":6953},"to":{"krate":0,"index":2646}},{"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/dimension/ndindex.rs","byte_start":415613,"byte_end":415614,"line_start":28,"line_end":28,"column_start":31,"column_end":32},"kind":{"Impl":{"id":369}},"from":{"krate":0,"index":2651},"to":{"krate":0,"index":2646}},{"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/dimension/ndindex.rs","byte_start":417800,"byte_end":417802,"line_start":100,"line_end":100,"column_start":30,"column_end":32},"kind":{"Impl":{"id":370}},"from":{"krate":0,"index":2873},"to":{"krate":0,"index":2646}},{"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/dimension/ndindex.rs","byte_start":418119,"byte_end":418121,"line_start":111,"line_end":111,"column_start":32,"column_end":34},"kind":{"Impl":{"id":371}},"from":{"krate":0,"index":2873},"to":{"krate":0,"index":2646}},{"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/dimension/ops.rs","byte_start":422710,"byte_end":422713,"line_start":30,"line_end":30,"column_start":34,"column_end":37},"kind":{"Impl":{"id":372}},"from":{"krate":0,"index":81},"to":{"krate":0,"index":2693}},{"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/dimension/ops.rs","byte_start":424477,"byte_end":424482,"line_start":88,"line_end":88,"column_start":34,"column_end":39},"kind":{"Impl":{"id":373}},"from":{"krate":0,"index":95},"to":{"krate":0,"index":2693}},{"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/dimension/remove_axis.rs","byte_start":425128,"byte_end":425137,"line_start":15,"line_end":15,"column_start":23,"column_end":32},"kind":"SuperTrait","from":{"krate":0,"index":2388},"to":{"krate":0,"index":2712}},{"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/dimension/remove_axis.rs","byte_start":425219,"byte_end":425222,"line_start":19,"line_end":19,"column_start":21,"column_end":24},"kind":{"Impl":{"id":374}},"from":{"krate":0,"index":5698},"to":{"krate":0,"index":2712}},{"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/dimension/remove_axis.rs","byte_start":425389,"byte_end":425392,"line_start":27,"line_end":27,"column_start":21,"column_end":24},"kind":{"Impl":{"id":375}},"from":{"krate":0,"index":5698},"to":{"krate":0,"index":2712}},{"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/dimension/mod.rs","byte_start":336420,"byte_end":336421,"line_start":317,"line_end":317,"column_start":26,"column_end":27},"kind":{"Impl":{"id":376}},"from":{"krate":0,"index":2755},"to":{"krate":0,"index":2751}},{"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":52306,"byte_end":52318,"line_start":1449,"line_end":1449,"column_start":19,"column_end":31},"kind":{"Impl":{"id":377}},"from":{"krate":0,"index":6183},"to":{"krate":2,"index":1770}},{"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":52780,"byte_end":52791,"line_start":1466,"line_end":1466,"column_start":9,"column_end":20},"kind":{"Impl":{"id":378}},"from":{"krate":0,"index":6190},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":53246,"byte_end":53254,"line_start":1484,"line_end":1484,"column_start":9,"column_end":17},"kind":{"Impl":{"id":379}},"from":{"krate":0,"index":6198},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":53637,"byte_end":53644,"line_start":1502,"line_end":1502,"column_start":13,"column_end":20},"kind":{"Impl":{"id":380}},"from":{"krate":0,"index":2916},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_clone.rs","byte_start":428394,"byte_end":428403,"line_start":12,"line_end":12,"column_start":43,"column_end":52},"kind":{"Impl":{"id":381}},"from":{"krate":0,"index":2875},"to":{"krate":2,"index":1770}},{"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_clone.rs","byte_start":429293,"byte_end":429302,"line_start":38,"line_end":38,"column_start":48,"column_end":57},"kind":{"Impl":{"id":382}},"from":{"krate":0,"index":2875},"to":{"krate":2,"index":2091}},{"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_internal_constructors.rs","byte_start":429763,"byte_end":429772,"line_start":14,"line_end":14,"column_start":12,"column_end":21},"kind":{"Impl":{"id":383}},"from":{"krate":0,"index":2875},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_internal_constructors.rs","byte_start":430455,"byte_end":430464,"line_start":39,"line_end":39,"column_start":15,"column_end":24},"kind":{"Impl":{"id":384}},"from":{"krate":0,"index":2875},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_constructors.rs","byte_start":432471,"byte_end":432480,"line_start":44,"line_end":44,"column_start":12,"column_end":21},"kind":{"Impl":{"id":385}},"from":{"krate":0,"index":2875},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_constructors.rs","byte_start":437401,"byte_end":437410,"line_start":191,"line_end":191,"column_start":12,"column_end":21},"kind":{"Impl":{"id":386}},"from":{"krate":0,"index":2875},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_constructors.rs","byte_start":440067,"byte_end":440076,"line_start":277,"line_end":277,"column_start":15,"column_end":24},"kind":{"Impl":{"id":387}},"from":{"krate":0,"index":2875},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_constructors.rs","byte_start":452936,"byte_end":452945,"line_start":628,"line_end":628,"column_start":15,"column_end":24},"kind":{"Impl":{"id":388}},"from":{"krate":0,"index":2875},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_methods.rs","byte_start":454997,"byte_end":455006,"line_start":41,"line_end":41,"column_start":15,"column_end":24},"kind":{"Impl":{"id":389}},"from":{"krate":0,"index":2875},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_owned_array.rs","byte_start":540590,"byte_end":540595,"line_start":10,"line_end":10,"column_start":9,"column_end":14},"kind":{"Impl":{"id":390}},"from":{"krate":0,"index":2885},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_owned_array.rs","byte_start":542001,"byte_end":542006,"line_start":49,"line_end":49,"column_start":12,"column_end":17},"kind":{"Impl":{"id":391}},"from":{"krate":0,"index":2885},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_special_element_types.rs","byte_start":542995,"byte_end":543004,"line_start":20,"line_end":20,"column_start":15,"column_end":24},"kind":{"Impl":{"id":392}},"from":{"krate":0,"index":2875},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/lib.rs","byte_start":54480,"byte_end":54489,"line_start":1533,"line_end":1533,"column_start":15,"column_end":24},"kind":{"Impl":{"id":393}},"from":{"krate":0,"index":2875},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_1d.rs","byte_start":544539,"byte_end":544548,"line_start":14,"line_end":14,"column_start":12,"column_end":21},"kind":{"Impl":{"id":394}},"from":{"krate":0,"index":2875},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_2d.rs","byte_start":545380,"byte_end":545389,"line_start":13,"line_end":13,"column_start":12,"column_end":21},"kind":{"Impl":{"id":395}},"from":{"krate":0,"index":2875},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_dyn.rs","byte_start":548757,"byte_end":548766,"line_start":13,"line_end":13,"column_start":12,"column_end":21},"kind":{"Impl":{"id":396}},"from":{"krate":0,"index":2875},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/numeric/impl_numeric.rs","byte_start":550889,"byte_end":550898,"line_start":19,"line_end":19,"column_start":15,"column_end":24},"kind":{"Impl":{"id":397}},"from":{"krate":0,"index":2875},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/linalg/impl_linalg.rs","byte_start":565145,"byte_end":565154,"line_start":39,"line_end":39,"column_start":12,"column_end":21},"kind":{"Impl":{"id":398}},"from":{"krate":0,"index":2875},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/linalg/impl_linalg.rs","byte_start":569512,"byte_end":569521,"line_start":170,"line_end":170,"column_start":44,"column_end":53},"kind":{"Impl":{"id":399}},"from":{"krate":0,"index":2875},"to":{"krate":0,"index":3441}},{"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/linalg/impl_linalg.rs","byte_start":570145,"byte_end":570154,"line_start":191,"line_end":191,"column_start":44,"column_end":53},"kind":{"Impl":{"id":400}},"from":{"krate":0,"index":2875},"to":{"krate":0,"index":3441}},{"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/linalg/impl_linalg.rs","byte_start":570708,"byte_end":570717,"line_start":213,"line_end":213,"column_start":12,"column_end":21},"kind":{"Impl":{"id":401}},"from":{"krate":0,"index":2875},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/linalg/impl_linalg.rs","byte_start":571983,"byte_end":571992,"line_start":254,"line_end":254,"column_start":44,"column_end":53},"kind":{"Impl":{"id":402}},"from":{"krate":0,"index":2875},"to":{"krate":0,"index":3441}},{"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/linalg/impl_linalg.rs","byte_start":573885,"byte_end":573894,"line_start":314,"line_end":314,"column_start":44,"column_end":53},"kind":{"Impl":{"id":403}},"from":{"krate":0,"index":2875},"to":{"krate":0,"index":3441}},{"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/linalg/impl_linalg.rs","byte_start":574494,"byte_end":574503,"line_start":336,"line_end":336,"column_start":15,"column_end":24},"kind":{"Impl":{"id":404}},"from":{"krate":0,"index":2875},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_ops.rs","byte_start":592061,"byte_end":592066,"line_start":34,"line_end":34,"column_start":36,"column_end":41},"kind":"SuperTrait","from":{"krate":2,"index":1770},"to":{"krate":0,"index":3514}},{"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_ops.rs","byte_start":592548,"byte_end":592555,"line_start":50,"line_end":50,"column_start":24,"column_end":31},"kind":{"Impl":{"id":420}},"from":{"krate":19,"index":449},"to":{"krate":0,"index":3514}},{"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_ops.rs","byte_start":592587,"byte_end":592594,"line_start":51,"line_end":51,"column_start":24,"column_end":31},"kind":{"Impl":{"id":421}},"from":{"krate":19,"index":449},"to":{"krate":0,"index":3514}},{"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_ops.rs","byte_start":602742,"byte_end":602751,"line_start":350,"line_end":350,"column_start":27,"column_end":36},"kind":{"Impl":{"id":664}},"from":{"krate":0,"index":2875},"to":{"krate":2,"index":2173}},{"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_ops.rs","byte_start":603553,"byte_end":603562,"line_start":380,"line_end":380,"column_start":27,"column_end":36},"kind":{"Impl":{"id":665}},"from":{"krate":0,"index":2875},"to":{"krate":2,"index":2198}},{"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_views/constructors.rs","byte_start":607888,"byte_end":607897,"line_start":19,"line_end":19,"column_start":16,"column_end":25},"kind":{"Impl":{"id":666}},"from":{"krate":0,"index":2892},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_views/constructors.rs","byte_start":611918,"byte_end":611930,"line_start":116,"line_end":116,"column_start":16,"column_end":28},"kind":{"Impl":{"id":667}},"from":{"krate":0,"index":2896},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_views/constructors.rs","byte_start":616191,"byte_end":616200,"line_start":222,"line_end":222,"column_start":16,"column_end":25},"kind":{"Impl":{"id":668}},"from":{"krate":0,"index":2892},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_views/constructors.rs","byte_start":617035,"byte_end":617047,"line_start":245,"line_end":245,"column_start":16,"column_end":28},"kind":{"Impl":{"id":669}},"from":{"krate":0,"index":2896},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_views/conversions.rs","byte_start":618540,"byte_end":618549,"line_start":20,"line_end":20,"column_start":16,"column_end":25},"kind":{"Impl":{"id":670}},"from":{"krate":0,"index":2892},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_views/conversions.rs","byte_start":619759,"byte_end":619768,"line_start":58,"line_end":58,"column_start":13,"column_end":22},"kind":{"Impl":{"id":671}},"from":{"krate":0,"index":2892},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_views/conversions.rs","byte_start":620636,"byte_end":620648,"line_start":87,"line_end":87,"column_start":13,"column_end":25},"kind":{"Impl":{"id":672}},"from":{"krate":0,"index":2896},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_views/conversions.rs","byte_start":621321,"byte_end":621333,"line_start":109,"line_end":109,"column_start":16,"column_end":28},"kind":{"Impl":{"id":673}},"from":{"krate":0,"index":2896},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_views/conversions.rs","byte_start":622489,"byte_end":622498,"line_start":139,"line_end":139,"column_start":16,"column_end":25},"kind":{"Impl":{"id":674}},"from":{"krate":0,"index":2892},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_views/conversions.rs","byte_start":623212,"byte_end":623224,"line_start":168,"line_end":168,"column_start":16,"column_end":28},"kind":{"Impl":{"id":675}},"from":{"krate":0,"index":2896},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_views/indexing.rs","byte_start":629895,"byte_end":629907,"line_start":145,"line_end":145,"column_start":38,"column_end":50},"kind":{"Impl":{"id":676}},"from":{"krate":0,"index":2896},"to":{"krate":0,"index":3696}},{"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_views/splitting.rs","byte_start":632307,"byte_end":632316,"line_start":13,"line_end":13,"column_start":16,"column_end":25},"kind":{"Impl":{"id":677}},"from":{"krate":0,"index":2892},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_views/splitting.rs","byte_start":636403,"byte_end":636415,"line_start":99,"line_end":99,"column_start":16,"column_end":28},"kind":{"Impl":{"id":678}},"from":{"krate":0,"index":2896},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_raw_views.rs","byte_start":638131,"byte_end":638143,"line_start":10,"line_end":10,"column_start":12,"column_end":24},"kind":{"Impl":{"id":679}},"from":{"krate":0,"index":2900},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_raw_views.rs","byte_start":643944,"byte_end":643959,"line_start":152,"line_end":152,"column_start":12,"column_end":27},"kind":{"Impl":{"id":680}},"from":{"krate":0,"index":2903},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_cow.rs","byte_start":650529,"byte_end":650537,"line_start":16,"line_end":16,"column_start":16,"column_end":24},"kind":{"Impl":{"id":681}},"from":{"krate":0,"index":2888},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_cow.rs","byte_start":650893,"byte_end":650901,"line_start":31,"line_end":31,"column_start":46,"column_end":54},"kind":{"Impl":{"id":682}},"from":{"krate":0,"index":2888},"to":{"krate":2,"index":1997}},{"span":{"file_name":"/Users/trevorschirra/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.1/src/impl_cow.rs","byte_start":651245,"byte_end":651253,"line_start":44,"line_end":44,"column_start":38,"column_end":46},"kind":{"Impl":{"id":683}},"from":{"krate":0,"index":2888},"to":{"krate":2,"index":1997}}]}